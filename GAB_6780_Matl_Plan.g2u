Program.Sub.ScreenSU.Start
Gui.frmPO..Create(BaseForm)
Gui.frmPO..Caption("Purchasing Dashboard")
Gui.frmPO..Size(18375,13365)
Gui.frmPO..MinX(16350)
Gui.frmPO..MinY(12825)
Gui.frmPO..Position(0,0)
Gui.frmPO..BackColor(-2147483633)
Gui.frmPO..MousePointer(0)
Gui.frmPO..Event(UnLoad,frmPO_UnLoad)
Gui.frmPO..Event(Resize,frmPO_Resize)
Gui.frmPO..AlwaysOnTop(False)
Gui.frmPO..FontName("Tahoma")
Gui.frmPO..FontSize(8.25)
Gui.frmPO..ControlBox(True)
Gui.frmPO..MaxButton(True)
Gui.frmPO..MinButton(True)
Gui.frmPO..Moveable(True)
Gui.frmPO..Sizeable(True)
Gui.frmPO..ShowInTaskBar(True)
Gui.frmPO..TitleBar(True)
Gui.frmPO.picGSSLogo.Create(PictureBox)
Gui.frmPO.picGSSLogo.Size(4125,960)
Gui.frmPO.picGSSLogo.Position(6090,45)
Gui.frmPO.picGSSLogo.Anchor(1)
Gui.frmPO.picGSSLogo.Enabled(True)
Gui.frmPO.picGSSLogo.Visible(True)
Gui.frmPO.picGSSLogo.Zorder(0)
Gui.frmPO.lblStatus.Create(Label,"Loading PO Data....",False,1575,255,0,105,75,True,0,"Arial",8,-2147483633,0,0)
Gui.frmPO.lblStatus.BorderStyle(0)
Gui.frmPO.progBarStatus.Create(ProgressBar)
Gui.frmPO.progBarStatus.Visible(False)
Gui.frmPO.progBarStatus.Size(2895,135)
Gui.frmPO.progBarStatus.Position(90,300)
Gui.frmPO.GsGCDemand.Create(GsGridControl)
Gui.frmPO.GsGCDemand.Size(5310,3765)
Gui.frmPO.GsGCDemand.Position(120,8955)
Gui.frmPO.GsGCDemand.Event(RowCellClick,Hyperlinks)
Gui.frmPO.GsGCDemand.Enabled(True)
Gui.frmPO.GsGCDemand.Visible(True)
Gui.frmPO.GsGCDemand.Zorder(0)
Gui.frmPO.lblSupply.Create(Label,"Supply",True,555,210,0,12180,8565,True,0,"Arial",8,-2147483633,0,0)
Gui.frmPO.lblSupply.FontStyle(True,False,False,False,False)
Gui.frmPO.lblSupply.BorderStyle(0)
Gui.frmPO.GsGCSupply.Create(GsGridControl)
Gui.frmPO.GsGCSupply.Size(5310,3765)
Gui.frmPO.GsGCSupply.Position(12180,8970)
Gui.frmPO.GsGCSupply.Event(RowCellClick,Hyperlinks)
Gui.frmPO.GsGCSupply.Enabled(True)
Gui.frmPO.GsGCSupply.Visible(True)
Gui.frmPO.GsGCSupply.Zorder(0)
Gui.frmPO.lblDemand.Create(Label,"Demand",True,675,210,0,150,8550,True,0,"Arial",8,-2147483633,0,0)
Gui.frmPO.lblDemand.FontStyle(True,False,False,False,False)
Gui.frmPO.lblDemand.BorderStyle(0)
Gui.frmPO.GsGCVendQte.Create(GsGridControl)
Gui.frmPO.GsGCVendQte.Size(6405,3765)
Gui.frmPO.GsGCVendQte.Position(5625,8955)
Gui.frmPO.GsGCVendQte.Enabled(True)
Gui.frmPO.GsGCVendQte.Visible(True)
Gui.frmPO.GsGCVendQte.Zorder(0)
Gui.frmPO.GsGCVendQte.Event(RowCellClick,GsGCVendQte_RowCellClick)
Gui.frmPO.lblVendQte.Create(Label,"Vendor Quote",True,1155,210,0,5835,8550,True,0,"Arial",8,-2147483633,0,0)
Gui.frmPO.lblVendQte.FontStyle(True,False,False,False,False)
Gui.frmPO.lblVendQte.BorderStyle(0)
Gui.frmPO.dtpCutoff.Create(DatePicker)
Gui.frmPO.dtpCutoff.Size(1425,285)
Gui.frmPO.dtpCutoff.Position(1305,720)
Gui.frmPO.dtpCutoff.Enabled(False)
Gui.frmPO.dtpCutoff.Visible(True)
Gui.frmPO.dtpCutoff.Zorder(0)
Gui.frmPO.dtpCutoff.CheckBox(False)
Gui.frmPO.dtpCutoff.FontName("Tahoma")
Gui.frmPO.dtpCutoff.FontSize(8.25)
Gui.frmPO.cmdRefresh.Create(Button)
Gui.frmPO.cmdRefresh.Size(390,330)
Gui.frmPO.cmdRefresh.Position(2760,705)
Gui.frmPO.cmdRefresh.Caption("REFRESH")
Gui.frmPO.cmdRefresh.Event(Click,cmdRefresh_Click)
Gui.frmPO.cmdRefresh.Enabled(True)
Gui.frmPO.cmdRefresh.Visible(True)
Gui.frmPO.cmdRefresh.Zorder(0)
Gui.frmPO.cmdRefresh.FontName("Tahoma")
Gui.frmPO.cmdRefresh.FontSize(8.25)
Gui.frmPO.chkCutoff.Create(CheckBox)
Gui.frmPO.chkCutoff.Size(1260,300)
Gui.frmPO.chkCutoff.Position(30,780)
Gui.frmPO.chkCutoff.Caption("Cutoff Date:")
Gui.frmPO.chkCutoff.Event(Click,chkCutoff_Click)
Gui.frmPO.chkCutoff.Enabled(True)
Gui.frmPO.chkCutoff.Visible(True)
Gui.frmPO.chkCutoff.Zorder(0)
Gui.frmPO.chkCutoff.FontName("Tahoma")
Gui.frmPO.chkCutoff.FontSize(8.25)
Gui.frmPO.tabPO.Create(Tab)
Gui.frmPO.tabPO.Size(17670,7275)
Gui.frmPO.tabPO.Position(30,1050)
Gui.frmPO.tabPO.Anchor(15)
Gui.frmPO.tabPO.Event(Click,tabPO_Click)
Gui.frmPO.tabPO.Enabled(True)
Gui.frmPO.tabPO.Visible(True)
Gui.frmPO.tabPO.Zorder(0)
Gui.frmPO.tabPO.FontName("Tahoma")
Gui.frmPO.tabPO.FontSize(8.25)
Gui.frmPO.tabPO.Tabs(5)
Gui.frmPO.tabPO.SetTab(0)
Gui.frmPO.tabPO.Caption("Purchase To Stock")
Gui.frmPO.tabPO.SetTab(1)
Gui.frmPO.tabPO.Caption("Drop Ship POs")
Gui.frmPO.tabPO.SetTab(2)
Gui.frmPO.tabPO.Caption("Requisitions")
Gui.frmPO.tabPO.SetTab(3)
Gui.frmPO.tabPO.Caption("Purchase To Jobs")
Gui.frmPO.tabPO.SetTab(4)
Gui.frmPO.tabPO.Caption("Outside Service Requests")
Gui.frmPO.GsGCPO.Create(GsGridControl)
Gui.frmPO.GsGCPO.Size(17475,6705)
Gui.frmPO.GsGCPO.Position(0,45)
Gui.frmPO.GsGCPO.Event(RowCellClick,GsGCPO_RowCellClick)
Gui.frmPO.GsGCPO.Parent("tabPO",0)
Gui.frmPO.GsGCPO.Enabled(True)
Gui.frmPO.GsGCPO.Visible(True)
Gui.frmPO.GsGCPO.Zorder(0)
Gui.frmPO.GsGCPO.Anchor(15)
Gui.frmPO.GsGCPODrop.Create(GsGridControl)
Gui.frmPO.GsGCPODrop.Size(17370,6915)
Gui.frmPO.GsGCPODrop.Position(0,0)
Gui.frmPO.GsGCPODrop.Parent("tabPO",1)
Gui.frmPO.GsGCPODrop.Event(RowCellClick,GsGCPO_RowCellClick)
Gui.frmPO.GsGCPODrop.Enabled(True)
Gui.frmPO.GsGCPODrop.Visible(True)
Gui.frmPO.GsGCPODrop.Zorder(0)
Gui.frmPO.GsGCPODrop.Anchor(15)
Gui.frmPO.GsGCReqs.Create(GsGridControl)
Gui.frmPO.GsGCReqs.Size(17475,6885)
Gui.frmPO.GsGCReqs.Position(0,30)
Gui.frmPO.GsGCReqs.Parent("tabPO",2)
Gui.frmPO.GsGCReqs.Event(RowCellClick,GsGCPO_RowCellClick)
Gui.frmPO.GsGCReqs.Enabled(True)
Gui.frmPO.GsGCReqs.Visible(True)
Gui.frmPO.GsGCReqs.Zorder(0)
Gui.frmPO.GsGCReqs.Event(CellValueChanged,GsGCReqs_CellValueChanged)
Gui.frmPO.gsPJ.Create(GsGridControl)
Gui.frmPO.gsPJ.Size(17295,6015)
Gui.frmPO.gsPJ.Position(0,360)
Gui.frmPO.gsPJ.Parent("tabPO",3)
Gui.frmPO.gsPJ.Event(RowCellClick,gsPJ_RowCellClick)
Gui.frmPO.gsPJ.Event(CellValueChanged,gsPJ_CellValueChanged)
Gui.frmPO.gsPJ.Enabled(True)
Gui.frmPO.gsPJ.Visible(True)
Gui.frmPO.gsPJ.Zorder(0)
Gui.frmPO.cmdPJRefresh.Create(Button)
Gui.frmPO.cmdPJRefresh.Size(645,300)
Gui.frmPO.cmdPJRefresh.Position(0,0)
Gui.frmPO.cmdPJRefresh.Parent("tabPO",3)
Gui.frmPO.cmdPJRefresh.Caption("Refresh")
Gui.frmPO.cmdPJRefresh.Event(Click,cmdPJRefresh_Click)
Gui.frmPO.cmdPJRefresh.Enabled(True)
Gui.frmPO.cmdPJRefresh.Visible(True)
Gui.frmPO.cmdPJRefresh.Zorder(0)
Gui.frmPO.cmdPJRefresh.FontName("Tahoma")
Gui.frmPO.cmdPJRefresh.FontSize(8.25)
Gui.frmPO.chkOpenPOMaint.Create(CheckBox)
Gui.frmPO.chkOpenPOMaint.Size(4665,300)
Gui.frmPO.chkOpenPOMaint.Position(750,45)
Gui.frmPO.chkOpenPOMaint.Parent("tabPO",3)
Gui.frmPO.chkOpenPOMaint.Caption("Open PO Maintenance after Auto PO Grouped Created ")
Gui.frmPO.chkOpenPOMaint.FontSize(7)
Gui.frmPO.chkOpenPOMaint.Enabled(True)
Gui.frmPO.chkOpenPOMaint.Visible(False)
Gui.frmPO.chkOpenPOMaint.Zorder(0)
Gui.frmPO.chkOpenPOMaint.FontName("Tahoma")
Gui.frmPO.GSGCOSV.Create(GsGridControl)
Gui.frmPO.GSGCOSV.Enabled(True)
Gui.frmPO.GSGCOSV.Visible(True)
Gui.frmPO.GSGCOSV.Zorder(0)
Gui.frmPO.GSGCOSV.Size(17595,6750)
Gui.frmPO.GSGCOSV.Position(-15,15)
Gui.frmPO.GSGCOSV.Parent("tabPO",4)
Gui.frmPO.GSGCOSV.Event(RowCellClick,GSGCOSV_RowCellClick)
Gui.frmPO.frameOptions.Create(Frame)
Gui.frmPO.frameOptions.Size(2025,1305)
Gui.frmPO.frameOptions.Position(15705,105)
Gui.frmPO.frameOptions.Caption("Options")
Gui.frmPO.frameOptions.Anchor(9)
Gui.frmPO.frameOptions.Enabled(True)
Gui.frmPO.frameOptions.Visible(True)
Gui.frmPO.frameOptions.Zorder(0)
Gui.frmPO.frameOptions.FontName("Tahoma")
Gui.frmPO.frameOptions.FontSize(8.25)
Gui.frmPO.ddlCost.Create(DropDownList)
Gui.frmPO.ddlCost.Size(1935,330)
Gui.frmPO.ddlCost.Position(45,210)
Gui.frmPO.ddlCost.Parent("frameOptions")
Gui.frmPO.ddlCost.Event(Click,SaveCostOpt)
Gui.frmPO.ddlCost.Enabled(True)
Gui.frmPO.ddlCost.Visible(True)
Gui.frmPO.ddlCost.Zorder(0)
Gui.frmPO.ddlCost.FontName("Tahoma")
Gui.frmPO.ddlCost.FontSize(8.25)
Gui.frmPO.ddlPOs.Create(DropDownList)
Gui.frmPO.ddlPOs.Size(1935,300)
Gui.frmPO.ddlPOs.Position(45,570)
Gui.frmPO.ddlPOs.Parent("frameOptions")
Gui.frmPO.ddlPOs.Enabled(True)
Gui.frmPO.ddlPOs.Visible(True)
Gui.frmPO.ddlPOs.Zorder(0)
Gui.frmPO.ddlPOs.FontName("Tahoma")
Gui.frmPO.ddlPOs.FontSize(8.25)
Gui.frmPO.ddlPOs.Event(Change,SavePOOpt)
Gui.frmPO.ddlEmail.Create(DropDownList)
Gui.frmPO.ddlEmail.Size(1935,330)
Gui.frmPO.ddlEmail.Position(45,930)
Gui.frmPO.ddlEmail.Parent("frameOptions")
Gui.frmPO.ddlEmail.Event(Click,SaveEmailOpt)
Gui.frmPO.ddlEmail.Enabled(True)
Gui.frmPO.ddlEmail.Visible(True)
Gui.frmPO.ddlEmail.Zorder(0)
Gui.frmPO.ddlEmail.FontName("Tahoma")
Gui.frmPO.ddlEmail.FontSize(8.25)
Gui.frmPO.lblProgress.Create(Label,"",True,2940,255,0,60,510,True,0,"Arial",8,-2147483633,0,0)
Gui.frmPO.lblProgress.BorderStyle(0)
Gui.frmPO.cmd1.Create(Button)
Gui.frmPO.cmd1.Enabled(True)
Gui.frmPO.cmd1.Visible(True)
Gui.frmPO.cmd1.Zorder(0)
Gui.frmPO.cmd1.Size(1485,405)
Gui.frmPO.cmd1.Position(13380,900)
Gui.frmPO.cmd1.Caption("Purch Action Req")
Gui.frmPO.cmd1.FontName("Tahoma")
Gui.frmPO.cmd1.FontSize(8.25)
Gui.frmPO.cmd1.Event(MouseClick,ButtonPOAR_Click)
Gui.frmPO.cmd1.Anchor(9)
Gui.frmPO.chkBrwVends.Create(CheckBox)
Gui.frmPO.chkBrwVends.Enabled(True)
Gui.frmPO.chkBrwVends.Visible(True)
Gui.frmPO.chkBrwVends.Zorder(0)
Gui.frmPO.chkBrwVends.Size(1470,300)
Gui.frmPO.chkBrwVends.Position(9240,8430)
Gui.frmPO.chkBrwVends.Caption("Browse Vendors")
Gui.frmPO.chkBrwVends.FontName("Tahoma")
Gui.frmPO.chkBrwVends.FontSize(8.25)
Gui.frmPO.chkBrwVends.Event(Click,chkBrwVends_Click)
Gui.frmPO.chkOpenPOMaint2.Create(CheckBox)
Gui.frmPO.chkOpenPOMaint2.Enabled(True)
Gui.frmPO.chkOpenPOMaint2.Visible(True)
Gui.frmPO.chkOpenPOMaint2.Zorder(0)
Gui.frmPO.chkOpenPOMaint2.Size(4080,300)
Gui.frmPO.chkOpenPOMaint2.Position(11445,330)
Gui.frmPO.chkOpenPOMaint2.Caption("Open PO Maintenance after Auto PO Created ")
Gui.frmPO.chkOpenPOMaint2.FontName("Tahoma")
Gui.frmPO.chkOpenPOMaint2.FontSize(7)
Gui.frmPO.chkOpenPOMaint2.Value(1)
Gui.frmPO.chkOpenPOMaint2.Anchor(9)
Gui.frmMRP..Create(BaseForm)
Gui.frmMRP..Caption("MRP")
Gui.frmMRP..Size(11715,8760)
Gui.frmMRP..MinX(0)
Gui.frmMRP..MinY(0)
Gui.frmMRP..Position(0,0)
Gui.frmMRP..BackColor(-2147483633)
Gui.frmMRP..MousePointer(0)
Gui.frmMRP..Event(UnLoad,frmMRP_UnLoad)
Gui.frmMRP..AlwaysOnTop(False)
Gui.frmMRP..FontName("Tahoma")
Gui.frmMRP..FontSize(8.25)
Gui.frmMRP..ControlBox(True)
Gui.frmMRP..MaxButton(True)
Gui.frmMRP..MinButton(True)
Gui.frmMRP..Moveable(True)
Gui.frmMRP..Sizeable(True)
Gui.frmMRP..ShowInTaskBar(True)
Gui.frmMRP..TitleBar(True)
Gui.frmMRP.GsGCMRP.Create(GsGridControl)
Gui.frmMRP.GsGCMRP.Size(11460,6960)
Gui.frmMRP.GsGCMRP.Position(60,1455)
Gui.frmMRP.GsGCMRP.Anchor(15)
Gui.frmMRP.GsGCMRP.Enabled(True)
Gui.frmMRP.GsGCMRP.Visible(True)
Gui.frmMRP.GsGCMRP.Zorder(0)
Gui.frmMRP.lblPart.Create(Label,"Part: ",True,2760,255,0,150,135,True,0,"Arial",8,-2147483633,0,0)
Gui.frmMRP.lblPart.BorderStyle(0)
Gui.frmMRP.lblLoc.Create(Label,"Loc:",True,2760,255,0,150,405,True,0,"Arial",8,-2147483633,0,0)
Gui.frmMRP.lblLoc.BorderStyle(0)
Gui.frmMRP.lblCurOnHand.Create(Label,"Initial On Hand Qty:",True,2760,255,0,150,1215,True,0,"Arial",8,-2147483633,0,0)
Gui.frmMRP.lblCurOnHand.BorderStyle(0)
Gui.frmMRP.lblOrderQty.Create(Label,"Order Qty:",True,2760,255,0,150,675,True,0,"Arial",8,-2147483633,0,0)
Gui.frmMRP.lblOrderQty.BorderStyle(0)
Gui.frmMRP.lblROP.Create(Label,"Reorder Point :",True,2760,255,0,150,945,True,0,"Arial",8,-2147483633,0,0)
Gui.frmMRP.lblROP.BorderStyle(0)
Gui.frmHistory..Create(BaseForm)
Gui.frmHistory..Caption("PO History")
Gui.frmHistory..Size(15405,7395)
Gui.frmHistory..MinX(0)
Gui.frmHistory..MinY(0)
Gui.frmHistory..Position(0,0)
Gui.frmHistory..BackColor(-2147483633)
Gui.frmHistory..MousePointer(0)
Gui.frmHistory..Event(UnLoad,frmHistory_UnLoad)
Gui.frmHistory..AlwaysOnTop(False)
Gui.frmHistory..FontName("Tahoma")
Gui.frmHistory..FontSize(8.25)
Gui.frmHistory..ControlBox(True)
Gui.frmHistory..MaxButton(True)
Gui.frmHistory..MinButton(True)
Gui.frmHistory..Moveable(True)
Gui.frmHistory..Sizeable(True)
Gui.frmHistory..ShowInTaskBar(True)
Gui.frmHistory..TitleBar(True)
Gui.frmHistory.GsGCHistory.Create(GsGridControl)
Gui.frmHistory.GsGCHistory.Size(15270,7080)
Gui.frmHistory.GsGCHistory.Position(15,15)
Gui.frmHistory.GsGCHistory.Event(RowCellClick,GsGCHistory_RowCellClick)
Gui.frmHistory.GsGCHistory.Anchor(15)
Gui.frmHistory.GsGCHistory.Enabled(True)
Gui.frmHistory.GsGCHistory.Visible(True)
Gui.frmHistory.GsGCHistory.Zorder(0)
Gui.frmPrevEmail..Create(BaseForm)
Gui.frmPrevEmail..Caption("PO - Preview Emails")
Gui.frmPrevEmail..Size(14820,5625)
Gui.frmPrevEmail..MinX(14820)
Gui.frmPrevEmail..MinY(5625)
Gui.frmPrevEmail..Position(0,0)
Gui.frmPrevEmail..BackColor(-2147483633)
Gui.frmPrevEmail..MousePointer(0)
Gui.frmPrevEmail..Event(UnLoad,frmPrevEmail_UnLoad)
Gui.frmPrevEmail..MaxButton(False)
Gui.frmPrevEmail..MinButton(False)
Gui.frmPrevEmail..AlwaysOnTop(False)
Gui.frmPrevEmail..FontName("Tahoma")
Gui.frmPrevEmail..FontSize(8.25)
Gui.frmPrevEmail..ControlBox(True)
Gui.frmPrevEmail..Moveable(True)
Gui.frmPrevEmail..Sizeable(True)
Gui.frmPrevEmail..ShowInTaskBar(True)
Gui.frmPrevEmail..TitleBar(True)
Gui.frmPrevEmail.GsGCPrevEml.Create(GsGridControl)
Gui.frmPrevEmail.GsGCPrevEml.Size(14655,4905)
Gui.frmPrevEmail.GsGCPrevEml.Position(15,15)
Gui.frmPrevEmail.GsGCPrevEml.Event(RowCellClick,GsGCPrevEml_RowCellClick)
Gui.frmPrevEmail.GsGCPrevEml.Enabled(True)
Gui.frmPrevEmail.GsGCPrevEml.Visible(True)
Gui.frmPrevEmail.GsGCPrevEml.Zorder(0)
Gui.frmPrevEmail.cmdSend.Create(Button)
Gui.frmPrevEmail.cmdSend.Size(1125,375)
Gui.frmPrevEmail.cmdSend.Position(13545,4935)
Gui.frmPrevEmail.cmdSend.Caption("Send Emails")
Gui.frmPrevEmail.cmdSend.Event(Click,cmdSend_Click)
Gui.frmPrevEmail.cmdSend.Enabled(True)
Gui.frmPrevEmail.cmdSend.Visible(True)
Gui.frmPrevEmail.cmdSend.Zorder(0)
Gui.frmPrevEmail.cmdSend.FontName("Tahoma")
Gui.frmPrevEmail.cmdSend.FontSize(8.25)
Gui.frmPrevEmail.lblStatus.Create(Label,"Sending Emails....",False,1635,255,0,15,5010,True,0,"Arial",8,-2147483633,0,0)
Gui.frmPrevEmail.lblStatus.BorderStyle(0)
Gui.frmPrevEmail.pbStatus.Create(ProgressBar)
Gui.frmPrevEmail.pbStatus.Size(2475,255)
Gui.frmPrevEmail.pbStatus.Position(1665,4950)
Gui.frmPrevEmail.pbStatus.Visible(False)
Gui.frmEmail..Create(BaseForm)
Gui.frmEmail..Size(7140,8475)
Gui.frmEmail..MinX(7260)
Gui.frmEmail..MinY(7005)
Gui.frmEmail..Position(0,0)
Gui.frmEmail..BackColor(-2147483633)
Gui.frmEmail..MousePointer(0)
Gui.frmEmail..Event(UnLoad,frmEmail_UnLoad)
Gui.frmEmail..Caption("Edit Email")
Gui.frmEmail..MaxButton(False)
Gui.frmEmail..Sizeable(False)
Gui.frmEmail..AlwaysOnTop(False)
Gui.frmEmail..FontName("Tahoma")
Gui.frmEmail..FontSize(8.25)
Gui.frmEmail..ControlBox(True)
Gui.frmEmail..MinButton(True)
Gui.frmEmail..Moveable(True)
Gui.frmEmail..ShowInTaskBar(True)
Gui.frmEmail..TitleBar(True)
Gui.frmEmail.txtBody.Create(TextboxM)
Gui.frmEmail.txtBody.Size(6915,3810)
Gui.frmEmail.txtBody.Position(75,2310)
Gui.frmEmail.txtBody.Enabled(True)
Gui.frmEmail.txtBody.Visible(True)
Gui.frmEmail.txtBody.Zorder(0)
Gui.frmEmail.txtBody.FontName("Tahoma")
Gui.frmEmail.txtBody.FontSize(8.25)
Gui.frmEmail.txtSubject.Create(TextboxM)
Gui.frmEmail.txtSubject.Size(6915,300)
Gui.frmEmail.txtSubject.Position(75,1665)
Gui.frmEmail.txtSubject.Enabled(True)
Gui.frmEmail.txtSubject.Visible(True)
Gui.frmEmail.txtSubject.Zorder(0)
Gui.frmEmail.txtSubject.FontName("Tahoma")
Gui.frmEmail.txtSubject.FontSize(8.25)
Gui.frmEmail.lblBody.Create(Label,"Body:",True,660,255,0,75,2085,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblBody.BorderStyle(0)
Gui.frmEmail.lblSubject.Create(Label,"Subject:",True,765,255,0,75,1440,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblSubject.BorderStyle(0)
Gui.frmEmail.txtSName.Create(TextBox,"",True,3375,300,0,75,360,True,0,"Arial",8,-2147483643,1)
Gui.frmEmail.txtSName.MaxLength(30)
Gui.frmEmail.txtRName.Create(TextBox,"",True,3375,300,0,75,975,True,0,"Arial",8,-2147483643,1)
Gui.frmEmail.txtRName.MaxLength(30)
Gui.frmEmail.txtSEmail.Create(TextBox,"",True,3375,300,0,3570,360,True,0,"Arial",8,-2147483643,1)
Gui.frmEmail.txtSEmail.MaxLength(100)
Gui.frmEmail.txtREmail.Create(TextBox,"",True,3375,300,0,3570,975,True,0,"Arial",8,-2147483643,1)
Gui.frmEmail.txtREmail.MaxLength(100)
Gui.frmEmail.lblSName.Create(Label,"Sender Name:",True,1200,210,0,45,135,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblSName.BorderStyle(0)
Gui.frmEmail.lblSEmail.Create(Label,"Sender Email:",True,1200,210,0,3540,135,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblSEmail.BorderStyle(0)
Gui.frmEmail.lblREmail.Create(Label,"Recipient Email:",True,1305,210,0,3540,750,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblREmail.BorderStyle(0)
Gui.frmEmail.lblRName.Create(Label,"Recipient Name:",True,1350,210,0,45,750,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblRName.BorderStyle(0)
Gui.frmEmail.cmdSave.Create(Button)
Gui.frmEmail.cmdSave.Size(855,330)
Gui.frmEmail.cmdSave.Position(75,7800)
Gui.frmEmail.cmdSave.Caption("Save")
Gui.frmEmail.cmdSave.Event(Click,cmdSavePreview_Click)
Gui.frmEmail.cmdSave.Enabled(True)
Gui.frmEmail.cmdSave.Visible(True)
Gui.frmEmail.cmdSave.Zorder(0)
Gui.frmEmail.cmdSave.FontName("Tahoma")
Gui.frmEmail.cmdSave.FontSize(8.25)
Gui.frmEmail.txtRow.Create(TextBox,"",False,330,300,0,6660,7815,True,0,"Arial",8,-2147483643,1)
Gui.frmEmail.txtAttach.Create(TextboxM)
Gui.frmEmail.txtAttach.Size(6915,1290)
Gui.frmEmail.txtAttach.Position(75,6465)
Gui.frmEmail.txtAttach.Enabled(True)
Gui.frmEmail.txtAttach.Visible(True)
Gui.frmEmail.txtAttach.Zorder(0)
Gui.frmEmail.txtAttach.FontName("Tahoma")
Gui.frmEmail.txtAttach.FontSize(8.25)
Gui.frmEmail.lblActtach.Create(Label,"Attachment(s):",True,1185,255,0,75,6240,True,0,"Arial",8,-2147483633,0,0)
Gui.frmEmail.lblActtach.BorderStyle(0)
Gui.frmEmail.txtDropFiles.Create(TextBox,"Drop Files Here",True,1425,300,0,1275,6150,True,2,"Arial",8,11119017,1)
Gui.frmEmail.txtDropFiles.FontStyle(True,False,False,False,False)
Gui.frmEmail.txtDropFiles.Locked(True)
Gui.frmNotes..Create(BaseForm)
Gui.frmNotes..Caption("Notes: Part: Loc: ")
Gui.frmNotes..Size(14460,7425)
Gui.frmNotes..MinX(0)
Gui.frmNotes..MinY(0)
Gui.frmNotes..Position(0,0)
Gui.frmNotes..BackColor(-2147483633)
Gui.frmNotes..MousePointer(0)
Gui.frmNotes..Event(UnLoad,frmNotes_UnLoad)
Gui.frmNotes..AlwaysOnTop(False)
Gui.frmNotes..FontName("Tahoma")
Gui.frmNotes..FontSize(8.25)
Gui.frmNotes..ControlBox(True)
Gui.frmNotes..MaxButton(True)
Gui.frmNotes..MinButton(True)
Gui.frmNotes..Moveable(True)
Gui.frmNotes..Sizeable(True)
Gui.frmNotes..ShowInTaskBar(True)
Gui.frmNotes..TitleBar(True)
Gui.frmNotes.GsGCNotes.Create(GsGridControl)
Gui.frmNotes.GsGCNotes.Size(14310,7125)
Gui.frmNotes.GsGCNotes.Position(0,0)
Gui.frmNotes.GsGCNotes.Event(CellValueChanged,GsGCNotes_CellValueChanged)
Gui.frmNotes.GsGCNotes.Enabled(True)
Gui.frmNotes.GsGCNotes.Visible(True)
Gui.frmNotes.GsGCNotes.Zorder(0)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.sPart.Declare
	V.Global.sLoc.Declare
	V.Global.fQty.Declare
	V.Global.sDt.Declare
	V.Global.iRowIndex.Declare
	V.Global.bVendQte.Declare
	V.Global.bVendQte.Set(True)
	V.Global.sGsGCIcon.Declare
	V.Global.sPart2.Declare
	V.Global.sLoc2.Declare
	
	v.Global.gvPO.Declare(Boolean,False)
	v.Global.gvPODrop.Declare(Boolean,False)
	v.Global.gvPONew.Declare(Boolean,False)
	v.Global.gvReqs.Declare(Boolean,False)
	v.Global.gvPJ.Declare(Boolean,False)
	v.Global.bPOReq.Declare(Boolean,False)
	
	'Integration of Atec from 5490
	v.Global.bAtec.Declare
	
	Program.External.Include.Library("175100_Mod.lib")
Program.Sub.Preflight.End

Program.Sub.Main.Start
'BN, Oct 22, 2019
'Modified dashboard, added Purchase to Job Tab and some other features to Purchase to Stock and other tabs:
'***Serialization
'***new column Net Qty
'***context menu item added: 
	'Copy Part Number, Supply and Demand 
'F.Intrinsic.Control.CallSub(NewPurchToStock)
'Function.Intrinsic.Debug.InvokeDebugger
'Function.Intrinsic.Debug.Stop

F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.sRet.Declare	
	V.Local.sIcon.Declare
	V.Local.sGssLogo.Declare
	
	'Check if called from Atec
	F.Global.Registry.ReadValue("SUPERVSR",V.Caller.CompanyCode,"ATEC",5988,1001,5,"",V.Local.sRet)
	f.Intrinsic.Control.IIF(v.Local.sRet,=,"Y",True,False,V.Global.bAtec)
	
	'Set Logo in GsGridControl Group Header
	F.Intrinsic.String.Build("{0}\GAB_GSS_Logo_Green_Dash.png",V.Caller.ArtDir,V.Global.sGsGCIcon)
	
	'Invisible 2 buttons Top of Vendor grid
	'Gui.frmPO.cmdViewVendQte.Visible(False)
	'Gui.frmPO.cmdNewVendQte.Visible(False)	
	
	F.Intrinsic.Control.SelectCase(V.Caller.Hook)
		'Purchasing > File > Vendor Quotes > New Populate hook
		F.Intrinsic.Control.Case(12990)
			'Label Script 3 button
			V.Passed.000203.Set("Pref Vendor")
		
		'Purchasing > File > Vendor Quotes > Script 3 button hook
		F.Intrinsic.Control.Case(13040)
			F.ODBC.Connection!con.OpenCompanyConnection(500)
			F.Intrinsic.Control.CallSub("SetPrefVendor")
			F.ODBC.Connection!con.Close

		F.Intrinsic.Control.CaseElse
			F.Intrinsic.String.Build("{0}\GAB\GAS\gss2.ico",V.Caller.PluginsDir,v.Local.sIcon)
			F.Intrinsic.String.Build("{0}\GAB\GAS\GAB_GSS_Logo_Green_Dash.png",V.Caller.PluginsDir,V.Local.sGssLogo)
			Gui.frmMRP..Icon(V.Local.sIcon)
			Gui.frmPO..Icon(V.Local.sIcon)
			Gui.frmHistory..Icon(V.Local.sIcon)
			Gui.frmPrevEmail..Icon(V.Local.sIcon)
			Gui.frmEmail..Icon(V.Local.sIcon)
			Gui.frmNotes..Icon(V.Local.sIcon)
			Gui.frmPO.picGSSLogo.Picture(V.Local.sGssLogo)
			Gui.frmEmail.txtDropFiles.Event("DRAGDROPFILE",Dragdrop)
			
			F.ODBC.Connection!con.OpenCompanyConnection(500)
			
			F.Intrinsic.Control.CallSub(LoadDropDowns)
			F.Intrinsic.Control.CallSub(SetContextMenus)
			F.Intrinsic.Control.CallSub(CheckCostOpt)
			F.Intrinsic.Control.CallSub(CheckPOOpt)
			F.Intrinsic.Control.CallSub(GetCompanyShipTo)					
			F.Intrinsic.Control.CallSub(Checktable)	
			F.Intrinsic.Control.CallSub(RemoveExpiredNotes)
			F.Intrinsic.Control.CallSub(LoadDTOSV)
			
			Gui.frmPO.tabPO.SetTab(0)
			Gui.frmPO..Show
	F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.frmPO_UnLoad.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	f.Intrinsic.Control.CallSub("Serialize")

	F.Intrinsic.Control.If(V.ODBC.con.Exists,=,1)
		F.ODBC.Connection!con.close
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End 
F.Intrinsic.Control.EndTry
Program.Sub.frmPO_UnLoad.End

Program.Sub.SetPrefVendor.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iRet.Declare
	V.Local.sGssPart.Declare
	V.Local.sMsg.Declare
	V.Local.sSQL.Declare
	
	'Check if vendor has been selected
	f.Intrinsic.Control.If(V.Passed.000011.Trim,=,"")
		f.Intrinsic.UI.Msgbox("Please select a Vendor.","Attention")
		f.Intrinsic.Control.CallSub("Unload")
	f.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.GSSPartString(V.Passed.000019,V.Passed.000020,V.Local.sGssPart)
	F.Intrinsic.String.Build("Set {0} ({1}) as the Preferred Vendor for {2}?",V.Passed.000012,V.Passed.000011,V.Local.sGssPart.Trim,V.Local.sMsg)
	F.Intrinsic.UI.Msgbox(V.Local.sMsg,"Set Preferred Vendor",4,V.Local.iRet)
	F.Intrinsic.Control.If(V.Local.iRet,=,6)
		'Save Preferred Vendor to Inventory_Mst2
		F.Intrinsic.String.Build("Update Inventory_Mst2 Set Name_Vendor = '{0}' Where Part = '{1}' And Location = '';",V.Passed.000011,V.Local.sGssPart,V.Local.sSQL)
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.UI.Msgbox("Preferred Vendor Updated","Set Preferred Vendor")
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.SetPrefVendor.End

Program.Sub.frmPO_Resize.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iGsGCHt.Declare
	V.Local.iGsGCWt.Declare
	V.Local.iWidth.Declare
	V.Local.iX1.Declare
	V.Local.iX2.Declare
	V.Local.iY1.Declare
	V.Local.iY2.Declare
	v.Local.iGridWidth.Declare
	v.Local.iGridHeight.Declare
	
	F.Intrinsic.Math.Div(V.Screen.frmPO!tabPO.Width,3,V.Local.iWidth)
	F.Intrinsic.Math.Sub(V.Local.iWidth,15,V.Local.iWidth)
	Gui.frmPO.GsGCDemand.Size(V.Local.iWidth,3875)
	gui.frmPO.GsGCVendQte.Size(V.Local.iWidth,3875)
	Gui.frmPO.GsGCSupply.Size(V.Local.iWidth,3875)
	
	f.Intrinsic.Math.Sub(V.Screen.frmPO!tabPO.Width,200,v.Local.iGridWidth)
	f.Intrinsic.Math.Sub(V.Screen.frmPO!tabPO.Height,500,v.Local.iGridHeight)
	
	'gui.frmPO.GsGCPO.Size(v.Local.iGridWidth,v.Local.iGridHeight)
	gui.frmPO.GsGCPODrop.Size(v.Local.iGridWidth,v.Local.iGridHeight)
	gui.frmPO.GsGCReqs.Size(v.Local.iGridWidth,v.Local.iGridHeight)
	f.Intrinsic.Math.Sub(v.Local.iGridHeight,360,v.Local.iGridHeight)
	gui.frmPO.gsPJ.Size(v.Local.iGridWidth,v.Local.iGridHeight)
	
	'Demand
	F.Intrinsic.Math.Add(V.Screen.frmPO!tabPO.Top,V.Screen.frmPO!tabPO.Height,80,V.Local.iY1)
	Gui.frmPO.lblDemand.Position(V.Screen.frmPO!tabPO.Left,V.Local.iY1)
	F.Intrinsic.Math.Add(V.Screen.frmPO!lblDemand.Top,V.Screen.frmPO!lblDemand.Height,V.Local.iY2)
	Gui.frmPO.GsGCDemand.Position(V.Screen.frmPO!tabPO.Left,V.Local.iY2)
	'Vendor Quote
	F.Intrinsic.Math.Add(V.Screen.frmPO!GsGCDemand.Left,V.Screen.frmPO!GsGCDemand.Width,15,V.Local.iX1)
	gui.frmPO.lblVendQte.Position(V.Local.iX1,V.Local.iY1)
	gui.frmPO.GsGCVendQte.Position(V.Local.iX1,V.Local.iY2)
	'Supply
	F.Intrinsic.Math.Add(V.Screen.frmPO!GsGCVendQte.Left,V.Screen.frmPO!GsGCVendQte.Width,15,V.Local.iX2)
	Gui.frmPO.lblSupply.Position(V.Local.iX2,V.Local.iY1)
	Gui.frmPO.GsGCSupply.Position(V.Local.iX2,V.Local.iY2)
	'New Button
	F.Intrinsic.Math.Add(V.Screen.frmPO!lblVendQte.Left,V.Screen.frmPO!lblVendQte.Width,700,V.Local.iX1)
	F.Intrinsic.Math.Add(V.Screen.frmPO!tabPO.Top,V.Screen.frmPO!tabPO.Height,-25,V.Local.iY1)
	'Gui.frmPO.cmdNewVendQte.Position(V.Local.iX1,V.Local.iY1)
	'View Button
	F.Intrinsic.Math.Add(V.Local.iX1,-650,V.Local.iX2)
	'Gui.frmPO.cmdViewVendQte.Position(V.Local.iX2,V.Local.iY1)
	'Check Browse Vendors
	F.Intrinsic.Math.Add(V.Screen.frmPO!GsGCVendQte.Left,V.Screen.frmPO!GsGCVendQte.Width,-1650,V.Local.iX1)
	F.Intrinsic.Math.Add(V.Screen.frmPO!tabPO.Top,V.Screen.frmPO!tabPO.Height,-5,V.Local.iY1)
	
	Gui.frmPO.chkBrwVends.Position(V.Local.iX1,V.Local.iY1)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.frmPO_Resize.End

Program.Sub.LoadDropDowns.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.BlockEvents

	'Cost
	Gui.frmPO.ddlCost.AddItem("PO History Cost",0)
	Gui.frmPO.ddlCost.AddItem("Vendor Quote Cost",1)
	Gui.frmPO.ddlCost.AddItem("Zero Cost",2)
	Gui.frmPO.ddlCost.Text("PO History Cost")
	'POs
	Gui.frmPO.ddlPOs.AddItem("Individual POs",0)
	Gui.frmPO.ddlPOs.AddItem("Group POs by Vendor",1)
	Gui.frmPO.ddlPOs.Text("Individual POs")
	'Email
	Gui.frmPO.ddlEmail.AddItem("Do Not Email",0)
	Gui.frmPO.ddlEmail.AddItem("Auto Email",1)
	Gui.frmPO.ddlEmail.AddItem("Preview Email",2)
	Gui.frmPO.ddlEmail.Text("Do Not Email")
	
	F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadDropDowns.End

Program.Sub.SetContextMenus.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	'Grid Purchase To Stock
	Gui.frmPO..ContextMenuCreate("ctxPO")
	Gui.frmPO.GsGCPO.ContextMenuAttach("ctxPO")
	Gui.frmPO..ContextMenuAddItem("ctxPO","CopyPart",0,"Copy Part Number")
	Gui.frmPO..ContextMenuAddItem("ctxPO","SupplyDemand",0,"Supply and Demand")
	Gui.frmPO..ContextMenuAddItem("ctxPO","Exp",3)
	Gui.frmPO..ContextMenuAddItem("ctxPO","Refresh",0,"Refresh")
	Gui.frmPO..ContextMenuAddItem("ctxPO","Export",0,"Export")
	Gui.frmPO..ContextMenuAddItem("ctxPO","Exp",3)
	Gui.frmPO..ContextMenuAddItem("ctxPO","Notes",0,"Notes")
	Gui.frmPO..ContextMenuAddItem("ctxPO","History",0,"History")
	Gui.frmPO..ContextMenuAddItem("ctxPO","Exp",3)
	Gui.frmPO..ContextMenuAddItem("ctxPO","New",0,"Create PO (Manual)")
	Gui.frmPO..ContextMenuAddItem("ctxPO","NewAuto",0,"Create PO (Auto)")	
	Gui.frmPO..ContextMenuAddItem("ctxPO","Exp",3)
	gui.frmPO..ContextMenuAddItem("ctxPO","SelectAllRows",0,"Select All Rows")
	gui.frmPO..ContextMenuAddItem("ctxPO","DeselectAllRows",0,"Deselect All Rows")
	gui.frmPO..ContextMenuAddItem("ctxPO","SelectHighlightedRows",0,"Select Highlighted Rows")
	gui.frmPO..ContextMenuAddItem("ctxPO","DeselectHighlightedRows",0,"Deselect Highlighted Rows")		
	
	Gui.frmPO..ContextMenuAddItem("ctxPO","Exp",3)
	gui.frmPO..ContextMenuAddItem("ctxPO","ChangeGLHighlightedRows",0,"Change GL for Highlighted Rows")	
	
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","CopyPart","CopyPart")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","Refresh","cmdRefresh_Click")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","Export","MenuClickExport")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","Notes","MenuClick")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","History","MenuClick")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","New","MenuClickNew")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","NewAuto","MenuClickNewAuto")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","SupplyDemand","SupplyDemand")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","SelectAllRows","MenuClickSelectAllRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","DeselectAllRows","MenuClickDeselectAllRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","SelectHighlightedRows","MenuClickSelectHighlightedRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","DeselectHighlightedRows","MenuClickDeselectHighlightedRows")	
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPO","ChangeGLHighlightedRows","MenuClickChangeGLHighlightedRows_GsGCPO")	
	
		
	'Grid Purchase To Jobs
	Gui.frmPO..ContextMenuCreate("ctxPOJobs")
	Gui.frmPO.gsPJ.ContextMenuAttach("ctxPOJobs")
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","CopyPart",0,"Copy Part Number")
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","SupplyDemand",0,"Supply and Demand")	
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","Exp",3)	
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","Refresh",0,"Refresh")
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","Export",0,"Export")
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","Exp",3)
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","Notes",0,"Notes")
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","History",0,"History")
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","Exp",3)
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","New",0,"Create PO (Manual)")
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","NewAuto",0,"Create PO (Auto)")
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","Exp",3)
	gui.frmPO..ContextMenuAddItem("ctxPOJobs","SelectAllRows",0,"Select All Rows")
	gui.frmPO..ContextMenuAddItem("ctxPOJobs","DeselectAllRows",0,"Deselect All Rows")
	gui.frmPO..ContextMenuAddItem("ctxPOJobs","SelectHighlightedRows",0,"Select Highlighted Rows")
	gui.frmPO..ContextMenuAddItem("ctxPOJobs","DeselectHighlightedRows",0,"Deselect Highlighted Rows")	
	Gui.frmPO..ContextMenuAddItem("ctxPOJobs","Exp",3)
	gui.frmPO..ContextMenuAddItem("ctxPOJobs","ChangeGLHighlightedRows_gsPJ",0,"Change GL for Highlighted Rows")

	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","Refresh","cmdPJRefresh_Click")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","Export","Export_PJ")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","Notes","MenuClick4PJ")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","History","MenuClick4PJ")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","New","PJ_CreateNewManual")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","NewAuto","PJ_MenuClickNewAuto")

	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","SelectAllRows","MenuClickSelectAllRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","DeselectAllRows","MenuClickDeselectAllRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","SelectHighlightedRows","MenuClickSelectHighlightedRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","DeselectHighlightedRows","MenuClickDeselectHighlightedRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","CopyPart","CopyPart")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","SupplyDemand","SupplyDemand")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","ChangeGLHighlightedRows_gsPJ","MenuClickChangeGLHighlightedRows_gsPJ")
	
	'Grid Drop Ship POs
	Gui.frmPO..ContextMenuCreate("ctxPODrop")
	Gui.frmPO.GsGCPODrop.ContextMenuAttach("ctxPODrop")
	Gui.frmPO..ContextMenuAddItem("ctxPODrop","CopyPart",0,"Copy Part Number")	
	Gui.frmPO..ContextMenuAddItem("ctxPODrop","SupplyDemand",0,"Supply and Demand")
	Gui.frmPO..ContextMenuAddItem("ctxPODrop","Exp",3)
	Gui.frmPO..ContextMenuAddItem("ctxPODrop","Refresh",0,"Refresh")
	Gui.frmPO..ContextMenuAddItem("ctxPODrop","Export",0,"Export")
	Gui.frmPO..ContextMenuAddItem("ctxPODrop","Exp",3)
	Gui.frmPO..ContextMenuAddItem("ctxPODrop","New",0,"Create PO (Manual)")
	Gui.frmPO..ContextMenuAddItem("ctxPODrop","Exp",3)
	gui.frmPO..ContextMenuAddItem("ctxPODrop","SelectAllRows",0,"Select All Rows")
	gui.frmPO..ContextMenuAddItem("ctxPODrop","DeselectAllRows",0,"Deselect All Rows")
	gui.frmPO..ContextMenuAddItem("ctxPODrop","SelectHighlightedRows",0,"Select Highlighted Rows")
	gui.frmPO..ContextMenuAddItem("ctxPODrop","DeselectHighlightedRows",0,"Deselect Highlighted Rows")
	Gui.frmPO..ContextMenuAddItem("ctxPODrop","Exp",3)
	gui.frmPO..ContextMenuAddItem("ctxPODrop","ChangeGLHighlightedRows_GsGCPODrop",0,"Change GL for Highlighted Rows")	
	
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPODrop","Refresh","cmdRefresh_Click")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPODrop","Export","MenuClickExport")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPODrop","New","MenuClickNew")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPODrop","CopyPart","CopyPart")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPODrop","SupplyDemand","SupplyDemand")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPODrop","SelectAllRows","MenuClickSelectAllRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPODrop","DeselectAllRows","MenuClickDeselectAllRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPODrop","SelectHighlightedRows","MenuClickSelectHighlightedRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPODrop","DeselectHighlightedRows","MenuClickDeselectHighlightedRows")	
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOJobs","ChangeGLHighlightedRows_GsGCPODrop","MenuClickChangeGLHighlightedRows_GsGCPODrop")
	
	'Grid Requisitions
	Gui.frmPO..ContextMenuCreate("ctxPOReqs")
	Gui.frmPO.GsGCReqs.ContextMenuAttach("ctxPOReqs")
	Gui.frmPO..ContextMenuAddItem("ctxPOReqs","CopyPart",0,"Copy Part Number")
	Gui.frmPO..ContextMenuAddItem("ctxPOReqs","SupplyDemand",0,"Supply and Demand")
	Gui.frmPO..ContextMenuAddItem("ctxPOReqs","Exp",3)
	Gui.frmPO..ContextMenuAddItem("ctxPOReqs","Refresh",0,"Refresh")
	Gui.frmPO..ContextMenuAddItem("ctxPOReqs","Export",0,"Export")
	Gui.frmPO..ContextMenuAddItem("ctxPOReqs","Exp",3)
	Gui.frmPO..ContextMenuAddItem("ctxPOReqs","CreateReqPOs",0,"Create Req POs (Auto)")
	Gui.frmPO..ContextMenuAddItem("ctxPOReqs","Exp",3)
	gui.frmPO..ContextMenuAddItem("ctxPOReqs","SelectAllRows",0,"Select All Rows")
	gui.frmPO..ContextMenuAddItem("ctxPOReqs","DeselectAllRows",0,"Deselect All Rows")
	gui.frmPO..ContextMenuAddItem("ctxPOReqs","SelectHighlightedRows",0,"Select Highlighted Rows")
	gui.frmPO..ContextMenuAddItem("ctxPOReqs","DeselectHighlightedRows",0,"Deselect Highlighted Rows")	
	Gui.frmPO..ContextMenuAddItem("ctxPOReqs","Exp",3)
	gui.frmPO..ContextMenuAddItem("ctxPOReqs","ChangeGLHighlightedRows_GsGCReqs",0,"Change GL for Highlighted Rows")
	Gui.frmPO..ContextMenuAddItem("ctxPOReqs","DeleteReqLine",0,"Delete Req Line")
	
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOReqs","Refresh","cmdRefresh_Click")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOReqs","Export","MenuClickExport")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOReqs","CreateReqPOs","MenuClickCreateAutoPOs")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOReqs","CopyPart","CopyPart")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOReqs","SupplyDemand","SupplyDemand")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOReqs","SelectAllRows","MenuClickSelectAllRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOReqs","DeselectAllRows","MenuClickDeselectAllRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOReqs","SelectHighlightedRows","MenuClickSelectHighlightedRows")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOReqs","DeselectHighlightedRows","MenuClickDeselectHighlightedRows")		
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOReqs","ChangeGLHighlightedRows_GsGCReqs","MenuClickChangeGLHighlightedRows_GsGCReqs")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxPOReqs","DeleteReqLine","MenuClickDeleteReqLine_GsGCReqs")
	
	'Grid Demand
	Gui.frmPO..ContextMenuCreate("ctxDemand")
	Gui.frmPO.GsGCDemand.ContextMenuAttach("ctxDemand")
	Gui.frmPO..ContextMenuAddItem("ctxDemand","Export",0,"Export")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxDemand","Export","MenuClickExport")
	
	'Grid Vendor Quote
	Gui.frmPO..ContextMenuCreate("ctxVendQte")
	Gui.frmPO..ContextMenuAddItem("ctxVendQte","View",0,"View")
	Gui.frmPO..ContextMenuAddItem("ctxVendQte","New",0,"New")
	Gui.frmPO..ContextMenuAddItem("ctxVendQte","Exp",3)
	Gui.frmPO..ContextMenuAddItem("ctxVendQte","Export",0,"Export")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxVendQte","View","MenuClick")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxVendQte","New","MenuClick")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxVendQte","Export","MenuClickExport")
	
	Gui.frmPO..ContextMenuCreate("ctxVendor")
	Gui.frmPO..ContextMenuAddItem("ctxVendor","Export",0,"Export")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxVendor","Export","MenuClickExport")
	
	'Grid Supply
	Gui.frmPO..ContextMenuCreate("ctxSupply")
	Gui.frmPO.GsGCSupply.ContextMenuAttach("ctxSupply")
	Gui.frmPO..ContextMenuAddItem("ctxSupply","Export",0,"Export")
	Gui.frmPO..ContextMenuSetItemEventHandler("ctxSupply","Export","MenuClickExport")
	
	'Grid MRP
	Gui.frmMRP..ContextMenuCreate("ctxMRP")
	Gui.frmMRP.GsGCMRP.ContextMenuAttach("ctxMRP")
	Gui.frmMRP..ContextMenuAddItem("ctxMRP","Export",0,"Export")
	Gui.frmMRP..ContextMenuSetItemEventHandler("ctxMRP","Export","MenuClickExport")
	
	'Grid Hist
	Gui.frmHistory..ContextMenuCreate("ctxHIST")
	Gui.frmHistory.GsGCHistory.ContextMenuAttach("ctxHIST")
	Gui.frmHistory..ContextMenuAddItem("ctxHIST","Export",0,"Export")
	Gui.frmHistory..ContextMenuSetItemEventHandler("ctxHIST","Export","MenuClickExport")
	
	'Grid Notes
	Gui.frmNotes..ContextMenuCreate("ctxNotes")
	Gui.frmNotes.GsGCNotes.ContextMenuAttach("ctxNotes")
	Gui.frmNotes..ContextMenuAddItem("ctxNotes","AddNote",0,"Add Note")
	Gui.frmNotes..ContextMenuSetItemEventHandler("ctxNotes","AddNote","MenuClickAdd")
	Gui.frmNotes..ContextMenuAddItem("ctxNotes","DelNote",0,"Delete Note")
	Gui.frmNotes..ContextMenuSetItemEventHandler("ctxNotes","DelNote","MenuClickDelete")
	Gui.frmNotes..ContextMenuAddItem("ctxNotes","Refresh",0,"Refresh")
	Gui.frmNotes..ContextMenuSetItemEventHandler("ctxNotes","Refresh","LoadDtNotes")
	Gui.frmNotes..ContextMenuAddItem("ctxNotes","Export",0,"Export")
	Gui.frmNotes..ContextMenuSetItemEventHandler("ctxNotes","Export","MenuClickExport")

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End

'***Options check/save to be retrieved the next time openning dashboard
Program.Sub.CheckCostOpt.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sRet.Declare
	
	F.Intrinsic.Control.BlockEvents
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5988,2000,5,"",V.Local.sRet)
	Gui.frmPO.ddlCost.Text(V.Local.sRet)
	F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckCostOpt.End

Program.Sub.SaveCostOpt.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5988,2000,False,V.Screen.frmPO!ddlCost.Text,False,0,-999.0,1/1/1980,12:00:00 AM)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.SaveCostOpt.End

Program.Sub.CheckPOOpt.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sRet.Declare
	
	F.Intrinsic.Control.BlockEvents
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5988,3000,5,"",V.Local.sRet)
	Gui.frmPO.ddlPOs.Text(V.Local.sRet)
	
	F.Intrinsic.Control.If(V.Local.sRet,=,"Individual POs")
		Gui.frmPO.ddlEmail.Enabled(False)
		Gui.frmPO.ddlEmail.Text("Do Not Email")
	F.Intrinsic.Control.Else
		Gui.frmPO.ddlEmail.Enabled(True)
		F.Intrinsic.Control.CallSub(CheckEmailOpt)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.UnBlockEvents

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckPOOpt.End

Program.Sub.SavePOOpt.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5988,3000,False,V.Screen.frmPO!ddlPOs.Text,False,0,-999.0,1/1/1980,12:00:00 AM)
	F.Intrinsic.Control.CallSub(CheckPOOpt)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.SavePOOpt.End

Program.Sub.CheckEmailOpt.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sRet.Declare
	
	F.Intrinsic.Control.BlockEvents
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5988,4000,5,"",V.Local.sRet)
	Gui.frmPO.ddlEmail.Text(V.Local.sRet)
	F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.CheckEmailOpt.End

Program.Sub.SaveEmailOpt.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"OCTSRS.NET.EXE",5988,4000,False,V.Screen.frmPO!ddlEmail.Text,False,0,-999.0,1/1/1980,12:00:00 AM)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.SaveEmailOpt.End

'***End Options check/save
Program.Sub.MenuClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iRet.Declare
	V.Local.sControl.Declare
	V.Local.sGV.Declare
	V.Local.iRow.Declare
	v.Local.sCaption.Declare
	v.Local.sRows.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.ItemName)
		F.Intrinsic.Control.Case("VIEW")
			F.Global.General.LaunchMenuTask(271,2,V.Local.iRet)

		F.Intrinsic.Control.Case("NEW")
			F.Intrinsic.Control.If(V.Global.sPart,<>,"")
				F.Global.General.CallWrapperAsync(175000,V.Global.sPart)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("NOTES")
			f.Intrinsic.Control.If(v.DataTable.dtPO.Exists)
	
				Gui.frmPO.GsGCPO.GetSelectedRows("gvPO",V.Local.sRows)
				f.Intrinsic.Control.If(v.Local.sRows,=,"")
					f.Intrinsic.Control.ExitSub
				f.Intrinsic.Control.EndIf
				f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
				v.Local.iRow.Set(v.Local.sRows(0))
				f.Intrinsic.String.Build("Notes: Part {0} - Location {1}",V.DataTable.dtPO(V.Local.iRow).PART!FieldVal,V.DataTable.dtPO(V.Local.iRow).LOCATION!FieldVal,v.Local.sCaption)
				gui.frmNotes..Caption(v.Local.sCaption)
				V.Global.sPart2.Set(V.DataTable.dtPO(V.Local.iRow).PART!FieldVal)
				V.Global.sLoc2.Set(V.DataTable.dtPO(V.Local.iRow).LOCATION!FieldVal)
				F.Intrinsic.Control.CallSub(LoadDtNotes)
				Gui.frmNotes..Show
	
			f.Intrinsic.Control.EndIf	
			
		F.Intrinsic.Control.Case("HISTORY")
			F.Intrinsic.Control.SelectCase(V.Screen.frmPO!tabPO.Tab)
				F.Intrinsic.Control.Case(0)
					f.Intrinsic.Control.If(v.Global.gvPO.Not)
						f.Intrinsic.Control.ExitSub
					f.Intrinsic.Control.EndIf
					V.Local.sControl.Set("GsGCPO")
					V.Local.sGV.Set("gvPO")
				F.Intrinsic.Control.Case(1)
					f.Intrinsic.Control.If(v.Global.gvPODrop.Not)
						f.Intrinsic.Control.ExitSub
					f.Intrinsic.Control.EndIf				
					V.Local.sControl.Set("GsGCPODrop")
					V.Local.sGV.Set("gvPODrop")
			F.Intrinsic.Control.EndSelect
				Gui.frmPO.[V.Local.sControl].GetSelectedRows(V.Local.sGV,V.Local.sRows)
				f.Intrinsic.Control.If(v.Local.sRows,=,"")
					f.Intrinsic.Control.ExitSub
				f.Intrinsic.Control.EndIf
				f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
				v.Local.iRow.Set(v.Local.sRows(0))					
			F.Intrinsic.Control.CallSub(GsGCPO_RowCellClick,"Column","POHistory","ControlName",V.Local.sControl,"RowIndex",V.Local.iRow)
			
	F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClick.End

Program.Sub.CopyPart.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sControl.Declare
	v.Local.sGrid.Declare
	v.Local.sPart.Declare
	v.Local.sSelectedRow.Declare
	v.Local.iCnt.Declare
	v.Local.sClip.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXPO")
			V.Local.sGrid.Set("gvPO")
			V.Local.sControl.Set("GsGCPO")
			
		F.Intrinsic.Control.Case("CTXPODROP")
			V.Local.sGrid.Set("gvPODrop")
			V.Local.sControl.Set("GsGCPODrop")
			
		F.Intrinsic.Control.Case("CTXPOREQS")
			V.Local.sGrid.Set("gvReqs")
			V.Local.sControl.Set("GsGCReqs")			
			
		F.Intrinsic.Control.Case("CTXPOJOBS")	
			V.Local.sGrid.Set("gvPJ")
			V.Local.sControl.Set("gsPJ")	
	F.Intrinsic.Control.EndSelect	
	
	f.Intrinsic.Control.If(v.Local.sGrid,<>,"")		
		f.Intrinsic.Control.If(v.Global.[v.Local.sGrid])
			'Get Selected Rows
			gui.frmPO.[v.Local.sControl].GetSelectedRows(v.Local.sGrid,v.Local.sSelectedRow)
			f.Intrinsic.Control.If(v.Local.sSelectedRow.Trim,<>,"")
				f.Intrinsic.String.Split(v.Local.sSelectedRow,"*!*",v.Local.sSelectedRow)
				f.Data.DataTable.Create("CopyParts",True)
				f.Data.DataTable.AddColumn("CopyParts","Part","String","")
				f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sSelectedRow.UBound,1)
					gui.frmPO.[v.Local.sControl].GetCellValueByColumnName(v.Local.sGrid,"PART",v.Local.sSelectedRow(v.Local.iCnt),V.Local.sPart)	
					f.Data.DataTable.AddRow("CopyParts","Part",v.Local.sPart.Trim)
				f.Intrinsic.Control.Next(v.Local.iCnt)
				f.Data.DataView.Create("CopyParts","dvCopyParts")
				f.Data.DataView.ToDataTableDistinct("CopyParts","dvCopyParts","ToClip","Part",True)
				f.Data.DataTable.Close("CopyParts")
				f.Data.DataView.Create("ToClip","dvToClip")
				f.Data.DataView.ToString("ToClip","dvToClip","Part","",",",v.Local.sClip)
				f.Data.DataTable.Close("ToClip")
				'Copy to clipboard
				f.Intrinsic.Control.If(v.Local.sClip.Trim,<>,"")
					f.Intrinsic.UI.SetClipboardText(v.Local.sClip)
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.Else
				f.Intrinsic.UI.Msgbox("Please highlight a row.","Attention")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
					
		f.Intrinsic.Control.EndIf	
	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CopyPart.End

Program.Sub.SupplyDemand.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sControl.Declare
	v.Local.sGrid.Declare
	v.Local.sPart.Declare
	v.Local.sSelectedRow.Declare
	v.Local.iCnt.Declare
	v.Local.sClip.Declare
	V.Local.sLoc.Declare
	v.Local.sParam.Declare
	v.Local.spath.Declare
	v.Local.bexists.Declare(Boolean)
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXPO")
			V.Local.sGrid.Set("gvPO")
			V.Local.sControl.Set("GsGCPO")
			
		F.Intrinsic.Control.Case("CTXPODROP")
			V.Local.sGrid.Set("gvPODrop")
			V.Local.sControl.Set("GsGCPODrop")
			
		F.Intrinsic.Control.Case("CTXPOREQS")
			V.Local.sGrid.Set("gvReqs")
			V.Local.sControl.Set("GsGCReqs")			
			
		F.Intrinsic.Control.Case("CTXPOJOBS")	
			V.Local.sGrid.Set("gvPJ")
			V.Local.sControl.Set("gsPJ")	
	F.Intrinsic.Control.EndSelect	
	
	f.Intrinsic.Control.If(v.Local.sGrid,<>,"")		
		f.Intrinsic.Control.If(v.Global.[v.Local.sGrid])
'			'Get Selected Rows
'			gui.frmPO.[v.Local.sControl].GetSelectedRows(v.Local.sGrid,v.Local.sSelectedRow)
'			f.Intrinsic.Control.If(v.Local.sSelectedRow.Trim,<>,"")
'				f.Intrinsic.String.Split(v.Local.sSelectedRow,"*!*",v.Local.sSelectedRow)
'				gui.frmPO.[v.Local.sControl].GetCellValueByColumnName(v.Local.sGrid,"PART",v.Local.sSelectedRow(v.Local.iCnt),V.Local.sPart)
'				gui.frmPO.[v.Local.sControl].GetCellValueByColumnName(v.Local.sGrid,"LOCATION",v.Local.sSelectedRow(v.Local.iCnt),V.Local.sLoc)
'				f.Intrinsic.String.Build("{0}!*!{1}!*!M",v.Local.sPart,v.Local.sLoc,v.Local.sParam)
'				F.Global.General.CallWrapperASync(300011,v.Local.sParam)
'			f.Intrinsic.Control.Else
'				f.Intrinsic.UI.Msgbox("Please highlight a row.","Attention")
'				f.Intrinsic.Control.ExitSub
'			f.Intrinsic.Control.EndIf
	'Open New Supply and Demand Screen
'			'Get Selected Rows
			gui.frmPO.[v.Local.sControl].GetSelectedRows(v.Local.sGrid,v.Local.sSelectedRow)
			f.Intrinsic.Control.If(v.Local.sSelectedRow.Trim,<>,"")
				f.Intrinsic.String.Split(v.Local.sSelectedRow,"*!*",v.Local.sSelectedRow)
				Gui.frmPO.[v.Local.sControl].GetCellValueByColumnName(v.Local.sGrid,"PART",v.Local.sSelectedRow(v.Local.iCnt),V.Local.sPart)
				Gui.frmPO.[v.Local.sControl].GetCellValueByColumnName(v.Local.sGrid,"LOCATION",v.Local.sSelectedRow(v.Local.iCnt),V.Local.sLoc)
				F.Intrinsic.String.Build("{0}bin\SupplyAndDemand.exe",V.Caller.LocalGSSTempDir,V.Local.sPath)
				F.Intrinsic.File.Exists(V.Local.sPath,V.Local.bExists)
				F.Intrinsic.Control.If(V.Local.bExists)
					F.Intrinsic.Task.SetEnvironmentVariable("PARTNUMBER",V.Local.sPart)
					F.Intrinsic.Task.SetEnvironmentVariable("LOCATIONCODE",V.Local.sLoc)
					Gui.frmPO..Enabled(False)
					F.Intrinsic.Task.LaunchAsync(V.Local.sPath,1,V.Local.sPath)
					Gui.frmPO..Enabled(True)
				F.Intrinsic.Control.Else
					f.Intrinsic.String.Build("{0}!*!{1}!*!M",v.Local.sPart,v.Local.sLoc,v.Local.sParam)
					F.Global.General.CallWrapperASync(300011,v.Local.sParam)
				F.Intrinsic.Control.EndIf	
			f.Intrinsic.Control.Else
				f.Intrinsic.UI.Msgbox("Please highlight a row.","Attention")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf			
		f.Intrinsic.Control.EndIf			
	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.SupplyDemand.End

Program.Sub.MenuClickExport.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sForm.Declare
	V.Local.sControl.Declare
	V.Local.sExt.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXPO")
			V.Local.sForm.Set("frmPO")
			V.Local.sControl.Set("GsGCPO")
			
		F.Intrinsic.Control.Case("CTXPODROP")
			V.Local.sForm.Set("frmPO")
			V.Local.sControl.Set("GsGCPODrop")
			
		F.Intrinsic.Control.Case("CTXPOREQS")
			V.Local.sForm.Set("frmPO")
			V.Local.sControl.Set("GsGCReqs")
		
		F.Intrinsic.Control.Case("CTXDEMAND")
			V.Local.sForm.Set("frmPO")
			V.Local.sControl.Set("GsGCDemand")
			
		F.Intrinsic.Control.CaseAny("CTXVENDQTE","CTXVENDOR")
			V.Local.sForm.Set("frmPO")
			V.Local.sControl.Set("GsGCVendQte")
			
		F.Intrinsic.Control.Case("CTXSUPPLY")
			V.Local.sForm.Set("frmPO")
			V.Local.sControl.Set("GsGCSupply")
			
		F.Intrinsic.Control.Case("CTXMRP")
			V.Local.sForm.Set("frmMRP")
			V.Local.sControl.Set("GsGCMRP")
			
		F.Intrinsic.Control.Case("CTXHIST")
			V.Local.sForm.Set("frmHistory")
			V.Local.sControl.Set("GsGCHistory")
			
		F.Intrinsic.Control.Case("CTXNOTES")
			V.Local.sForm.Set("frmNotes")
			V.Local.sControl.Set("GsGCNotes")
	F.Intrinsic.Control.EndSelect

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.Control.If(V.Local.bExcel)
		V.Local.sExt.Set("xlsx")
	F.Intrinsic.Control.Else
		V.Local.sExt.Set("csv")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("{0}\GAB_5988_Export.{1}",V.Caller.LocalGssTempDir,V.Local.sExt,V.Local.sFileExport)
	F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
	F.Intrinsic.Control.If(V.Local.bFileLocked)
		F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
	F.Intrinsic.Control.Else
		Gui.[V.Local.sForm].[V.Local.sControl].Export(V.Local.sFileExport,V.Local.sExt)
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.CatchWhen(5700)
		F.Intrinsic.UI.Msgbox("No Data to Export","Export")
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickExport.End

Program.Sub.MenuClickNew.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iRowCnt.Declare
	V.Local.iRowCnt2.Declare
	V.Local.iRow.Declare
	V.Local.sVendorNo.Declare
	V.Local.sParams.Declare
	V.Local.sDT.Declare
	V.Local.sGV.Declare
	v.Local.sRows.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXPO")
			f.Intrinsic.Control.If(v.Global.gvPONew.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			Gui.frmPO.GsGCPO.GetSelectedRows("gvPONew",V.Local.sRows)
			f.Intrinsic.Control.If(v.Local.sRows,=,"")
				f.Intrinsic.UI.Msgbox("Please highlight a row.","Attention")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
			f.Intrinsic.Control.If(v.Local.sRows.UBound,>,0)
				f.Intrinsic.UI.Msgbox("Please highlight only 1 row to Create Manual","Attention")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.Endif			
			v.Local.iRow.Set(v.Local.sRows(0))
			Gui.frmPO.GsGCPO.GetCellValueByColumnName("gvPONew","Vendor",V.Local.iRow,V.Local.sVendorNo)
			V.Local.sDT.Set("dtPO")
			
		F.Intrinsic.Control.Case("CTXPODROP")
			f.Intrinsic.Control.If(v.Global.[gvPODrop].Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf		
			Gui.frmPO.GsGCPODrop.GetSelectedRows("gvPODrop",V.Local.sRows)
			f.Intrinsic.Control.If(v.Local.sRows,=,"")
				f.Intrinsic.UI.Msgbox("Please highlight a row.","Attention")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			
			f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
			f.Intrinsic.Control.If(v.Local.sRows.UBound,>,0)
				f.Intrinsic.UI.Msgbox("Please highlight only 1 row to Create Manual","Attention")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf			
			v.Local.iRow.Set(v.Local.sRows(0))			
			Gui.frmPO.GsGCPODrop.GetCellValueByColumnName("gvPODrop","Vendor",V.Local.iRow,V.Local.sVendorNo)
			V.Local.sDT.Set("dtPODrop")			
	F.Intrinsic.Control.EndSelect

	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM V_PO_HEADER;",V.Local.iRowCnt)
	F.Intrinsic.String.ConcatCallWrapperArgs("N","",V.Local.sVendorNo,V.Local.sParams)
	F.Global.General.CallWrapperSync(175200,V.Local.sParams)
	F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM V_PO_HEADER;",V.Local.iRowCnt2)
	F.Intrinsic.Control.If(V.Local.iRowCnt,<>,V.Local.iRowCnt2)
		'Remove/Hide line from the PO Screen
		F.Data.DataTable.DeleteRow(V.Local.sDT,V.Local.iRow)
		F.Data.DataTable.AcceptChanges(V.Local.sDT)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickNew.End

Program.Sub.MenuClickNewAuto.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.dDueDate.Declare
	V.Local.fExtension.Declare
	V.Local.sSelect.Declare
	V.Local.iSelect.Declare
	v.local.iSelect2.Declare
	V.Local.sLastVendor.Declare
	V.Local.sGV.Declare
	V.Local.sDT.Declare
	v.Local.sSQL.Declare
	V.Local.sSQL2.Declare
	V.Local.sPO.Declare
	V.Local.sLastPO.Declare
	V.Local.sParams.Declare
	v.Local.sPart.Declare
	V.Local.sEmailList.Declare
	v.Local.sFilePath.Declare
	v.Local.sRet.Declare
	v.Local.bExists.Declare
	V.Local.sPOFull.Declare
	V.Local.sRecordType.Declare
	V.Local.sName.Declare
	V.Local.sNameSplit.Declare
	V.Local.sBuyerCode.Declare
	v.Local.sGSGC.Declare
	V.Local.sPOLine.Declare
	V.Local.sPOHead.Declare
	V.Local.sLoops.Declare
	V.Local.sMsg.Declare
	
	F.Intrinsic.Control.SelectCase(V.Screen.frmPO!tabPO.Tab)
		F.Intrinsic.Control.Case(0)
			f.Intrinsic.Control.If(v.Global.gvPONew.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			V.Local.sGV.Set("gvPONew")
			V.Local.sDT.Set("dtToDashboard")
			V.Local.sGSGC.Set("GsGCPO")
			
		F.Intrinsic.Control.Case(1)
			f.Intrinsic.Control.If(v.Global.gvPODrop.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf		
			V.Local.sGV.Set("gvPODrop")
			V.Local.sDT.Set("dtPODrop")
			V.Local.sGSGC.Set("GsGCPODrop")
			
		F.Intrinsic.Control.Case(2)
			f.Intrinsic.Control.If(v.Global.gvReqs.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf			
			V.Local.sGV.Set("gvReqs")
			V.Local.sDT.Set("dtReqs")
			V.Local.sGSGC.Set("GsGCReqs")
			
	F.Intrinsic.Control.EndSelect
	
	
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''	
'		'BM Make sure user clicks away from select box, otherwise won't read last value selected (Dumb work around for now manually selects different row. SelectCell method does not work as of 5/21/21. Corresponds to Sort code Column, which has no event tied to it)
'    F.Data.DataTable.Select(V.Local.sDT,"Select = True",V.Local.sSelect)
''This if takes care of case where user might make multiple row selections, but last one isn't being read, sets focus to first row they selected, column 13 so that the last one gets read
'    F.Intrinsic.Control.If(V.Local.sSelect, <>, "***NORETURN***")
'        F.Intrinsic.String.Split(V.Local.sSelect, "*!*", V.Local.sSelect)
'        Gui.frmPO.[v.Local.sGSGC].FocusCell(V.Local.sGV, V.Local.sSelect(0), 11)
''Add this case if users only selects one row. If you set focus to the row that is the last row selection the user made, does not register the select box as being clicked ;-;
'    F.Intrinsic.Control.Else
''If grid only has one row, we can only do focus cell on that same cell, which won't work for reading the select box's state. Notify user to try again and make sure to click away manually before going to context menu
'        F.Intrinsic.Control.If(V.DataTable.[V.Local.sDT].RowCount, =, 1)
'            F.Intrinsic.String.Build("With only one row in the grid, please make sure that you click{0}away from the row before bringing up the context menu to create AutoPOs.{0}Termination will exit and no new PO will be created.", V.Ambient.NewLine, V.Local.sError)
'            F.Intrinsic.UI.Msgbox(V.Local.sError, "No PO will be Created Error")
'            F.Intrinsic.Control.ExitSub
'        F.Intrinsic.Control.Else
'            Gui.frmPO.[v.Local.sGSGC].FocusCell(V.Local.sGV, 0, 11)
'            Gui.frmPO.[v.Local.sGSGC].FocusCell(V.Local.sGV, V.DataTable.[V.Local.sDT].RowCount--, 11)
'        F.Intrinsic.Control.EndIf
'    F.Intrinsic.Control.EndIf
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''	
	
	'Get Buyer Code
	F.Global.Security.GetFullName(V.Caller.User,V.Local.sName)
	F.Intrinsic.String.Split(V.Local.sName," ",V.Local.sNameSplit)
	F.Intrinsic.Control.If(V.Local.sNameSplit.UBound,=,2)
		F.Intrinsic.String.Build("{0} {1}",V.Local.sNameSplit(0),V.Local.sNameSplit(2),V.Local.sName)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Build("Select Buyer_Code From V_Buyers Where Upper(Buyer) = Upper('{0}');",V.Local.sName,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sBuyerCode)
	
	'tab 0 or 1	
	f.Intrinsic.Control.If(v.Local.sDT,<>,"dtReqs")
		Gui.frmPO.lblStatus.Caption("Generating POs....")
		Gui.frmPO.lblStatus.Visible(True)
		
		F.Data.DataView.Create(V.Local.sDT,"dvPOSelected",22,"Select = True And VENDOR <> ''","VENDOR ASC")
		F.Intrinsic.Control.If(V.DataView.[V.Local.sDT]!dvPOSelected.RowCount, =, 0)
			F.Intrinsic.String.Build("Some of the selected part(s) do not have a Vendor code.{0}Please enter one for each part under: Inventory > File > Inventory Parts > Open", V.Ambient.NewLine, V.Local.sMsg)
			F.Intrinsic.UI.Msgbox(V.Local.sMsg, "Attention")
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
	'tab 2 PO req
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.If(v.Global.bPOReq,<>,True)		
			F.Data.DataView.Create(V.Local.sDT,"dvPOSelected",22,"Select = True And VendorName <> '' And Hold <> True","VENDOR ASC")
		f.Intrinsic.Control.Else
			F.Data.DataView.Create(V.Local.sDT,"dvPOSelected",22,"Select = True And VendorName <> '' And Hold <> True and ApprovedBy <> ''","VENDOR ASC")
		f.Intrinsic.Control.EndIf	
	f.Intrinsic.Control.EndIf
	v.local.iSelect.Set(1)
	F.Intrinsic.Control.If(v.DataView.[V.local.sDT]!dvPOSelected.RowCount,>,0)
		F.Intrinsic.Control.For(V.Local.iCnt,0,v.DataView.[V.local.sDT]!dvPOSelected.RowCount--,1)
			F.Intrinsic.Control.If(v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).VENDOR!FieldValTrim,<>,"")
				F.Intrinsic.Control.If(V.Screen.frmPO!ddlPOs.Text,=,"Individual POs")
					'Scrub last vendor since user wants individual POs not Grouped POs
					V.Local.sLastVendor.Set("")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).VENDOR!Fieldvaltrim,<>,V.Local.sLastVendor)
					F.Intrinsic.Math.Add(v.local.iSelect,1,v.local.iSelect)
					F.Intrinsic.Control.If(V.Screen.frmPO!chkOpenPOMaint2.CheckedAsBoolean)
						F.Data.DataTable.AddRow("175100","ID",v.local.iSelect,"AutoNumber","Y","AddComments","Y","OpenPO","Y")
					F.Intrinsic.Control.Else
						F.Data.DataTable.AddRow("175100","ID",v.local.iSelect,"AutoNumber","Y","AddComments","Y","OpenPO","N")
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
					V.Local.dDueDate.Set(v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).DATE_DUE!FieldValTrim)
					F.Intrinsic.Math.Mult(v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Purchase!FieldValTrim,v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Cost!FieldValTrim,V.Local.fExtension)
					F.Data.DataTable.AddRow("175100File","ID",v.local.iSelect,"Vendor",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).VENDOR!FieldValTrim,"Part",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Part!FieldValTrim,"Loc",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Location!FieldValTrim,"DueDate",V.Local.dDueDate.FormatYYYYMMDD,"Description",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).DESCRIPTION!FieldValTrim,"InvUM",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).UM!FieldValTrim,"InvCost",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Cost!FieldValTrim,"InvQty",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Purchase!FieldValTrim,"POUM",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).UMPurch!FieldValTrim,"POCost",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Cost!FieldValTrim,"POQty",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Purchase!FieldValTrim,"GLAccount",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).GLAcct!FieldValTrim,"Extension",V.Local.fExtension)
					
			F.Intrinsic.Control.EndIf
			V.Local.sLastVendor.Set(v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).VENDOR!Fieldvaltrim)	
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf
	
	
	F.Intrinsic.Control.If(v.DataView.[V.local.sDT]!dvPOSelected.RowCount,>,0)
		F.Intrinsic.Control.CallSub(175100Sync)
		
		f.Data.Datatable.Create("dtRecordsToUpdate",True)
		F.Data.DataTable.AddColumn("dtRecordsToUpdate","PURCHASE_ORDER","String","")
		F.Data.DataTable.AddColumn("dtRecordsToUpdate","RECORD_NO","String","")
		
''''''''''''''''''''''''''''''''''''''''''''
		'F.Intrinsic.String.Build("select rtrim(PURCHASE_ORDER) as PURCHASE_ORDER, rtrim(RECORD_NO) as RECORD_NO, rtrim(PART) as PART, DESCRIPTION from V_PO_LINES where DESCRIPTION = '{0}'", V.Caller.User, V.Local.sSQL)
				
		'We just created the POs with the Callsub 175100, We need to know what the PO number(s) that were just created. Bao said we can do this be opening the file SLPURxxx.txt in File folder where xxx is the terminal. I originally did this by passing an identifier in the PO line description, then puttin the description back, but this was confusing to the customer.

		'Right here we will look for SLPURxxx.txt, read in the PO(s), Create a dtRecordsToUpdate from that list of POs (PURCHASE_ORDER, RECORD_NO).
		f.Intrinsic.String.Build("{0}\SLPUR{1}.txt",v.Caller.FilesDir,V.Caller.Terminal,v.Local.sFilePath)
		f.Intrinsic.file.Exists(v.Local.sFilePath,v.Local.bExists)
		f.Intrinsic.control.If(v.Local.bExists,=,True)
			f.Intrinsic.File.File2String(v.Local.sFilePath,v.Local.sRet)
			F.Intrinsic.String.Split(V.Local.sRet,V.Ambient.NewLine,V.Local.sRet)
			'Line 0 = B Record
			'Line 1 = C Record
			'Line 2 = A Record
			'Line 3 = First PO line
			
			F.Intrinsic.Math.Sub(V.Local.sRet.UBound,1,V.Local.sLoops)
			F.Intrinsic.Control.For(V.Local.iCnt,3,V.Local.sLoops,1)
				F.Intrinsic.String.Mid(V.Local.sRet(V.Local.iCnt),11,1,V.Local.sRecordType)
				F.Intrinsic.Control.If(V.Local.sRecordType,=,"A","OR",V.Local.sRecordType,=,"B",V.Local.sRecordType,=,"C")
					F.Intrinsic.Control.Next(V.Local.iCnt)
				F.Intrinsic.Control.EndIf
				F.Intrinsic.String.Left(V.Local.sRet(V.Local.iCnt),12,V.Local.sPOFull)
				F.Intrinsic.String.Left(V.Local.sPOFull,7,V.Local.sPOHead)
				F.Intrinsic.String.Right(V.Local.sPOFull,4,V.Local.sPOLine)
				
				'F.Intrinsic.String.Split(V.Local.sPOFull," ",V.Local.sPOFull)
				
				F.Data.Datatable.AddRow("dtRecordsToUpdate","PURCHASE_ORDER",V.Local.sPOHead,"RECORD_NO",V.Local.sPOLine)
			F.Intrinsic.Control.Next(V.Local.iCnt)
		f.Intrinsic.control.Else
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
		
''''''''''''''''''''''''''''''''''''''''''''
		
		V.Local.sEmailList.Set("***EMPTY***")
		v.Local.sLastPO.Set("")
		F.Intrinsic.Control.For(v.Local.iCnt,0,V.DataTable.dtRecordsToUpdate.RowCount--,1)
			V.Local.sPO.Set(V.DataTable.dtRecordsToUpdate(V.Local.iCnt).PURCHASE_ORDER!FieldvalTrim)
			F.Intrinsic.String.LPad(V.Local.sPO,"0",7,V.Local.sPO)
			
			F.Intrinsic.Control.If(V.Local.sPO,<>,V.Local.sLastPO)
			
				'Update Buyer code if user has not set one already on the PO Header when it was opend from the 175100.lib
				
				F.Intrinsic.String.Build("Select BUYER from V_PO_HEADER where PURCHASE_ORDER = '{0}'",V.Local.sPO,V.Local.sSQL)
				F.ODBC.Connection!Con.ExecuteAndReturn(V.Local.sSQL,v.Local.sRet)
				F.Intrinsic.Control.If(v.Ambient.ExecuteAndReturnEOF.not)
					F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"")
						F.Intrinsic.Control.If(V.Local.sBuyerCode,<>,"")
							F.Intrinsic.String.Build("Update PO_HEADER set BUYER = '{0}' where PURCHASE_ORDER = '{1}' and RECORD_NO = '  A'",V.Local.sBuyerCode,V.Local.sPO,V.Local.sSQL)
							F.ODBC.Connection!Con.Execute(V.Local.sSQL)
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
			
				'Set up email list
				F.Intrinsic.Control.If(V.Local.sEmailList,=,"***EMPTY***")
					F.Intrinsic.String.Build("'{0}'",V.Local.sPO,V.Local.sEmailList)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("{0},'{1}'",V.Local.sEmailList,V.Local.sPO,V.Local.sEmailList)
				F.Intrinsic.Control.EndIf
				
				F.Intrinsic.Control.If(V.Local.sGV, =, "gvReqs")
				
					'Write user 1-5 to po lines for po reqs gridview
					F.Intrinsic.String.Build("update PO_LINES set PO_LINES.USER_1=(SELECT GCG_5988_REQUFS.UF_1 FROM GCG_5988_REQUFS WHERE GCG_5988_REQUFS.PO_REQ_NUMBER=PO_LINES.REQUISITION_NO AND GCG_5988_REQUFS.PO_REQ_LINE=PO_LINES.REQUISITION_LINE),PO_LINES.USER_2=(SELECT GCG_5988_REQUFS.UF_2 FROM GCG_5988_REQUFS WHERE GCG_5988_REQUFS.PO_REQ_NUMBER=PO_LINES.REQUISITION_NO AND GCG_5988_REQUFS.PO_REQ_LINE=PO_LINES.REQUISITION_LINE),PO_LINES.USER_3=(SELECT GCG_5988_REQUFS.UF_3 FROM GCG_5988_REQUFS WHERE GCG_5988_REQUFS.PO_REQ_NUMBER=PO_LINES.REQUISITION_NO AND GCG_5988_REQUFS.PO_REQ_LINE=PO_LINES.REQUISITION_LINE),PO_LINES.USER_4=(SELECT GCG_5988_REQUFS.UF_4 FROM GCG_5988_REQUFS WHERE GCG_5988_REQUFS.PO_REQ_NUMBER=PO_LINES.REQUISITION_NO AND GCG_5988_REQUFS.PO_REQ_LINE=PO_LINES.REQUISITION_LINE),PO_LINES.USER_5=(SELECT GCG_5988_REQUFS.UF_5 FROM GCG_5988_REQUFS WHERE GCG_5988_REQUFS.PO_REQ_NUMBER=PO_LINES.REQUISITION_NO AND GCG_5988_REQUFS.PO_REQ_LINE=PO_LINES.REQUISITION_LINE) WHERE PO_LINES.PURCHASE_ORDER='{0}'",V.Local.sPO,V.Local.sSQL)
					F.ODBC.Connection!Con.Execute(V.Local.sSQL)
					
				F.Intrinsic.Control.EndIf
				
				'get req line text 
				F.Intrinsic.String.Build("SELECT PURCHASE_ORDER,RECORD_NO,TEXT FROM REQSN_TEXT A LEFT JOIN V_PO_LINES B ON A.NUMBER=B.REQUISITION_NO AND A.LINE=REQUISITION_LINE WHERE B.PURCHASE_ORDER = '{0}';",V.Local.sPO,V.Local.sSQL)
				Function.ODBC.Connection!Con.OpenRecordsetRO("rstreqtxt",V.Local.sSQL)
				Function.Intrinsic.Control.DoUntil(V.odbc.Con!rstreqtxt.eof,=,True)
				
					'Write PO requisition line text to open po dashboard table GAB_4163_PO_NOTES
					F.Intrinsic.String.Build("INSERT INTO GAB_4163_PO_NOTES(PO,POLINE,NOTES) VALUES('{0}',LEFT('{1}',3),'{2}');",V.Local.sPO,V.ODBC.Con!RSTREQTXT.FieldValTrim!RECORD_NO,V.ODBC.Con!RSTREQTXT.FieldValTrim!TEXT,V.Local.sSQL2)
					F.ODBC.Connection!Con.Execute(V.Local.sSQL2)
				F.ODBC.Con!rstreqtxt.MoveNext
				F.Intrinsic.Control.Loop			
				F.ODBC.Con!rstreqtxt.Close
				
				

			F.Intrinsic.Control.EndIf
			v.Local.sLastPO.Set(V.Local.sPO)
		F.Intrinsic.Control.Next(V.Local.iCnt)
		
		'Call wrapper to open each PO (for loop)
		
		'Emails
		f.Intrinsic.Control.If(v.Screen.frmPO!ddlEmail.Text.Trim,<>,"Do Not Email")
			F.Intrinsic.Control.If(V.Local.sEmailList,<>,"***EMPTY***")
				F.Intrinsic.Control.CallSub(GenerateEmail,"EmailList",V.Local.sEmailList)
			F.Intrinsic.Control.EndIf	
		f.Intrinsic.Control.EndIf

		F.Data.DataTable.Close("dtRecordsToUpdate")
	F.Intrinsic.Control.EndIf

'	F.Intrinsic.Control.For(V.Local.iCnt,v.DataView.[V.local.sDT]!dvPOSelected.RowCount--,0,-1)
'		F.Intrinsic.Control.If(v.DataView.[V.local.sDT]!dvPOSelected(v.local.iCnt).Vendor!FieldValTrim,<>,"")
'			'Remove Row From Grid
'			F.Data.DataView.deleteRow(V.local.sDT,"dvPOSelected",v.local.iCnt)
'			F.Data.DataTable.AcceptChanges(V.local.sDT)
'		F.Intrinsic.Control.EndIf
'	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'Remove Lines from DataTable
	f.Intrinsic.Control.If(v.Local.sDT,<>,"dtReqs")
		F.Data.DataTable.Select(V.Local.sDT,"Select = True And VENDOR <> ''",V.Local.sSelect)
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.If(v.Global.bPOReq,<>,True)					
			F.Data.DataTable.Select(V.Local.sDT,"Select = True And VendorName <> '' And Hold <> True",V.Local.sSelect)
		f.Intrinsic.Control.Else			
			F.Data.DataTable.Select(V.Local.sDT,"Select = True And VendorName <> '' And Hold <> True and ApprovedBy <> ''",V.Local.sSelect)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.Local.sSelect,<>,"***NORETURN***")
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Intrinsic.Control.For(V.Local.iCnt,V.Local.sSelect.UBound,0,-1)
			v.Local.iSelect2.Set(V.Local.sSelect(V.Local.iCnt))			
			'Move Purchase Requisition to History
			F.Intrinsic.Control.If(V.Local.sDT,=,"dtReqs")				
				F.Intrinsic.Control.CallSub(MovePurchReqToHist,"POReqNum",V.DataTable.[V.Local.sDT](v.local.iSelect2).PO_Req_Number!FieldValTrim,"POReqLine",V.DataTable.[V.Local.sDT](v.local.iSelect2).PO_Req_Line!FieldValTrim)
			F.Intrinsic.Control.EndIf
			'Delete Rows
			F.Data.DataTable.DeleteRow(V.Local.sDT,v.local.iSelect2)
			F.Data.DataTable.AcceptChanges(V.Local.sDT)
		F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Data.DataTable.SetValue(V.Local.sDT,-1,"Select",False)
	F.Intrinsic.Control.EndIf
	
	F.Data.DataView.Close(V.Local.sDT,"dvPOSelected")

'Add in Custom PO req UF1
'add in move req line to history
'Test PO req
'make the Flag work for open the POs

	
'-------------------------------------------------------------------------------------------------------------------------------------
'	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
'		F.Intrinsic.Control.Case("CTXPO")
'			f.Intrinsic.Control.If(v.Global.gvPO.Not)
'				f.Intrinsic.Control.ExitSub
'			f.Intrinsic.Control.EndIf		
'			Gui.frmPO.lblStatus.Caption("Generating POs....")
'			Gui.frmPO.lblStatus.Visible(True)
'			
'			F.Intrinsic.Control.If(V.Screen.frmPO!ddlPOs.Text,=,"Individual POs")
'				'Create Individual POs
'				F.Data.DataTable.Select("dtPO","Select = True",V.Local.sSelect)
'				F.Intrinsic.Control.If(V.Local.sSelect,<>,"***NORETURN***")
'					F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
'					F.Intrinsic.Control.For(V.Local.iCnt,V.Local.sSelect.UBound,0,-1)
'						v.Local.iSelect.Set(V.Local.sSelect(V.Local.iCnt))
'						F.Intrinsic.Control.If(V.DataTable.dtPO(v.local.iSelect).Vendor!FieldValTrim,<>,"")
'							V.Local.dDueDate.Set(V.DataTable.dtPO(v.local.iSelect).DATE_DUE!FieldValTrim)
'							F.Intrinsic.Math.Mult(V.DataTable.dtPO(v.local.iSelect).Purchase!FieldValTrim,V.DataTable.dtPO(v.local.iSelect).Cost!FieldValTrim,V.Local.fExtension)
'							F.Data.DataTable.AddRow("175100","ID",v.local.iSelect,"AutoNumber","Y","AddComments","Y","OpenPO","Y")
'							F.Data.DataTable.AddRow("175100File","ID",v.local.iSelect,"Vendor",V.DataTable.dtPO(v.local.iSelect).Vendor!FieldValTrim,"Part",V.DataTable.dtPO(v.local.iSelect).PART!FieldValTrim,"Loc",V.DataTable.dtPO(v.local.iSelect).LOCATION!FieldValTrim,"DueDate",V.Local.dDueDate.FormatYYYYMMDD,"Description",V.DataTable.dtPO(v.local.iSelect).DESCRIPTION!FieldValTrim,"InvUM",V.DataTable.dtPO(v.local.iSelect).UM!FieldValTrim,"InvCost",V.DataTable.dtPO(v.local.iSelect).Cost!FieldValTrim,"InvQty",V.DataTable.dtPO(v.local.iSelect).Purchase!FieldValTrim,"POUM",V.DataTable.dtPO(v.local.iSelect).UMPurch!FieldValTrim,"POCost",V.DataTable.dtPO(v.local.iSelect).Cost!FieldValTrim,"POQty",V.DataTable.dtPO(v.local.iSelect).Purchase!FieldValTrim,"GLAccount",V.DataTable.dtPO(v.local.iSelect).GLAcct!FieldValTrim,"Extension",V.Local.fExtension)
'							'Remove Row From Grid
'							F.Data.DataTable.DeleteRow("dtPO",v.local.iSelect)
'							F.Data.DataTable.AcceptChanges("dtPO")
'						F.Intrinsic.Control.Else
'							F.Data.DataTable.SetValue("dtPO",v.local.iSelect,"Select",False)
'						F.Intrinsic.Control.EndIf
'					F.Intrinsic.Control.Next(V.Local.iCnt)
'				F.Intrinsic.Control.EndIf
'				
'				F.Intrinsic.Control.If(V.Local.sSelect.UBound,>,-1)
'					F.Intrinsic.Control.CallSub(175100Sync)
'				F.Intrinsic.Control.EndIf
'			F.Intrinsic.Control.Else
'				F.Intrinsic.Control.CallSub(MenuClickCreateAutoPOs)
'				
'			F.Intrinsic.Control.EndIf
'	F.Intrinsic.Control.EndSelect
	
	Gui.frmPO.lblStatus.Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickNewAuto.End

Program.Sub.MenuClickCreateAutoPOs.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iCnt2.Declare
	V.Local.dDueDate.Declare
	V.Local.fExtension.Declare
	V.Local.sSelect.Declare
	V.Local.iPO.Declare
	V.Local.sPO.Declare
	V.Local.iPOLine.Declare
	V.Local.sPOLine.Declare
	V.Local.sFilter.Declare
	V.Local.sStatus.Declare
	V.Local.sReturnFileName.Declare
	V.Local.sSQL.Declare
	V.Local.sFileName.Declare
	V.Local.sPURORDER.Declare
	V.Local.sEmailList.Declare
	V.Local.sName.Declare
	V.Local.sNameSplit.Declare
	V.Local.sBuyerCode.Declare
	V.Local.sGV.Declare
	V.Local.sDT.Declare
	v.Local.iSelect.Declare
	v.Local.iSelect2.Declare
	v.Local.sParams.Declare
	V.Local.sRet.Declare
	V.Local.sSQL2.Declare
	V.Local.iCnt3.Declare
	V.Local.sCurrentLastPO.Declare
	V.Local.sLASTPO.Declare(String)
	V.Local.sOPPO.Declare(String)
	
	V.Local.sCurrency.Declare(String)
	V.Local.sUseGstTax.Declare(String)
	V.Local.sHold.Declare(String)
	V.Local.sLeft.Declare(String)
	V.Local.sRight.Declare(String)
	V.Local.sGstPercent.Declare(String)
	
	F.Intrinsic.Control.SelectCase(V.Screen.frmPO!tabPO.Tab)
		F.Intrinsic.Control.Case(0)
			f.Intrinsic.Control.If(v.Global.gvPO.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			V.Local.sGV.Set("gvPO")
			V.Local.sDT.Set("dtPO")
		F.Intrinsic.Control.Case(1)
			f.Intrinsic.Control.If(v.Global.gvPODrop.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf		
			V.Local.sGV.Set("gvPODrop")
			V.Local.sDT.Set("dtPODrop")
		F.Intrinsic.Control.Case(2)
			f.Intrinsic.Control.If(v.Global.gvReqs.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf			
			V.Local.sGV.Set("gvReqs")
			V.Local.sDT.Set("dtReqs")
	F.Intrinsic.Control.EndSelect
	
	V.Local.sEmailList.Set("***EMPTY***")
	
	'Get Buyer Code
	F.Global.Security.GetFullName(V.Caller.User,V.Local.sName)
	F.Intrinsic.String.Split(V.Local.sName," ",V.Local.sNameSplit)
	F.Intrinsic.Control.If(V.Local.sNameSplit.UBound,=,2)
		F.Intrinsic.String.Build("{0} {1}",V.Local.sNameSplit(0),V.Local.sNameSplit(2),V.Local.sName)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Build("Select Buyer_Code From V_Buyers Where Upper(Buyer) = Upper('{0}');",V.Local.sName,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sBuyerCode)
	'Create Grouped POs 
	'tab 0 or 1
	f.Intrinsic.Control.If(v.Local.sDT,<>,"dtReqs")
		F.Data.DataView.Create(V.Local.sDT,"dvPOVends",22,"Select = True And VendorName <> ''","")
		F.Data.DataView.ToDataTableDistinct(V.Local.sDT,"dvPOVends","dtPOVends","Vendor*!*VendorName",True)
		F.Data.DataView.Close(V.Local.sDT,"dvPOVends")
	'tab 2 reqs
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.If(v.Global.bPOReq,<>,True)		
			F.Data.DataView.Create(V.Local.sDT,"dvPOVends",22,"Select = True And VendorName <> '' And Hold <> True","")
		f.Intrinsic.Control.Else
			F.Data.DataView.Create(V.Local.sDT,"dvPOVends",22,"Select = True And VendorName <> '' And Hold <> True and ApprovedBy <> ''","")
		f.Intrinsic.Control.EndIf
		F.Data.DataView.ToDataTableDistinct(V.Local.sDT,"dvPOVends","dtPOVends","Vendor*!*VendorName",True)		
		F.Data.DataView.Close(V.Local.sDT,"dvPOVends")		
	f.Intrinsic.Control.EndIf
	
	'Loop through distinct selected vedors list
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtPOVends.RowCount--,1)
		F.Intrinsic.String.Build("Select = True And Vendor = '{0}'",V.DataTable.dtPOVends(V.Local.iCnt).Vendor!FieldValTrim,V.Local.sFilter)
		F.Data.DataTable.Select(V.Local.sDT,V.Local.sFilter,V.Local.sSelect)
		
		'AT Edit 5/10/2022. Find last PO number used and update tables accordingly once the next number is selected
		'-------------------------------------------------------------------------------------------
		'Find all instances of last PO and select highest number
		F.ODBC.Connection!Con.ExecuteAndReturn("Select Last_PO_Num From Last_PO Where Ass_Sys = 'PUR' And Ass_Sub_Sys = 'CTL'", V.Local.sLASTPO)
		F.ODBC.Connection!Con.ExecuteAndReturn("Select F_LONG from OP_HEADER where ID = '400301' and SEQUENCE = '0000'", V.Local.sOPPO)
		
		F.Intrinsic.Control.If(V.Local.sOPPO, >, V.Local.sLASTPO)
			V.Local.sPO.Set(V.Local.sOPPO)
		F.Intrinsic.Control.Else
			V.Local.sPO.Set(V.Local.sLASTPO)
		F.Intrinsic.Control.EndIf
		
		'Take last PO used and increment by one to use as new PO
		F.Intrinsic.String.LPad(V.Local.sPO.++, "0", 7, V.Local.sPO)
		
		'Update Last PO Number
		F.Intrinsic.String.Build("Update Last_PO Set Last_PO_Num = '{0}' Where Ass_Sys = 'PUR' And Ass_Sub_Sys = 'CTL';",V.Local.sPO,V.Local.sSQL)
		F.ODBC.Connection!Con.Execute(V.Local.sSQL)
		
		'Update last PO Number in OP_HEADER table
		F.Intrinsic.String.Build("Update OP_HEADER set F_LONG = '{0}' where ID = '400301' and SEQUENCE = '0000'", V.Local.sPO, V.Local.sSQL)
		F.ODBC.Connection!Con.Execute(V.Local.sSQL)
		
		'Update last PO bumber in COMPANY_OPT
		'Last PO number is saved split into 3 different columns in COMPANY_OPT table: CURRENCY, USE_GST_TAX, GST_PERCENT
		F.Intrinsic.String.Left(V.Local.sPO, 3, V.Local.sCurrency)
		F.Intrinsic.String.Mid(V.Local.sPO, 4, 1, V.Local.sUseGstTax)
		F.Intrinsic.String.Mid(V.Local.sPO, 5, 2, V.Local.sLeft)
		F.Intrinsic.String.Mid(V.Local.sPO, 7, 1, V.Local.sRight)

		F.Intrinsic.String.Build("{0}.{1}", V.Local.sLeft, V.Local.sRight, V.Local.sGstPercent)
		
		F.Intrinsic.String.Build("Update COMPANY_OPT set CURRENCY = '{0}', USE_GST_TAX = '{1}', GST_PERCENT = '{2}' where SYS = 'PUR' and SUB_SYS = 'CTL'", V.Local.sCurrency, V.Local.sUseGstTax, V.Local.sGstPercent, V.Local.sSQL)
		F.ODBC.Connection!Con.Execute(V.Local.sSQL)
		'-------------------------------------------------------------------------------------------
		
		F.Intrinsic.Control.If(V.Local.sSelect,<>,"***NORETURN***")
			F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
			
			'Loop through current distinct vendor selected
			F.Intrinsic.Control.For(V.Local.iCnt2,0,V.Local.sSelect.UBound,1)	
				
				'Set PO Line
				F.Intrinsic.Math.Add(V.Local.iCnt2,1,V.Local.iPOLine)
				F.Intrinsic.String.LPad(V.Local.iPOLine,"0",3,V.Local.sPOLine)
				
				'Create Upload File: PURORDER.txt
				v.Local.iSelect.Set(V.Local.sSelect(V.Local.iCnt2))
				F.Intrinsic.Control.CallSub("GenerateGroupedPOs","PO",V.Local.sPO,"POLine",V.Local.sPOLine,"Vendor",V.DataTable.dtPOVends(V.Local.iCnt).Vendor!FieldValTrim,"DueDate",V.DataTable.[V.Local.sDT](v.local.iSelect).DATE_DUE!FieldValTrim,"Part",V.DataTable.[V.Local.sDT](v.local.iSelect).Part!FieldValTrim,"Loc",V.DataTable.[V.Local.sDT](v.local.iSelect).Location!FieldValTrim,"Description",V.DataTable.[V.Local.sDT](v.local.iSelect).Description!FieldValTrim,"UM",V.DataTable.[V.Local.sDT](v.local.iSelect).UMpurch!FieldValTrim,"PL",V.DataTable.[V.Local.sDT](v.local.iSelect).PL!FieldValTrim,"Cost",V.DataTable.[V.Local.sDT](v.local.iSelect).Cost!FieldValTrim,"Qty",V.DataTable.[V.Local.sDT](v.local.iSelect).Purchase!FieldValTrim,"BuyerCode",V.Local.sBuyerCode,"GLAccount",V.DataTable.[V.Local.sDT](v.local.iSelect).GLAcct!FieldValTrim,"ReqNo",V.DataTable.[V.Local.sDT](v.local.iSelect).PO_Req_Number!FieldVal,"ReqLine",V.DataTable.[V.Local.sDT](v.local.iSelect).PO_Req_Line!FieldVal)
				'Set data to text file variable
				F.Intrinsic.Control.If(V.Local.sPURORDER,=,"")
					V.Local.sPURORDER.Set(v.Args.POTEXT)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("{0}{1}",V.Local.sPURORDER,V.Args.POTEXT,V.Local.sPURORDER)
				F.Intrinsic.Control.EndIf
				'Update On Order PO in Inventory_Mstr (I1MST)
				F.Intrinsic.String.Build("Update Inventory_Mstr Set Qty_OnOrder_PO = Qty_OnOrder_PO + {0} Where Part = '{1}' And Location = '{2}';",V.DataTable.[V.Local.sDT](v.local.iSelect).Purchase!FieldValTrim,V.DataTable.[V.Local.sDT](v.local.iSelect).Part!FieldValTrim,V.DataTable.[V.Local.sDT](v.local.iSelect).Location!FieldValTrim,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)				
			F.Intrinsic.Control.Next(V.Local.iCnt2)
			
			'Write PO info to PURORDER.txt
			F.Intrinsic.String.Build("{0}\PURORDER.txt",V.Caller.FilesDir,V.Local.sFileName)
			F.Intrinsic.File.String2File(V.Local.sFileName,V.Local.sPURORDER)
		
			'Upload PO File
			F.Global.Callwrapper.New("POUpload","Purchasing.PurchaseOrderUpload")
			F.Global.Callwrapper.SetProperty("POUpload","Mode",0)
			F.Global.Callwrapper.SetProperty("POUpload","FileName","PURORDER")
			F.Global.CallWrapper.Run("POUpload")
			F.Global.CallWrapper.GetProperty("POUpload","Status",V.Local.sStatus)
			F.Global.CallWrapper.GetProperty("POUpload","ReturnFileName",V.Local.sReturnFileName)
			
			'Write user 1-5 to po lines for po reqs gridview
			F.Intrinsic.String.Build("update PO_LINES set PO_LINES.USER_1=(SELECT GCG_5988_REQUFS.UF_1 FROM GCG_5988_REQUFS WHERE GCG_5988_REQUFS.PO_REQ_NUMBER=PO_LINES.REQUISITION_NO AND GCG_5988_REQUFS.PO_REQ_LINE=PO_LINES.REQUISITION_LINE),PO_LINES.USER_2=(SELECT GCG_5988_REQUFS.UF_2 FROM GCG_5988_REQUFS WHERE GCG_5988_REQUFS.PO_REQ_NUMBER=PO_LINES.REQUISITION_NO AND GCG_5988_REQUFS.PO_REQ_LINE=PO_LINES.REQUISITION_LINE),PO_LINES.USER_3=(SELECT GCG_5988_REQUFS.UF_3 FROM GCG_5988_REQUFS WHERE GCG_5988_REQUFS.PO_REQ_NUMBER=PO_LINES.REQUISITION_NO AND GCG_5988_REQUFS.PO_REQ_LINE=PO_LINES.REQUISITION_LINE),PO_LINES.USER_4=(SELECT GCG_5988_REQUFS.UF_4 FROM GCG_5988_REQUFS WHERE GCG_5988_REQUFS.PO_REQ_NUMBER=PO_LINES.REQUISITION_NO AND GCG_5988_REQUFS.PO_REQ_LINE=PO_LINES.REQUISITION_LINE),PO_LINES.USER_5=(SELECT GCG_5988_REQUFS.UF_5 FROM GCG_5988_REQUFS WHERE GCG_5988_REQUFS.PO_REQ_NUMBER=PO_LINES.REQUISITION_NO AND GCG_5988_REQUFS.PO_REQ_LINE=PO_LINES.REQUISITION_LINE) WHERE PO_LINES.PURCHASE_ORDER='{0}'",V.Local.sPO,V.Local.sSQL)
			F.ODBC.Connection!Con.Execute(V.Local.sSQL)
			
			'get req line text 			
					'F.Intrinsic.String.Build("SELECT TEXT FROM REQSN_TEXT A LEFT JOIN V_PO_LINES B ON A.NUMBER=B.REQUISITION_NO AND A.LINE=REQUISITION_LINE WHERE B.PURCHASE_ORDER = '{0}' AND B.RECORD_NO = '{1}0';",V.Local.sPO,V.Local.sPOLine,V.Local.sSQL)
					'F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)	
					
			F.Intrinsic.String.Build("SELECT PURCHASE_ORDER,RECORD_NO,TEXT FROM REQSN_TEXT A LEFT JOIN V_PO_LINES B ON A.NUMBER=B.REQUISITION_NO AND A.LINE=REQUISITION_LINE WHERE B.PURCHASE_ORDER = '{0}';",V.Local.sPO,V.Local.sSQL)
			Function.ODBC.Connection!Con.OpenRecordsetRO("rstreqtxt",V.Local.sSQL)
			Function.Intrinsic.Control.DoUntil(V.odbc.Con!rstreqtxt.eof,=,True)
				'Write PO requisition line text to open po dashboard table GAB_4163_PO_NOTES
				F.Intrinsic.String.Build("INSERT INTO GAB_4163_PO_NOTES(PO,POLINE,NOTES) VALUES('{0}',LEFT('{1}',3),'{2}');",V.Local.sPO,V.ODBC.Con!RSTREQTXT.FieldValTrim!RECORD_NO,V.ODBC.Con!RSTREQTXT.FieldValTrim!TEXT,V.Local.sSQL2)
				F.ODBC.Connection!Con.Execute(V.Local.sSQL2)
			F.ODBC.Con!rstreqtxt.MoveNext
			F.Intrinsic.Control.Loop			
			F.ODBC.Con!rstreqtxt.Close
		
			F.Intrinsic.Control.If(V.Local.sEmailList,=,"***EMPTY***")
				F.Intrinsic.String.Build("'{0}'",V.Local.sPO,V.Local.sEmailList)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0},'{1}'",V.Local.sEmailList,V.Local.sPO,V.Local.sEmailList)
			F.Intrinsic.Control.EndIf
			'Delete PURORDER.txt
			F.Intrinsic.File.DeleteFile(V.Local.sFileName)
			V.Local.sPURORDER.Set("")				
			
			'Open the PO for maintenance before adding another
			f.Intrinsic.Control.If(v.Screen.frmPO!chkOpenPOMaint2.Value,=,1)
				F.Intrinsic.String.ConcatCallWrapperArgs("O",V.Local.sPO,"",V.Local.sParams)
				F.Global.General.CallWrapperASync(175200,V.Local.sParams)				
			f.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Data.DataTable.Close("dtPOVends")
	
	'Remove Lines from DataTable
	f.Intrinsic.Control.If(v.Local.sDT,<>,"dtReqs")
		F.Data.DataTable.Select(V.Local.sDT,"Select = True And VendorName <> ''",V.Local.sSelect)
	f.Intrinsic.Control.Else
		f.Intrinsic.Control.If(v.Global.bPOReq,<>,True)					
			F.Data.DataTable.Select(V.Local.sDT,"Select = True And VendorName <> '' And Hold <> True",V.Local.sSelect)
		f.Intrinsic.Control.Else			
			F.Data.DataTable.Select(V.Local.sDT,"Select = True And VendorName <> '' And Hold <> True and ApprovedBy <> ''",V.Local.sSelect)
		f.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.Local.sSelect,<>,"***NORETURN***")
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Intrinsic.Control.For(V.Local.iCnt,V.Local.sSelect.UBound,0,-1)
			v.Local.iSelect2.Set(V.Local.sSelect(V.Local.iCnt))			
			'Move Purchase Requisition to History
			F.Intrinsic.Control.If(V.Local.sDT,=,"dtReqs")				
				F.Intrinsic.Control.CallSub(MovePurchReqToHist,"POReqNum",V.DataTable.[V.Local.sDT](v.local.iSelect2).PO_Req_Number!FieldValTrim,"POReqLine",V.DataTable.[V.Local.sDT](v.local.iSelect2).PO_Req_Line!FieldValTrim)
			F.Intrinsic.Control.EndIf
			'Delete Rows
			F.Data.DataTable.DeleteRow(V.Local.sDT,v.local.iSelect2)
			F.Data.DataTable.AcceptChanges(V.Local.sDT)
		F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Data.DataTable.SetValue(V.Local.sDT,-1,"Select",False)
	F.Intrinsic.Control.EndIf

	'Emails
	f.Intrinsic.Control.If(v.Screen.frmPO!ddlEmail.Text.Trim,<>,"Do Not Email")
		F.Intrinsic.Control.If(V.Local.sEmailList,<>,"***EMPTY***")
			F.Intrinsic.Control.CallSub(GenerateEmail,"EmailList",V.Local.sEmailList)
		F.Intrinsic.Control.EndIf
	f.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickCreateAutoPOs.End

Program.Sub.GenerateGroupedPOs.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.sVenName.Declare
	V.Local.sVenAdd1.Declare
	V.Local.sVenAdd2.Declare
	V.Local.sVenState.Declare
	V.Local.sVenZip.Declare
	V.Local.sVenCity.Declare
	V.Local.sVenAttn.Declare
	V.Local.sVenGL.Declare
	V.Local.sGL.Declare
	V.Local.sCurrency.Declare
	V.local.sPODate.Declare
	V.local.sPODueDate.Declare
	V.Local.sRet.Declare
	V.Local.sTemp.Declare
	V.Local.sTempFull.Declare

	F.Intrinsic.Control.If(V.Args.POLine,=,001)
	'-------------------------------------------------------------------# Header #-------------------------------------------------------------------
		F.Intrinsic.String.Build("Select A.Vendor,A.Name_Vendor,A.Address1,A.Address2,A.City,A.Rec,A.State,A.Code_Zip,A.Country,A.Attention,A.Normal_GL_Account,B.Default_Currency As CurrencyCode From V_Vendor_Master A Left Join V_Vendor_Intl As B on A.Vendor = B.Vendor Where A.Vendor = '{0}';",V.Args.Vendor,V.Local.sSQL)
		F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstVend",V.Local.sSQL)
		F.Intrinsic.Control.If(V.ODBC.Con!rstVend.EOF,=,False)
			V.Local.sVenName.set(V.ODBC.Con!rstVend.FieldVal!Name_Vendor)
			V.Local.sVenAdd1.set(V.ODBC.Con!rstVend.FieldVal!Address1)
			V.Local.sVenAdd2.set(V.ODBC.Con!rstVend.FieldVal!Address2)
			V.Local.sVenState.set(V.ODBC.Con!rstVend.FieldVal!State)
			V.Local.sVenZip.set(V.ODBC.Con!rstVend.FieldVal!Code_Zip)
			V.Local.sVenCity.set(V.ODBC.Con!rstVend.FieldVal!City)
			V.Local.sVenAttn.set(V.ODBC.Con!rstVend.FieldVal!Attention)
			V.Local.sVenGL.set(V.ODBC.Con!rstVend.FieldVal!Normal_GL_Account)
			V.Local.sCurrency.set(V.ODBC.Con!rstVend.FieldVal!CurrencyCode)
		F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstVend.Close
		'PO Date
		F.Intrinsic.String.Format(V.Ambient.Date,"MMDDYY",V.local.sPODate)
		'RequiredDate,DueDate
		F.Intrinsic.String.Format(V.Args.DueDate,"MMDDYY",V.local.sPODueDate)
	'A Record
		'PO,Rec Type
		F.Intrinsic.String.Concat(V.Args.PO,"  A",V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",12,V.Local.sTemp)
		'Buyer
		V.Local.sRet.Set("")
		F.Intrinsic.String.RPad(V.Args.BuyerCode," ",7,V.Local.sRet)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sRet,V.Local.sTemp)
		'Ship Via
		V.Local.sRet.Set("")
		F.Intrinsic.String.RPad(V.Local.sRet," ",15,V.Local.sRet)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sRet,V.Local.sTemp)
		'FOB
		V.Local.sRet.Set("")
		F.Intrinsic.String.RPad(V.Local.sRet," ",15,V.Local.sRet)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sRet,V.Local.sTemp)
		'Terms
		V.Local.sRet.Set("")
		F.Intrinsic.String.RPad(V.Local.sRet," ",12,V.Local.sRet)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sRet,V.Local.sTemp)
		'PO Date
		F.Intrinsic.String.Rpad(V.Local.sTemp," ",195,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.local.sPODate,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",207,V.Local.sTemp)
		'Date Due
		F.Intrinsic.String.Concat(V.Local.sTemp,V.local.sPODueDate,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",229,V.Local.sTemp)
		'GL Account
		V.Local.sGL.Set(V.Args.GLAccount)
		F.Intrinsic.Control.If(V.Local.sGL.Trim,=,"")
			V.Local.sGL.Set(V.Local.sVenGL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sGL,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",267,V.Local.sTemp)
		'Vendor #
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Vendor,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",298,V.Local.sTemp)
		'User 1
		F.Intrinsic.String.Concat(V.Local.sTemp,"",V.Local.sTemp)
		'New Line
		F.Intrinsic.String.Concat(V.Local.sTempFull,V.Local.sTemp,V.Ambient.NewLine,V.Local.sTempFull)
	'B Record
		'PO,Rec Type,Name Vendor
		F.Intrinsic.String.Concat(V.Args.PO,"  B",V.Local.sVenName,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",40,V.Local.sTemp)
		'Vendor Address
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenAdd1,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",70,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenAdd2,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",190,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenCity,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",210,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenState,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",212,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenZip,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",237,V.Local.sTemp)
		'Attention
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenAttn,V.Local.sTemp)
		'New Line
		F.Intrinsic.String.Concat(V.Local.sTempFull,V.Local.sTemp,V.Ambient.NewLine,V.Local.sTempFull)
	'C Record
		F.Intrinsic.String.Concat(V.Args.PO,"  C",V.DataTable.dtCompany(0).NAME_COMPANY!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",40,V.Local.sTemp)
		'Vendor Address
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).ADDRESS1!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",70,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).ADDRESS2!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",190,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).CITY!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",210,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).STATE!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",212,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).CODE_ZIP!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",237,V.Local.sTemp)
		'Attention
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).ATTENTION!FieldValTrim,V.Local.sTemp)
		'New Line
		F.Intrinsic.String.Concat(V.Local.sTempFull,V.Local.sTemp,V.Ambient.NewLine,V.Local.sTempFull)
	F.Intrinsic.Control.EndIf
	
	'-------------------------------------------------------------------# Line #-------------------------------------------------------------------
	'PO, Line,Part
	F.Intrinsic.String.Concat(V.Args.PO,V.Args.POLine,V.Args.Part,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",30,V.Local.sTemp)
	'Loc
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Loc,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",32,V.Local.sTemp)
	'Description
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Description.Trim,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",62,V.Local.sTemp)
	'UM
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.UM.Trim,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",65,V.Local.sTemp)
	'Work Order Number
	F.Intrinsic.String.Concat(V.Local.sTemp,"",V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",71,V.Local.sTemp)
	'Work Order Sequence
	F.Intrinsic.String.Concat(V.Local.sTemp,"",V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",77,V.Local.sTemp)
	'Requisition Number
	F.Intrinsic.Control.If(V.Args.ReqNo.Trim,=,"")
		F.Intrinsic.String.Concat(V.Local.sTemp,"      ",V.Local.sTemp)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.ReqNo,V.Local.sTemp)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",87,V.Local.sTemp)
	'Taxable
	F.Intrinsic.String.Concat(V.Local.sTemp,"",V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",100,V.Local.sTemp)
	'GL Account
	F.Intrinsic.String.Concat(V.Local.sTemp,"",V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",121,V.Local.sTemp)
	'PL
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.PL.Trim,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",124,V.Local.sTemp)
	'Required Date Line DueDate
	F.Intrinsic.String.Format(V.Args.DueDate,"MMDDYY",V.local.sPODueDate)
	F.Intrinsic.String.Concat(V.Local.sTemp,V.local.sPODueDate,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",136,V.Local.sTemp)
	'Cost
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Cost,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",168,V.Local.sTemp)
	'Qty
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Qty,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",266,V.Local.sTemp)
	'Work Order Sequence
	F.Intrinsic.String.Concat(V.Local.sTemp,"",V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",339,V.Local.sTemp)
	'Currency
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sCurrency,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",548,V.Local.sTemp)
	'Requisition Line
	F.Intrinsic.Control.If(V.Args.ReqLine.Trim,=,"")
		F.Intrinsic.String.Concat(V.Local.sTemp,"   ",V.Local.sTemp)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.ReqLine,V.Local.sTemp)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",551,V.Local.sTemp)
	'Add line to variable that will be written to PURORDER.txt
	F.Intrinsic.String.Concat(V.Local.sTempFull,V.Local.sTemp,V.Ambient.NewLine,V.Local.sTempFull)
	
	'Return upload text
	F.Intrinsic.Variable.AddRV("POTEXT",V.Local.sTempFull)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.GenerateGroupedPOs.End

Program.Sub.MovePurchReqToHist.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare
	
	'INSERT Record
	F.Intrinsic.String.Build("INSERT INTO REQ_HIST SELECT * FROM PURCHASE_REQS WHERE PO_REQ_NUMBER = '{0}' AND PO_REQ_LINE = '{1}';",V.Args.POReqNum,V.Args.POReqLine,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	'REQ text
	F.Intrinsic.String.Build("INSERT INTO REQSN_H_TEXT SELECT * FROM REQSN_TEXT WHERE NUMBER = '{0}' AND LINE = '{1}';",V.Args.POReqNum,V.Args.POReqLine,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	
	'DELETE Record
	F.Intrinsic.String.Build("DELETE FROM PURCHASE_REQS WHERE PO_REQ_NUMBER = '{0}' AND PO_REQ_LINE = '{1}';",V.Args.POReqNum,V.Args.POReqLine,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	'REQ text
	F.Intrinsic.String.Build("DELETE FROM REQSN_TEXT WHERE NUMBER = '{0}' AND LINE = '{1}';",V.Args.POReqNum,V.Args.POReqLine,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)	
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.MovePurchReqToHist.End

Program.Sub.GetVendors.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtVendStat.Exists,=,False)
		'Name_Vendor
		F.Data.Dictionary.CreateFromSQL("dVendorName","con","Select RTrim(Vendor) As Vendor,RTrim(Name_Vendor) From V_Vendor_Master Where Vendor <> '' Order By Vendor;")
		F.Data.Dictionary.SetDefaultReturn("dVendorName","")
		'Vendor_name
		F.Data.Dictionary.CreateFromSQL("dNameVendor","con","Select RTrim(Left(Name_Vendor,20)) As Vendor,RTrim(Vendor) From V_Vendor_Master Where Vendor <> '' Order By Vendor;")
		F.Data.Dictionary.SetDefaultReturn("dNameVendor","")
		
		'GL Acct
		'F.Data.Dictionary.CreateFromSQL("dGLAcct","con","Select Product_Line,RTrim(Purchasing_Account) As Purchasing_Account From V_Product_Line Where Product_Line <> '' Order by 1;")
		F.Data.Dictionary.CreateFromSQL("dGLAcct","con","Select Prod_Line as Product_Line,RTrim(GL_ACCT) As Purchasing_Account From PL_GL_ACCOUNTS Where Product_Line <> '' and TYPE = 2 Order by 1;")
		F.Data.Dictionary.SetDefaultReturn("dGLAcct","")
		
		'Vendors
		'F.Data.DataTable.CreateFromSQL("dtVendStat","con","Select Part+Location As PartLoc,RTrim(Vendor) As Vendor,Date_Received,2 As Status From V_PO_History Where Part <> '' Union Select A.Part+A.Location As PartLoc,RTrim(B.Name_Vendor) As Vendor,Cast(DateAdd(Day,1,CurDate()) As Date) As Date_Received,1 As Status From Inventory_Mstr A Join Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location Where B.Name_Vendor <> '' Order By Status,PartLoc,Date_Received Desc;",True)
		F.Data.DataTable.CreateFromSQL("dtVendStat1","con","Select A.Part+A.Location As PartLoc,RTrim(B.Name_Vendor) As Vendor,Cast(DateAdd(Day,1,CurDate()) As Date) As Date_Received,1 As Status From Inventory_Mstr A Join Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location Where B.Name_Vendor <> '';",True)
		F.Data.DataTable.CreateFromSQL("dtVendStat2","con","Select Part+Location As PartLoc,RTrim(Vendor) As Vendor,Cast(Date_Received As Date) As Date_Received,2 As Status From V_PO_History Where Part <> '' And Date_Received <> '1900-01-01';",True)
		F.Data.DataTable.Merge("dtVendStat2","dtVendStat1",True,3)
		F.Data.DataView.Create("dtVendStat1","dvVendStat1",22,"","Status,PartLoc,Date_Received Desc")
		F.Data.DataView.ToDataTable("dtVendStat1","dvVendStat1","dtVendStat",True)
		F.Data.DataTable.Close("dtVendStat1")
		F.Data.DataTable.Close("dtVendStat2")
		F.Data.Datatable.FillFromDictionary("dtVendStat","dNameVendor","Vendor","Vendor")
		F.Data.Dictionary.CreateFromDataTable("dVendor","dtVendStat","PartLoc","Vendor")
		F.Data.Dictionary.SetDefaultReturn("dVendor","")
		
		F.Data.Dictionary.Close("dNameVendor")
		
		'Status
		F.Data.Dictionary.CreateFromDataTable("dStatus","dtVendStat","PartLoc","Status")
		F.Data.Dictionary.SetDefaultReturn("dStatus",0)
		
		'Buyer Code
		F.Data.Dictionary.CreateFromSQL("dBuyerCode","con","Select rtrim(Vendor) as Vendor,Buyer From V_Vendor_Master Where Vendor <> '' And Buyer <> '' Order By Vendor;")
		F.Data.Dictionary.SetDefaultReturn("dBuyerCode","")
		
		'Buyer Name
		F.Data.Dictionary.CreateFromSQL("dBuyerName","con","Select Buyer_Code,RTRIM(Buyer) As Buyer From V_Buyers;")
		F.Data.Dictionary.SetDefaultReturn("dBuyerName","")
		
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.GetVendors.End

Program.Sub.cmdRefresh_Click.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	gui.frmPO.tabPO.SetTab(0)
	gui.frmPO.chkBrwVends.Value(1)
	F.Intrinsic.Control.CallSub(chkBrwVends_Click)
	gui.frmPO.cmdRefresh.Enabled(False)
	gui.frmPO.frameOptions.Enabled(False)
	gui.frmPO.lblProgress.Caption("Getting Vendors...")
	F.Intrinsic.Control.CallSub(GetVendors)
	gui.frmPO.lblProgress.Caption("Inv Check...")
	F.Intrinsic.Control.CallSub(InvCheck)
	gui.frmPO.lblProgress.Caption("Inv Check Drop...")
	F.Intrinsic.Control.CallSub(InvCheckDrop)
	gui.frmPO.lblProgress.Caption("Load Cost...")
	F.Intrinsic.Control.CallSub(LoadCost)
	gui.frmPO.lblProgress.Caption("Load Requisitions...")
	F.Intrinsic.Control.CallSub(LoadRequisitions)
	gui.frmPO.lblProgress.Caption("Completed.")
	gui.frmPO.cmdRefresh.Enabled(True)
	gui.frmPO.frameOptions.Enabled(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

Program.Sub.tabPO_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmPO.lblDemand.Caption("Demand")
	gui.frmPO.lblVendQte.Caption("Vendor")
	Gui.frmPO.lblSupply.Caption("Supply")
	
	F.Intrinsic.Control.If(V.DataTable.dtDemand.Exists)
		Gui.frmPO.GsGCDemand.ClearRows("gvDemand")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtVendQteLines.Exists)
		gui.frmPO.GsGCVendQte.ClearRows("gvVendQte")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtGetVendQtes.Exists)
		'F.Data.DataTable.DeleteRow("dtGetVendQtes")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtSupply.Exists)
		Gui.frmPO.GsGCSupply.ClearRows("gvSupply")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.tabPO_Click.End

Program.Sub.InvCheck.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.iCnt.Declare
	V.Local.fSum1.Declare
	V.Local.fSum2.Declare
	V.Local.fCurOnHand.Declare
	V.Local.fBalance.Declare
	V.Local.bDic.Declare
	V.Local.dCutoff.Declare

	F.Intrinsic.Control.If(V.DataTable.dtInvCheck.Exists)
		F.Data.DataTable.Close("dtInvCheck")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.DataTable.dtDemand.Exists)
		Gui.frmPO.lblDemand.Caption("Demand")
		Gui.frmPO.GsGCDemand.ClearRows("gvDemand")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtVendQteLines.Exists)
		gui.frmPO.lblVendQte.Caption("Vendor Quote")
		gui.frmPO.GsGCVendQte.ClearRows("gvVendQte")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtSupply.Exists)
		Gui.frmPO.lblSupply.Caption("Supply")
		Gui.frmPO.GsGCSupply.ClearRows("gvSupply")
	F.Intrinsic.Control.EndIf
	
	Gui.frmPO.lblStatus.Caption("Loading Purchase Orders by Work Orders....")
	Gui.frmPO.lblStatus.Visible(True)
	Gui.frmPO.progBarStatus.Visible(True)
	V.Global.sPart.Set("")
	
	V.Local.dCutoff.Set(V.Screen.frmPO!dtpCutoff.Value)

	'F.Data.DataTable.CreateFromSQL("dtInvCheck","con","SELECT A.PART+A.LOCATION AS PMAST,A.PART,A.LOCATION,A.DESCRIPTION,A.PRODUCT_LINE,A.CODE_SORT,A.TIME_MATERIAL_LEAD,QTY_ORDER,QTY_ONHAND,QTY_REQUIRED,QTY_ONORDER_PO,QTY_REORDER,UM_INVENTORY,UM_PURCHASING,FACTOR_CONVERSION,NAME_VENDOR FROM V_INVENTORY_MSTR A JOIN V_INVENTORY_MST2 B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE B.CODE_SOURCE = 'P' UNION SELECT A.PART+A.LOCATION AS PMAST,A.PART,A.LOCATION,A.DESCRIPTION,A.PRODUCT_LINE,A.CODE_SORT,A.TIME_MATERIAL_LEAD,A.QTY_ORDER,A.QTY_ONHAND,A.QTY_REQUIRED,A.QTY_ONORDER_PO,A.QTY_REORDER,A.UM_INVENTORY,A.UM_PURCHASING,A.FACTOR_CONVERSION,B.NAME_VENDOR FROM V_INVENTORY_MSTR A JOIN V_INVENTORY_MST2 B ON A.PART = B.PART AND A.LOCATION = B.LOCATION JOIN V_INVENTORY_MST3 C ON A.PART = C.PART AND A.LOCATION = C.LOCATION WHERE C.TEMP_PURCH = 'Y' ORDER BY PMAST;",True)
	F.Data.DataTable.CreateFromSQL("dtInvCheck","con","SELECT A.PART+A.LOCATION AS PMAST,A.PART,A.LOCATION,A.DESCRIPTION,A.PRODUCT_LINE,A.CODE_SORT,A.TIME_MATERIAL_LEAD,QTY_ORDER,QTY_ONHAND,QTY_ONORDER_PO,QTY_REORDER,UM_INVENTORY,UM_PURCHASING,FACTOR_CONVERSION,rtrim(NAME_VENDOR) AS NAME_VENDOR FROM V_INVENTORY_MSTR A JOIN V_INVENTORY_MST2 B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE B.CODE_SOURCE IN ('P') UNION SELECT A.PART+A.LOCATION AS PMAST,A.PART,A.LOCATION,A.DESCRIPTION,A.PRODUCT_LINE,A.CODE_SORT,A.TIME_MATERIAL_LEAD,A.QTY_ORDER,A.QTY_ONHAND,A.QTY_ONORDER_PO,A.QTY_REORDER,A.UM_INVENTORY,A.UM_PURCHASING,A.FACTOR_CONVERSION,rtrim(B.NAME_VENDOR) as NAME_VENDOR FROM V_INVENTORY_MSTR A JOIN V_INVENTORY_MST2 B ON A.PART = B.PART AND A.LOCATION = B.LOCATION JOIN V_INVENTORY_MST3 C ON A.PART = C.PART AND A.LOCATION = C.LOCATION WHERE C.TEMP_PURCH = 'Y' ORDER BY PMAST;",True)
	F.Data.DataTable.AddColumn("dtInvCheck","QTY_COMMITTED_WO",Float,0.0000)
	F.Data.DataTable.AddColumn("dtInvCheck","QTY_COMMITTED_SO",Float,0.0000)
	F.Data.DataTable.AddColumn("dtInvCheck","CurOnHand",Float,0.0000)
	F.Data.DataTable.AddColumn("dtInvCheck","BALANCE",Float,0.0000)
	F.Data.DataTable.AddExpressionColumn("dtInvCheck","QTY_REQUIRED",Float,"QTY_COMMITTED_WO+QTY_COMMITTED_SO")
		
	F.Intrinsic.Control.If(V.Screen.frmPO!chkCutoff.Value,=,0)
		F.Data.Dictionary.CreateFromSQL("dicJobCom","con","SELECT PART+LOCATION AS PMAST,SUM(QTY_COMMITTED-QTY_ISSUED) AS QTY_COMMITTED FROM V_JOB_COMMITMENTS GROUP BY PMAST;")
		F.Data.Dictionary.SetDefaultReturn("dicJobCom",0.0000)
		F.Data.DataTable.FillFromDictionary("dtInvCheck","dicJobCom","PMAST","QTY_COMMITTED_WO")		
		f.Data.Dictionary.Close("dicJobCom")
		
		F.Data.Dictionary.CreateFromSQL("dicSOCom","con","SELECT PART+LOCATION AS PMAST,SUM(QTY_BO) AS QTY_COMMITTED FROM V_ORDER_LINES GROUP BY PMAST;")
		F.Data.Dictionary.SetDefaultReturn("dicSOCom",0.0000)
		F.Data.DataTable.FillFromDictionary("dtInvCheck","dicSOCom","PMAST","QTY_COMMITTED_SO")
		F.Data.Dictionary.Close("dicSOCom")
		
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("SELECT A.PART+A.LOCATION AS PMAST,SUM(QTY_COMMITTED-QTY_ISSUED) AS QTY_COMMITTED FROM V_JOB_COMMITMENTS A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE DATEADD(DAY,-TIME_MATERIAL_LEAD,A.DATE_DUE) <= '{0}' GROUP BY PMAST;",V.Local.dCutoff.PervasiveDate,V.Local.sSQL)
		F.Data.Dictionary.CreateFromSQL("dicJobCom","con",V.Local.sSQL)
		F.Data.Dictionary.SetDefaultReturn("dicJobCom",0.0000)
		F.Data.DataTable.FillFromDictionary("dtInvCheck","dicJobCom","PMAST","QTY_COMMITTED_WO")
		f.Data.Dictionary.Close("dicJobCom")
				
		F.Intrinsic.String.Build("SELECT A.PART+A.LOCATION AS PMAST,SUM(QTY_BO) AS QTY_COMMITTED FROM V_ORDER_LINES A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE DATEADD(DAY,-TIME_MATERIAL_LEAD,A.DATE_ITEM_PROM) <= '{0}' GROUP BY PMAST;",V.Local.dCutoff.PervasiveDate,V.Local.sSQL)
		F.Data.Dictionary.CreateFromSQL("dicSOCom","con",V.Local.sSQL)
		F.Data.Dictionary.SetDefaultReturn("dicSOCom",0.0000)
		F.Data.DataTable.FillFromDictionary("dtInvCheck","dicSOCom","PMAST","QTY_COMMITTED_SO")
		F.Data.Dictionary.Close("dicSOCom")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtInvCheck.RowCount--,1)
		F.Intrinsic.Math.Add(V.DataTable.dtInvCheck(V.Local.iCnt).QTY_ONHAND!FieldValFloat,V.DataTable.dtInvCheck(V.Local.iCnt).QTY_ONORDER_PO!FieldValFloat,V.Local.fSum1)
		F.Intrinsic.Math.Add(V.DataTable.dtInvCheck(V.Local.iCnt).QTY_COMMITTED_WO!FieldValFloat,V.DataTable.dtInvCheck(V.Local.iCnt).QTY_COMMITTED_SO!FieldValFloat,V.DataTable.dtInvCheck(V.Local.iCnt).QTY_REORDER!FieldValFloat,V.Local.fSum2)
		V.Local.fCurOnHand.Set(V.Local.fSum1)
		F.Intrinsic.Math.Sub(V.Local.fSum1,V.Local.fSum2,V.Local.fBalance)
		F.Data.DataTable.SetValue("dtInvCheck",V.Local.iCnt,"CurOnHand",V.Local.fCurOnHand,"BALANCE",V.Local.fBalance)
	F.Intrinsic.Control.Next(V.Local.iCnt)

	'This is the list of parts to loop through 
	F.Data.DataView.Create("dtInvCheck","dvInvCheck",22,"BALANCE < 0 ","PMAST ASC")
	


'	F.Intrinsic.Control.CallSub(LoadMRP)
	F.Intrinsic.Control.CallSub(LoadMRP2)
	
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.InvCheck.End

Program.Sub.LoadMRP.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iCnt2.Declare
	V.Local.iNext.Declare
	V.Local.sFilter.Declare
	V.Local.fCurOnHand.Declare
	V.Local.fQty.Declare
	V.Local.fNextQty.Declare
	V.Local.fDiff.Declare
	V.Local.fDiff2.Declare
	V.Local.sPurchase.Declare
	V.Local.fPurchase.Declare
	V.Local.fDecimal.Declare
	V.Local.fPostOnHand.Declare
	V.Local.fOrderQty.Declare
	V.Local.fOnHandQty.Declare
	V.Local.fReqdQty.Declare
	V.Local.fOnOrder.Declare
	V.Local.fReOrderQty.Declare
	V.Local.sPartDesc.Declare
	V.Local.fLeadTime.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sPL.Declare
	V.Local.sSortCode.Declare
	V.Local.sUM.Declare
	V.Local.sUMPurch.Declare
	V.Local.fConversion.Declare
	V.Local.dDateDue.Declare
	V.Local.sVendor.Declare
	V.Local.sSign.Declare
	V.Local.sSQL.Declare
	V.Local.dCutoff.Declare

	F.Intrinsic.Control.If(V.DataTable.dtJobs.Exists)
		F.Data.DataTable.Close("dtJobs")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.DataTable.dtMRP.Exists)
		F.Data.DataTable.Close("dtMRP")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.Screen.frmPO!chkCutoff.Value,=,0)
		F.Data.DataTable.CreateFromSQL("dtJobs","con","SELECT PART,LOCATION,'Work Order' AS SOURCE,JOB,SUFFIX,SEQUENCE,QTY_COMMITTED AS QUANTITY,DATE_DUE FROM V_JOB_COMMITMENTS ORDER BY PART,DATE_DUE ASC;",True)
	F.Intrinsic.Control.Else
		V.Local.dCutoff.Set(V.Screen.frmPO!dtpCutoff.Value)
		F.Intrinsic.String.Build("SELECT PART,LOCATION,'Work Order' AS SOURCE,JOB,SUFFIX,SEQUENCE,QTY_COMMITTED AS QUANTITY,DATE_DUE FROM V_JOB_COMMITMENTS WHERE DATE_DUE <= '{0}' ORDER BY PART,DATE_DUE ASC;",V.Local.dCutoff.PervasiveDate,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtJobs","con",V.Local.sSQL,True)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataView.dtInvCheck!dvInvCheck.RowCount,=,0)
		Gui.frmPO.lblStatus.Visible(False)
		Gui.frmPO.progBarStatus.Visible(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	Gui.frmPO.progBarStatus.Min(0)
	F.Intrinsic.Control.If(V.DataView.dtInvCheck!dvInvCheck.RowCount,<>,0)
		Gui.frmPO.progBarStatus.Max(V.DataView.dtInvCheck!dvInvCheck.RowCount)
	F.Intrinsic.Control.Else
		Gui.frmPO.progBarStatus.Max(100)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtInvCheck!dvInvCheck.RowCount--,1)
		Gui.frmPO.progBarStatus.Value(V.Local.iCnt)
		F.Intrinsic.String.Replace(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).PART!FieldValTrim,"'","''",V.Local.sPart)
		F.Intrinsic.String.Replace(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).LOCATION!FieldValTrim,"'","''",V.Local.sLoc)

		F.Intrinsic.String.Build("PART = '{0}' AND LOCATION = '{1}'",V.Local.sPart,V.Local.sLoc,V.Local.sFilter)
		F.Data.DataView.Create("dtJobs","dvJobs",22,V.Local.sFilter,"PART ASC,LOCATION ASC,DATE_DUE ASC")
		
		V.Local.iCnt2.Set(0)
		V.Local.iNext.Set(0)
		V.Local.fQty.Set(0)
		V.Local.fNextQty.Set(0)
		V.Local.fDiff.Set(0)
		V.Local.fDiff2.Set(0)
		V.Local.fPurchase.Set(0)
		V.Local.sPurchase.Set("")
		V.Local.sSign.Set("")
		V.Local.fDecimal.Set(0)
		V.Local.fPostOnHand.Set(0)
		V.Local.fCurOnHand.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).CurOnHand!FieldValFloat)
		V.Local.sPartDesc.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).DESCRIPTION!FieldValTrim)
		V.Local.fLeadTime.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).TIME_MATERIAL_LEAD!FieldValFloat)
		V.Local.fOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ORDER!FieldValFloat)
		V.Local.fOnHandQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ONHAND!FieldValFloat)
		V.Local.fReqdQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_REQUIRED!FieldValFloat)
		V.Local.fOnOrder.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ONORDER_PO!FieldValFloat)
		V.Local.fReOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_REORDER!FieldValFloat)
		F.Intrinsic.Date.DateAdd("D",V.Local.fLeadTime,V.Ambient.Date,V.Local.dDateDue)
		V.Local.sPL.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).PRODUCT_LINE!FieldValTrim)
		V.Local.sSortCode.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).CODE_SORT!FieldValTrim)
		V.Local.sUM.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).UM_INVENTORY!FieldValTrim)
		V.Local.sUMPurch.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).UM_PURCHASING!FieldValTrim)
		V.Local.fConversion.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).FACTOR_CONVERSION!FieldValTrim)
		V.Local.sVendor.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).NAME_VENDOR!FieldValTrim)
		
		F.Intrinsic.Control.If(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_COMMITTED!FieldValFloat,=,0,OR,V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_COMMITTED!FieldValFloat,=,V.Local.fCurOnHand)
		F.Intrinsic.Control.AndIf(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_FORE_COMMIT!FieldValFloat,=,0,OR,V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_FORE_COMMIT!FieldValFloat,=,V.Local.fCurOnHand)
			F.Intrinsic.Control.If(V.DataTable.dtMRP.Exists)
				F.Data.DataView.ToDataTable("dtJobs","dvJobs","dtMRPMerge",True)
				F.Data.DataTable.AddColumn("dtMRPMerge","CurOnHand",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","CurOnHand2",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","Purchase",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","PostOnHand",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","Description",String,"")
				F.Data.DataTable.AddColumn("dtMRPMerge","Vendor",String,"")
				F.Data.DataTable.AddColumn("dtMRPMerge","PL",String,"")
				F.Data.DataTable.AddColumn("dtMRPMerge","SortCode",String,"")
				F.Data.DataTable.AddColumn("dtMRPMerge","LeadTime",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","OrderQty",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","OnHandQty",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","ReqdQty",Float,0)
				F.Data.DataTable.AddExpressionColumn("dtMRPMerge","NetAvail",Float,"OrderQty-ReqdQty")
				F.Data.DataTable.AddColumn("dtMRPMerge","OnOrder",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","ReOrderPt",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","UM",String,"")
				F.Data.DataTable.AddColumn("dtMRPMerge","UMPurch",String,"")
				F.Data.DataTable.AddColumn("dtMRPMerge","Conversion",Float,0)
				F.Data.DataTable.Merge("dtMRPMerge","dtMRP",True,3)
				F.Data.DataTable.Close("dtMRPMerge")

				F.Data.DataView.Create("dtMRP","dvMRP",22,V.Local.sFilter,"DATE_DUE ASC")

				V.Local.fDiff.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).BALANCE!FieldValFloat)
				F.Intrinsic.Control.If(V.Local.fDiff,<,V.Local.fReOrderQty)
'					F.Intrinsic.Math.Sub(V.Local.fDiff,V.Local.fReOrderQty,V.Local.fDiff2)
					V.Local.fDiff2.Set(V.Local.fDiff)
					F.Intrinsic.Control.If(V.Local.fOrderQty,=,0)
						V.Local.fOrderQty.Set(1)
						V.Local.fPurchase.Set(V.Local.fReOrderQty)
					F.Intrinsic.Control.Else
						F.Intrinsic.Math.Div(V.Local.fDiff2,V.Local.fOrderQty,V.Local.fPurchase)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.Math.Abs(V.Local.fPurchase,V.Local.fPurchase)
					F.Intrinsic.String.Split(V.Local.fPurchase,".",V.Local.sPurchase)
					V.Local.fPurchase.Set(V.Local.sPurchase(0).Float)
					F.Intrinsic.String.Left(V.Local.sPurchase(1),2,V.Local.sPurchase)
					V.Local.fDecimal.Set(V.Local.sPurchase.Float)
					F.Intrinsic.Math.Round(V.Local.fDecimal,1,1,V.Local.fDecimal)
					F.Intrinsic.Control.If(V.Local.fDecimal,<>,0)
						F.Intrinsic.Math.Add(V.Local.fPurchase,1,V.Local.fPurchase)	
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Else
					V.Local.fPurchase.Set(0)
				F.Intrinsic.Control.EndIf

				F.Intrinsic.Math.Mult(V.Local.fPurchase,V.Local.fOrderQty,V.Local.fPurchase)
				F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
					F.Intrinsic.Math.Sub(V.Local.fPurchase,V.Local.fQty,V.Local.fPostOnHand)
				F.Intrinsic.Control.Else
					F.Intrinsic.Math.Add(V.Local.fDiff,V.Local.fPurchase,V.Local.fPostOnHand)
				F.Intrinsic.Control.EndIf

				F.Data.DataTable.AddRow("dtMRP","PART",V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).PART!FieldValTrim,"LOCATION",V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).LOCATION!FieldValTrim,"SOURCE","Reorder Point","JOB","N/A","SUFFIX","N/A","SEQUENCE","N/A","QUANTITY",0,"DATE_DUE",V.Local.dDateDue,"CurOnHand",V.Local.fCurOnHand,"Purchase",V.Local.fPurchase,"PostOnHand",V.Local.fPostOnHand,"Description",V.Local.sPartDesc,"PL",V.Local.sPL,"SortCode",V.Local.sSortCode,"LeadTime",V.Local.fLeadTime,"CurOnHand2",V.Local.fCurOnHand,"OrderQty",V.Local.fOrderQty,"OnHandQty",V.Local.fOnHandQty,"ReqdQty",V.Local.fReqdQty,"OnOrder",V.Local.fOnOrder,"ReOrderPt",V.Local.fReOrderQty,"UM",V.Local.sUM,"UMPurch",V.Local.sUMPurch,"Conversion",V.Local.fConversion,"Vendor",V.Local.sVendor)
			F.Intrinsic.Control.Else
				F.Data.DataView.ToDataTable("dtJobs","dvJobs","dtMRP",True)
				F.Data.DataTable.AddColumn("dtMRP","CurOnHand",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","CurOnHand2",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","Purchase",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","PostOnHand",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","Description",String,"")
				F.Data.DataTable.AddColumn("dtMRP","Vendor",String,"")
				F.Data.DataTable.AddColumn("dtMRP","PL",String,"")
				F.Data.DataTable.AddColumn("dtMRP","SortCode",String,"")
				F.Data.DataTable.AddColumn("dtMRP","LeadTime",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","OrderQty",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","OnHandQty",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","ReqdQty",Float,0)
				F.Data.DataTable.AddExpressionColumn("dtMRP","NetAvail",Float,"OrderQty-ReqdQty")
				F.Data.DataTable.AddColumn("dtMRP","OnOrder",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","ReOrderPt",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","UM",String,"")
				F.Data.DataTable.AddColumn("dtMRP","UMPurch",String,"")
				F.Data.DataTable.AddColumn("dtMRP","Conversion",Float,0)

				F.Data.DataView.Create("dtMRP","dvMRP",22,"","DATE_DUE ASC")

				V.Local.fDiff.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).BALANCE!FieldValFloat)
				F.Intrinsic.Control.If(V.Local.fDiff,<,V.Local.fReOrderQty)
'					F.Intrinsic.Math.Sub(V.Local.fDiff,V.Local.fReOrderQty,V.Local.fDiff2)
					V.Local.fDiff2.Set(V.Local.fDiff)
					F.Intrinsic.Control.If(V.Local.fOrderQty,=,0)
						V.Local.fOrderQty.Set(1)
						V.Local.fPurchase.Set(V.Local.fReOrderQty)
					F.Intrinsic.Control.Else
						F.Intrinsic.Math.Div(V.Local.fDiff2,V.Local.fOrderQty,V.Local.fPurchase)
					F.Intrinsic.Control.EndIf
					F.Intrinsic.Math.Abs(V.Local.fPurchase,V.Local.fPurchase)
					F.Intrinsic.String.Split(V.Local.fPurchase,".",V.Local.sPurchase)
					V.Local.fPurchase.Set(V.Local.sPurchase(0).Float)
					F.Intrinsic.String.Left(V.Local.sPurchase(1),2,V.Local.sPurchase)
					V.Local.fDecimal.Set(V.Local.sPurchase.Float)
					F.Intrinsic.Math.Round(V.Local.fDecimal,1,1,V.Local.fDecimal)
					F.Intrinsic.Control.If(V.Local.fDecimal,<>,0)
						F.Intrinsic.Math.Add(V.Local.fPurchase,1,V.Local.fPurchase)	
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.Else
					V.Local.fPurchase.Set(0)
				F.Intrinsic.Control.EndIf

				F.Intrinsic.Math.Mult(V.Local.fPurchase,V.Local.fOrderQty,V.Local.fPurchase)
				F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
					F.Intrinsic.Math.Sub(V.Local.fPurchase,V.Local.fQty,V.Local.fPostOnHand)
				F.Intrinsic.Control.Else
					F.Intrinsic.Math.Add(V.Local.fDiff,V.Local.fPurchase,V.Local.fPostOnHand)
				F.Intrinsic.Control.EndIf

				F.Data.DataTable.AddRow("dtMRP","PART",V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).PART!FieldValTrim,"LOCATION",V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).LOCATION!FieldValTrim,"SOURCE","Reorder Point","JOB","N/A","SUFFIX","N/A","SEQUENCE","N/A","QUANTITY",0,"DATE_DUE",V.Local.dDateDue,"CurOnHand",V.Local.fCurOnHand,"Purchase",V.Local.fPurchase,"PostOnHand",V.Local.fPostOnHand,"Description",V.Local.sPartDesc,"PL",V.Local.sPL,"SortCode",V.Local.sSortCode,"LeadTime",V.Local.fLeadTime,"CurOnHand2",V.Local.fCurOnHand,"OrderQty",V.Local.fOrderQty,"OnHandQty",V.Local.fOnHandQty,"ReqdQty",V.Local.fReqdQty,"OnOrder",V.Local.fOnOrder,"ReOrderPt",V.Local.fReOrderQty,"UM",V.Local.sUM,"UMPurch",V.Local.sUMPurch,"Conversion",V.Local.fConversion,"Vendor",V.Local.sVendor)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.If(V.DataTable.dtMRP.Exists)
				F.Data.DataView.ToDataTable("dtJobs","dvJobs","dtMRPMerge",True)
				F.Data.DataTable.AddColumn("dtMRPMerge","CurOnHand",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","CurOnHand2",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","Purchase",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","PostOnHand",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","Description",String,"")
				F.Data.DataTable.AddColumn("dtMRPMerge","Vendor",String,"")
				F.Data.DataTable.AddColumn("dtMRPMerge","PL",String,"")
				F.Data.DataTable.AddColumn("dtMRPMerge","SortCode",String,"")
				F.Data.DataTable.AddColumn("dtMRPMerge","LeadTime",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","OrderQty",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","OnHandQty",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","ReqdQty",Float,0)
				F.Data.DataTable.AddExpressionColumn("dtMRPMerge","NetAvail",Float,"OrderQty-ReqdQty")
				F.Data.DataTable.AddColumn("dtMRPMerge","OnOrder",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","ReOrderPt",Float,0)
				F.Data.DataTable.AddColumn("dtMRPMerge","UM",String,"")
				F.Data.DataTable.AddColumn("dtMRPMerge","UMPurch",String,"")
				F.Data.DataTable.AddColumn("dtMRPMerge","Conversion",Float,0)
				F.Data.DataTable.Merge("dtMRPMerge","dtMRP",True,3)
				F.Data.DataTable.Close("dtMRPMerge")

				F.Data.DataView.Create("dtMRP","dvMRP",22,V.Local.sFilter,"DATE_DUE ASC")

				V.Local.iCnt2.Set(0)
				F.Intrinsic.Control.For(V.Local.iCnt2,0,V.DataView.dtMRP!dvMRP.RowCount--,1)
					F.Intrinsic.Math.Add(V.Local.iCnt2,1,V.Local.iNext)
					V.Local.fQty.Set(V.DataView.dtMRP!dvMRP(V.Local.iCnt2).QUANTITY!FieldValFloat)
					F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
						F.Intrinsic.Math.Sub(V.Local.fCurOnHand,V.Local.fQty,V.Local.fDiff)
						F.Intrinsic.Math.Sgn(V.Local.fDiff,V.Local.sSign)
						F.Intrinsic.Math.Add(V.Local.iCnt2,1,V.Local.iNext)
						V.Local.fQty.Set(V.DataView.dtMRP!dvMRP(V.Local.iCnt2).QUANTITY!FieldValFloat)
					F.Intrinsic.Control.Else
						F.Intrinsic.Math.Sub(V.Local.fPostOnHand,V.Local.fQty,V.Local.fDiff)
					F.Intrinsic.Control.EndIf

				V.Local.iCnt2.Set(0)
				F.Intrinsic.Control.For(V.Local.iCnt2,0,V.DataView.dtMRP!dvMRP.RowCount--,1)
					F.Intrinsic.Math.Add(V.Local.iCnt2,1,V.Local.iNext)
					V.Local.fQty.Set(V.DataView.dtMRP!dvMRP(V.Local.iCnt2).QUANTITY!FieldValFloat)
					F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
						F.Intrinsic.Math.Sub(V.Local.fCurOnHand,V.Local.fQty,V.Local.fDiff)
					F.Intrinsic.Control.Else
						F.Intrinsic.Math.Sub(V.Local.fPostOnHand,V.Local.fQty,V.Local.fDiff)
					F.Intrinsic.Control.EndIf

					F.Intrinsic.Control.If(V.Local.fOrderQty,=,0)
					F.Intrinsic.Control.AndIf(V.Local.fReOrderQty,=,0)
						F.Intrinsic.Math.Sgn(V.Local.fDiff,V.Local.sSign)
						F.Intrinsic.Control.If(V.Local.sSign,=,"1")
							F.Intrinsic.Math.Sub(V.Local.fQty,V.Local.fDiff,V.Local.fPurchase)
						F.Intrinsic.Control.Else
							F.Intrinsic.Math.Abs(V.Local.fDiff,V.Local.fPurchase)
						F.Intrinsic.Control.EndIf

						V.Local.fPostOnHand.Set(0.00)
						F.Data.DataView.SetValue("dtMRP","dvMRP",V.Local.iCnt2,"CurOnHand",V.Local.fDiff,"Purchase",V.Local.fPurchase,"PostOnHand",V.Local.fPostOnHand,"Description",V.Local.sPartDesc,"PL",V.Local.sPL,"SortCode",V.Local.sSortCode,"LeadTime",V.Local.fLeadTime,"CurOnHand2",V.Local.fCurOnHand,"OrderQty",V.Local.fOrderQty,"OnHandQty",V.Local.fOnHandQty,"ReqdQty",V.Local.fReqdQty,"OnOrder",V.Local.fOnOrder,"ReOrderPt",V.Local.fReOrderQty,"UM",V.Local.sUM,"UMPurch",V.Local.sUMPurch,"Conversion",V.Local.fConversion,"Vendor",V.Local.sVendor)
						F.Intrinsic.Control.Next(V.Local.iCnt2)

					F.Intrinsic.Control.Else
						F.Intrinsic.Control.If(V.Local.iCnt2,<>,V.DataView.dtMRP!dvMRP.RowCount--)
							V.Local.fNextQty.Set(V.DataView.dtMRP!dvMRP(V.Local.iNext).QUANTITY!FieldValFloat)
							F.Intrinsic.Control.If(V.Local.fDiff,<,V.Local.fNextQty)
								F.Intrinsic.Math.Sub(V.Local.fDiff,V.Local.fNextQty,V.Local.fDiff2)
								F.Intrinsic.Control.If(V.Local.fOrderQty,=,0)
									V.Local.fOrderQty.Set(1)
									V.Local.fPurchase.Set(V.Local.fReOrderQty)
								F.Intrinsic.Control.Else
									F.Intrinsic.Math.Div(V.Local.fDiff,V.Local.fOrderQty,V.Local.fPurchase)
								F.Intrinsic.Control.EndIf
								F.Intrinsic.Math.Abs(V.Local.fPurchase,V.Local.fPurchase)
								F.Intrinsic.String.Split(V.Local.fPurchase,".",V.Local.sPurchase)
								V.Local.fPurchase.Set(V.Local.sPurchase(0).Float)
								F.Intrinsic.String.Left(V.Local.sPurchase(1),2,V.Local.sPurchase)
								V.Local.fDecimal.Set(V.Local.sPurchase.Float)
								F.Intrinsic.Math.Round(V.Local.fDecimal,1,1,V.Local.fDecimal)
								F.Intrinsic.Control.If(V.Local.fDecimal,<>,0)
									F.Intrinsic.Math.Add(V.Local.fPurchase,1,V.Local.fPurchase)	
								F.Intrinsic.Control.EndIf
							F.Intrinsic.Control.Else
								V.Local.fPurchase.Set(0)
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.Else
							F.Intrinsic.Control.If(V.Local.fDiff,<,V.Local.fReOrderQty)
'								F.Intrinsic.Math.Sub(V.Local.fDiff,V.Local.fReOrderQty,V.Local.fDiff2)
								V.Local.fDiff2.Set(V.Local.fDiff)
								F.Intrinsic.Control.If(V.Local.fOrderQty,=,0)
									V.Local.fOrderQty.Set(1)
									V.Local.fPurchase.Set(V.Local.fReOrderQty)
								F.Intrinsic.Control.Else
									F.Intrinsic.Math.Div(V.Local.fDiff2,V.Local.fOrderQty,V.Local.fPurchase)
								F.Intrinsic.Control.EndIf
								F.Intrinsic.Math.Abs(V.Local.fPurchase,V.Local.fPurchase)
								F.Intrinsic.String.Split(V.Local.fPurchase,".",V.Local.sPurchase)
								V.Local.fPurchase.Set(V.Local.sPurchase(0).Float)
								F.Intrinsic.String.Left(V.Local.sPurchase(1),2,V.Local.sPurchase)
								F.Intrinsic.Math.Round(V.Local.fDecimal,1,1,V.Local.fDecimal)
								V.Local.fDecimal.Set(V.Local.sPurchase.Float)
								F.Intrinsic.Control.If(V.Local.fDecimal,<>,0)
									F.Intrinsic.Math.Add(V.Local.fPurchase,1,V.Local.fPurchase)	
								F.Intrinsic.Control.EndIf
							F.Intrinsic.Control.Else
								V.Local.fPurchase.Set(0)
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.EndIf

						F.Intrinsic.Math.Mult(V.Local.fPurchase,V.Local.fOrderQty,V.Local.fPurchase)
						F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
							F.Intrinsic.Math.Sub(V.Local.fPurchase,V.Local.fQty,V.Local.fPostOnHand)
						F.Intrinsic.Control.Else
							F.Intrinsic.Math.Add(V.Local.fDiff,V.Local.fPurchase,V.Local.fPostOnHand)
						F.Intrinsic.Control.EndIf

						F.Data.DataView.SetValue("dtMRP","dvMRP",V.Local.iCnt2,"CurOnHand",V.Local.fDiff,"Purchase",V.Local.fPurchase,"PostOnHand",V.Local.fPostOnHand,"Description",V.Local.sPartDesc,"PL",V.Local.sPL,"SortCode",V.Local.sSortCode,"LeadTime",V.Local.fLeadTime,"CurOnHand2",V.Local.fCurOnHand,"OrderQty",V.Local.fOrderQty,"OnHandQty",V.Local.fOnHandQty,"ReqdQty",V.Local.fReqdQty,"OnOrder",V.Local.fOnOrder,"ReOrderPt",V.Local.fReOrderQty,"UM",V.Local.sUM,"UMPurch",V.Local.sUMPurch,"Conversion",V.Local.fConversion,"Vendor",V.Local.sVendor)
						F.Intrinsic.Control.Next(V.Local.iCnt2)
					F.Intrinsic.Control.EndIf

			F.Intrinsic.Control.Else
				F.Data.DataView.ToDataTable("dtJobs","dvJobs","dtMRP",True)
				F.Data.DataTable.AddColumn("dtMRP","CurOnHand",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","CurOnHand2",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","Purchase",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","PostOnHand",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","Description",String,"")
				F.Data.DataTable.AddColumn("dtMRP","Vendor",String,"")
				F.Data.DataTable.AddColumn("dtMRP","PL",String,"")
				F.Data.DataTable.AddColumn("dtMRP","SortCode",String,"")
				F.Data.DataTable.AddColumn("dtMRP","LeadTime",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","OrderQty",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","OnHandQty",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","ReqdQty",Float,0)
				F.Data.DataTable.AddExpressionColumn("dtMRP","NetAvail",Float,"OrderQty-ReqdQty")
				F.Data.DataTable.AddColumn("dtMRP","OnOrder",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","ReOrderPt",Float,0)
				F.Data.DataTable.AddColumn("dtMRP","UM",String,"")
				F.Data.DataTable.AddColumn("dtMRP","UMPurch",String,"")
				F.Data.DataTable.AddColumn("dtMRP","Conversion",Float,0)

				F.Data.DataView.Create("dtMRP","dvMRP",22,"","DATE_DUE ASC")

				V.Local.iCnt2.Set(0)
				F.Intrinsic.Control.For(V.Local.iCnt2,0,V.DataView.dtMRP!dvMRP.RowCount--,1)
					F.Intrinsic.Math.Add(V.Local.iCnt2,1,V.Local.iNext)
					V.Local.fQty.Set(V.DataView.dtMRP!dvMRP(V.Local.iCnt2).QUANTITY!FieldValFloat)
					F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
						F.Intrinsic.Math.Sub(V.Local.fCurOnHand,V.Local.fQty,V.Local.fDiff)
					F.Intrinsic.Control.Else
						F.Intrinsic.Math.Sub(V.Local.fPostOnHand,V.Local.fQty,V.Local.fDiff)
					F.Intrinsic.Control.EndIf

					F.Intrinsic.Control.If(V.Local.fOrderQty,=,0)
						F.Intrinsic.Control.AndIf(V.Local.fReOrderQty,=,0)
						F.Intrinsic.Math.Sgn(V.Local.fDiff,V.Local.sSign)
						F.Intrinsic.Control.If(V.Local.sSign,=,"1")
							F.Intrinsic.Math.Sub(V.Local.fQty,V.Local.fDiff,V.Local.fPurchase)
						F.Intrinsic.Control.Else
							F.Intrinsic.Math.Abs(V.Local.fDiff,V.Local.fPurchase)
						F.Intrinsic.Control.EndIf

						V.Local.fPostOnHand.Set(0.00)
						F.Data.DataView.SetValue("dtMRP","dvMRP",V.Local.iCnt2,"CurOnHand",V.Local.fDiff,"Purchase",V.Local.fPurchase,"PostOnHand",V.Local.fPostOnHand,"Description",V.Local.sPartDesc,"PL",V.Local.sPL,"SortCode",V.Local.sSortCode,"LeadTime",V.Local.fLeadTime,"CurOnHand2",V.Local.fCurOnHand,"OrderQty",V.Local.fOrderQty,"OnHandQty",V.Local.fOnHandQty,"ReqdQty",V.Local.fReqdQty,"OnOrder",V.Local.fOnOrder,"ReOrderPt",V.Local.fReOrderQty,"UM",V.Local.sUM,"UMPurch",V.Local.sUMPurch,"Conversion",V.Local.fConversion,"Vendor",V.Local.sVendor)
						F.Intrinsic.Control.Next(V.Local.iCnt2)
					F.Intrinsic.Control.Else
						F.Intrinsic.Control.If(V.Local.iCnt2,<>,V.DataView.dtMRP!dvMRP.RowCount--)
							V.Local.fNextQty.Set(V.DataView.dtMRP!dvMRP(V.Local.iNext).QUANTITY!FieldValFloat)
							F.Intrinsic.Control.If(V.Local.fDiff,<,V.Local.fNextQty)
								F.Intrinsic.Math.Sub(V.Local.fDiff,V.Local.fNextQty,V.Local.fDiff2)
								F.Intrinsic.Control.If(V.Local.fOrderQty,=,0)
									V.Local.fOrderQty.Set(1)
									V.Local.fPurchase.Set(V.Local.fReOrderQty)
								F.Intrinsic.Control.Else
									F.Intrinsic.Math.Div(V.Local.fDiff2,V.Local.fOrderQty,V.Local.fPurchase)
								F.Intrinsic.Control.EndIf
								F.Intrinsic.Math.Abs(V.Local.fPurchase,V.Local.fPurchase)
								F.Intrinsic.String.Split(V.Local.fPurchase,".",V.Local.sPurchase)
								V.Local.fPurchase.Set(V.Local.sPurchase(0).Float)
								F.Intrinsic.String.Left(V.Local.sPurchase(1),2,V.Local.sPurchase)
								V.Local.fDecimal.Set(V.Local.sPurchase.Float)
								F.Intrinsic.Math.Round(V.Local.fDecimal,1,1,V.Local.fDecimal)
								F.Intrinsic.Control.If(V.Local.fDecimal,<>,0)
									F.Intrinsic.Math.Add(V.Local.fPurchase,1,V.Local.fPurchase)	
								F.Intrinsic.Control.EndIf
							F.Intrinsic.Control.Else
								V.Local.fPurchase.Set(0)
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.Else
							F.Intrinsic.Control.If(V.Local.fDiff,<,V.Local.fReOrderQty)
'								F.Intrinsic.Math.Sub(V.Local.fDiff,V.Local.fReOrderQty,V.Local.fDiff2)
								V.Local.fDiff2.Set(V.Local.fDiff)
								F.Intrinsic.Control.If(V.Local.fOrderQty,=,0)
									V.Local.fOrderQty.Set(1)
									V.Local.fPurchase.Set(V.Local.fReOrderQty)
								F.Intrinsic.Control.Else
									F.Intrinsic.Math.Div(V.Local.fDiff2,V.Local.fOrderQty,V.Local.fPurchase)
								F.Intrinsic.Control.EndIf
								F.Intrinsic.Math.Abs(V.Local.fPurchase,V.Local.fPurchase)
								F.Intrinsic.String.Split(V.Local.fPurchase,".",V.Local.sPurchase)
								V.Local.fPurchase.Set(V.Local.sPurchase(0).Float)
								F.Intrinsic.String.Left(V.Local.sPurchase(1),2,V.Local.sPurchase)
								F.Intrinsic.Math.Round(V.Local.fDecimal,1,1,V.Local.fDecimal)
								V.Local.fDecimal.Set(V.Local.sPurchase.Float)
								F.Intrinsic.Control.If(V.Local.fDecimal,<>,0)
									F.Intrinsic.Math.Add(V.Local.fPurchase,1,V.Local.fPurchase)	
								F.Intrinsic.Control.EndIf
							F.Intrinsic.Control.Else
								V.Local.fPurchase.Set(0)
							F.Intrinsic.Control.EndIf
						F.Intrinsic.Control.EndIf

						F.Intrinsic.Math.Mult(V.Local.fPurchase,V.Local.fOrderQty,V.Local.fPurchase)
						F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
							F.Intrinsic.Math.Sub(V.Local.fPurchase,V.Local.fQty,V.Local.fPostOnHand)
						F.Intrinsic.Control.Else
							F.Intrinsic.Math.Add(V.Local.fDiff,V.Local.fPurchase,V.Local.fPostOnHand)
						F.Intrinsic.Control.EndIf

						F.Data.DataView.SetValue("dtMRP","dvMRP",V.Local.iCnt2,"CurOnHand",V.Local.fDiff,"Purchase",V.Local.fPurchase,"PostOnHand",V.Local.fPostOnHand,"Description",V.Local.sPartDesc,"PL",V.Local.sPL,"SortCode",V.Local.sSortCode,"LeadTime",V.Local.fLeadTime,"CurOnHand2",V.Local.fCurOnHand,"OrderQty",V.Local.fOrderQty,"OnHandQty",V.Local.fOnHandQty,"ReqdQty",V.Local.fReqdQty,"OnOrder",V.Local.fOnOrder,"ReOrderPt",V.Local.fReOrderQty,"UM",V.Local.sUM,"UMPurch",V.Local.sUMPurch,"Conversion",V.Local.fConversion,"Vendor",V.Local.sVendor)
						F.Intrinsic.Control.Next(V.Local.iCnt2)
					F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		F.Data.DataView.Close("dtMRP","dvMRP")
		F.Data.DataView.Close("dtJobs","dvJobs")
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.CallSub(LoadPOs)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadMRP.End

Program.Sub.LoadMRP2.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iCnt2.Declare
	V.Local.iNext.Declare
	V.Local.sFilter.Declare
	V.Local.fCurOnHand.Declare
	V.Local.fQty.Declare
	V.Local.fNextQty.Declare
	V.Local.fDiff.Declare
	V.Local.fDiff2.Declare
	V.Local.sPurchase.Declare
	V.Local.fPurchase.Declare
	V.Local.fDecimal.Declare
	V.Local.fPostOnHand.Declare
	V.Local.fOrderQty.Declare
	V.Local.fOnHandQty.Declare
	V.Local.fReqdQty.Declare
	V.Local.fOnOrder.Declare
	V.Local.fReOrderQty.Declare
	V.Local.sPartDesc.Declare
	V.Local.fLeadTime.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sPL.Declare
	V.Local.sSortCode.Declare
	V.Local.sUM.Declare
	V.Local.sUMPurch.Declare
	V.Local.fConversion.Declare
	V.Local.dDateDue.Declare
	V.Local.sVendor.Declare
	V.Local.sSign.Declare
	V.Local.sSQL.Declare
	V.Local.dCutoff.Declare
	V.Local.fCommit.Declare
	v.Local.fOnHandSum.Declare
	V.Local.dDateDuePO.Declare
	V.Local.sSelect.Declare
	V.Local.sROPParts.Declare
	v.Local.iSelect.Declare

	F.Intrinsic.Control.If(V.DataTable.dtJobs.Exists)
		F.Data.DataTable.Close("dtJobs")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.DataTable.dtMRP.Exists)
		F.Data.DataTable.Close("dtMRP")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.Screen.frmPO!chkCutoff.Value,=,0)
		F.Data.DataTable.CreateFromSQL("dtJobs","con","SELECT PART,LOCATION,'Work Order' AS SOURCE,JOB,SUFFIX,SEQUENCE,QTY_COMMITTED-QTY_ISSUED AS QUANTITY,DATE_DUE FROM V_JOB_COMMITMENTS UNION SELECT PART,LOCATION,'Sales Order' AS SOURCE,ORDER_NO AS JOB,LEFT(RECORD_NO,3) AS SUFFIX,'' AS SEQ,QTY_BO AS QUANTITY,DATE_ITEM_PROM AS DATE_DUE FROM V_ORDER_LINES ORDER BY PART,DATE_DUE ASC;",True)
	F.Intrinsic.Control.Else
		V.Local.dCutoff.Set(V.Screen.frmPO!dtpCutoff.Value)
		F.Intrinsic.String.Build("SELECT A.PART,A.LOCATION,'Work Order' AS SOURCE,JOB,SUFFIX,SEQUENCE,QTY_COMMITTED-QTY_ISSUED AS QUANTITY,DATE_DUE FROM V_JOB_COMMITMENTS A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE DATEADD(DAY,-TIME_MATERIAL_LEAD,A.DATE_DUE) <= '{0}'   UNION SELECT A.PART,A.LOCATION,'Sales Order' AS SOURCE,ORDER_NO AS JOB,LEFT(RECORD_NO,3) AS SUFFIX,'' AS SEQ,QTY_BO AS QUANTITY,DATE_ITEM_PROM AS DATE_DUE FROM V_ORDER_LINES A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE DATEADD(DAY,-TIME_MATERIAL_LEAD,A.DATE_ITEM_PROM) <= '{0}'  ORDER BY PART,DATE_DUE ASC;",V.Local.dCutoff.PervasiveDate,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtJobs","con",V.Local.sSQL,True)
	F.Intrinsic.Control.EndIf
	
	'Add in Reorder Point Parts
	F.Data.DataTable.Select("dtInvCheck","BALANCE < 0 AND QTY_REQUIRED = 0",V.Local.sSelect)
	F.Intrinsic.Control.If(V.Local.sSelect.IsNotNoReturn)
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sSelect.UBound,1)
			v.Local.iSelect.Set(V.Local.sSelect(V.Local.iCnt))
			F.Intrinsic.String.Replace(V.DataTable.dtInvCheck(v.Local.iSelect).PMAST!FieldVal,"'","''",V.Local.sPart)
			F.Intrinsic.Control.If(V.Local.iCnt,=,0)
				F.Intrinsic.String.Build("'{0}'",v.Local.sPart,V.Local.sROPParts)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0},'{1}'",V.Local.sROPParts,V.Local.sPart,V.Local.sROPParts)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.String.Build("SELECT PART,LOCATION,'Reorder Point' AS SOURCE,'' AS JOB,'' AS SUFFIX,'' AS SEQUENCE,QTY_REORDER-QTY_ONHAND AS QUANTITY,CURDATE() AS DATE_DUE FROM V_INVENTORY_MSTR WHERE PART+LOCATION IN ({0});",V.Local.sROPParts,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtROPParts","con",V.Local.sSQL,True)
		F.Data.DataTable.Merge("dtROPParts","dtJobs",True,3)
		F.Data.DataTable.Close("dtROPParts")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataView.dtInvCheck!dvInvCheck.RowCount,=,0)
		Gui.frmPO.lblStatus.Visible(False)
		Gui.frmPO.progBarStatus.Visible(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	Gui.frmPO.progBarStatus.Min(0)
	F.Intrinsic.Control.If(V.DataView.dtInvCheck!dvInvCheck.RowCount,<>,0)
		Gui.frmPO.progBarStatus.Max(V.DataView.dtInvCheck!dvInvCheck.RowCount)
	F.Intrinsic.Control.Else
		Gui.frmPO.progBarStatus.Max(100)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataView.dtInvCheck!dvInvCheck.RowCount--,1)
		Gui.frmPO.progBarStatus.Value(V.Local.iCnt)
		F.Intrinsic.String.Replace(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).PART!FieldValTrim,"'","''",V.Local.sPart)
		F.Intrinsic.String.Replace(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).LOCATION!FieldValTrim,"'","''",V.Local.sLoc)
		F.Intrinsic.String.Build("PART = '{0}' AND LOCATION = '{1}'",V.Local.sPart,V.Local.sLoc,V.Local.sFilter)
		F.Data.DataView.Create("dtJobs","dvJobs",22,V.Local.sFilter,"PART ASC,LOCATION ASC,DATE_DUE ASC")
		
		V.Local.iCnt2.Set(0)
		V.Local.iNext.Set(0)
		V.Local.fQty.Set(0)
		V.Local.fNextQty.Set(0)
		V.Local.fDiff.Set(0)
		V.Local.fDiff2.Set(0)
		V.Local.fPurchase.Set(0)
		V.Local.sPurchase.Set("")
		V.Local.sSign.Set("")
		V.Local.fDecimal.Set(0)
		V.Local.fPostOnHand.Set(0)
		V.Local.fCurOnHand.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).CurOnHand!FieldValFloat)
		V.Local.sPartDesc.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).DESCRIPTION!FieldValTrim)
		V.Local.fLeadTime.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).TIME_MATERIAL_LEAD!FieldValFloat)
		V.Local.fOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ORDER!FieldValFloat)
		V.Local.fOnHandQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ONHAND!FieldValFloat)
		V.Local.fReqdQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_REQUIRED!FieldValFloat)
		V.Local.fOnOrder.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ONORDER_PO!FieldValFloat)
		V.Local.fReOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_REORDER!FieldValFloat)
		F.Intrinsic.Date.DateAdd("D",V.Local.fLeadTime,V.Ambient.Date,V.Local.dDateDue)
		V.Local.sPL.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).PRODUCT_LINE!FieldValTrim)
		V.Local.sSortCode.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).CODE_SORT!FieldValTrim)
		V.Local.sUM.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).UM_INVENTORY!FieldValTrim)
		V.Local.sUMPurch.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).UM_PURCHASING!FieldValTrim)
		V.Local.fConversion.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).FACTOR_CONVERSION!FieldValTrim)
		V.Local.sVendor.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).NAME_VENDOR!FieldValTrim)
		F.Intrinsic.Math.Add(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_COMMITTED_WO!FieldValFloat,V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_COMMITTED_SO!FieldValFloat,V.Local.fCommit)
		F.Intrinsic.Math.Add(V.Local.fOnHandQty,V.Local.fOnOrder,V.Local.fOnHandSum)
		
		F.Intrinsic.Control.If(V.DataTable.dtMRP.Exists,=,False)
			F.Data.DataView.ToDataTable("dtJobs","dvJobs","dtMRP",True)
			F.Data.DataTable.AddColumn("dtMRP","CurOnHand",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","CurOnHand2",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","Purchase",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","PostOnHand",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","Description",String,"")
			F.Data.DataTable.AddColumn("dtMRP","Vendor",String,"")
			F.Data.DataTable.AddColumn("dtMRP","PL",String,"")
			F.Data.DataTable.AddColumn("dtMRP","SortCode",String,"")
			F.Data.DataTable.AddColumn("dtMRP","LeadTime",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","OrderQty",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","OnHandQty",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","ReqdQty",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","OnOrder",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","ReOrderPt",Float,0)
			F.Data.DataTable.AddColumn("dtMRP","UM",String,"")
			F.Data.DataTable.AddColumn("dtMRP","UMPurch",String,"")
			F.Data.DataTable.AddColumn("dtMRP","Conversion",Float,0)
		F.Intrinsic.Control.Else
			F.Data.DataView.ToDataTable("dtJobs","dvJobs","dtMRPMerge",True)
			F.Data.DataTable.AddColumn("dtMRPMerge","CurOnHand",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","CurOnHand2",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","Purchase",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","PostOnHand",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","Description",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","Vendor",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","PL",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","SortCode",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","LeadTime",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","OrderQty",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","OnHandQty",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","ReqdQty",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","OnOrder",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","ReOrderPt",Float,0)
			F.Data.DataTable.AddColumn("dtMRPMerge","UM",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","UMPurch",String,"")
			F.Data.DataTable.AddColumn("dtMRPMerge","Conversion",Float,0)
			F.Data.DataTable.Merge("dtMRPMerge","dtMRP",True,3)
			F.Data.DataTable.Close("dtMRPMerge")
		F.Intrinsic.Control.EndIf
		'Create MRP DataView
		F.Data.DataView.Create("dtMRP","dvMRP",22,V.Local.sFilter,"DATE_DUE ASC,JOB ASC,SUFFIX ASC")
		
		'Retrieve amount to purchase
		F.Intrinsic.Math.Add(V.Local.fReqdQty,V.Local.fReOrderQty,V.Local.fDiff)
'		F.Intrinsic.Math.Sub(V.Local.fDiff,V.Local.fOnHandQty,V.Local.fDiff)
		F.Intrinsic.Math.Sub(V.Local.fDiff,V.Local.fCurOnHand,V.Local.fDiff)
		F.Intrinsic.Control.If(V.Local.fOrderQty,=,0)
			V.Local.fOrderQty.Set(1)
'			V.Local.fPurchase.Set(V.Local.fReOrderQty)
			V.Local.fPurchase.Set(V.Local.fDiff)
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Div(V.Local.fDiff,V.Local.fOrderQty,V.Local.fPurchase)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Math.Abs(V.Local.fPurchase,V.Local.fPurchase)
		F.Intrinsic.String.Split(V.Local.fPurchase,".",V.Local.sPurchase)
		V.Local.fPurchase.Set(V.Local.sPurchase(0).Float)
		F.Intrinsic.Control.If(V.Local.sPurchase(1),<>,"OOB")
			F.Intrinsic.String.Left(V.Local.sPurchase(1),2,V.Local.sPurchase)
			V.Local.fDecimal.Set(V.Local.sPurchase.Float)
			F.Intrinsic.Control.If(V.Local.fDecimal,>,0)
				F.Intrinsic.Math.Add(V.Local.fPurchase,1,V.Local.fPurchase)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.If(V.Local.fOrderQty,=,1)
		F.Intrinsic.Control.AndIf(V.Local.fPurchase,=,1)
			F.Intrinsic.Math.Mult(V.Local.fDiff,V.Local.fOrderQty,V.Local.fPurchase)
		F.Intrinsic.Control.Else
			F.Intrinsic.Math.Mult(V.Local.fPurchase,V.Local.fOrderQty,V.Local.fPurchase)
		F.Intrinsic.Control.EndIf
		
		V.Local.fOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ORDER!FieldValFloat)
		
		'MRP Part
		F.Intrinsic.Control.For(V.Local.iCnt2,0,V.DataView.dtMRP!dvMRP.RowCount--,1)
			V.Local.fQty.Set(V.DataView.dtMRP!dvMRP(V.Local.iCnt2).QUANTITY!FieldValFloat)
			V.Local.fOrderQty.Set(V.DataView.dtInvCheck!dvInvCheck(V.Local.iCnt).QTY_ORDER!FieldValFloat)
			
			F.Intrinsic.Control.If(V.Local.iCnt2,=,0)
				V.Local.fDiff.Set(V.Local.fOnHandQty)
				F.Intrinsic.Math.Sub(V.Local.fOnHandQty,V.Local.fQty,V.Local.fPostOnHand)
			F.Intrinsic.Control.Else
				V.Local.fDiff.Set(V.Local.fPostOnHand)
				F.Intrinsic.Math.Sub(V.Local.fPostOnHand,V.Local.fQty,V.Local.fPostOnHand)
			F.Intrinsic.Control.EndIf

			F.Intrinsic.Control.If(V.Local.fPostOnHand,>=,V.Local.fReOrderQty)
				F.Data.DataView.SetValue("dtMRP","dvMRP",V.Local.iCnt2,"CurOnHand",V.Local.fDiff,"Purchase",0,"PostOnHand",V.Local.fPostOnHand,"Description",V.Local.sPartDesc,"PL",V.Local.sPL,"SortCode",V.Local.sSortCode,"LeadTime",V.Local.fLeadTime,"CurOnHand2",V.Local.fCurOnHand,"OrderQty",V.Local.fOrderQty,"OnHandQty",V.Local.fOnHandQty,"ReqdQty",V.Local.fReqdQty,"OnOrder",V.Local.fOnOrder,"ReOrderPt",V.Local.fReOrderQty,"UM",V.Local.sUM,"UMPurch",V.Local.sUMPurch,"Conversion",V.Local.fConversion,"Vendor",V.Local.sVendor)
			F.Intrinsic.Control.Else
				F.Data.DataView.SetValue("dtMRP","dvMRP",V.Local.iCnt2,"CurOnHand",V.Local.fDiff,"Purchase",V.Local.fPurchase,"PostOnHand",V.Local.fPostOnHand,"Description",V.Local.sPartDesc,"PL",V.Local.sPL,"SortCode",V.Local.sSortCode,"LeadTime",V.Local.fLeadTime,"CurOnHand2",V.Local.fCurOnHand,"OrderQty",V.Local.fOrderQty,"OnHandQty",V.Local.fOnHandQty,"ReqdQty",V.Local.fReqdQty,"OnOrder",V.Local.fOnOrder,"ReOrderPt",V.Local.fReOrderQty,"UM",V.Local.sUM,"UMPurch",V.Local.sUMPurch,"Conversion",V.Local.fConversion,"Vendor",V.Local.sVendor)
				F.Intrinsic.Control.ExitFor(V.Local.iCnt2)
			F.Intrinsic.Control.EndIf		
			
		F.Intrinsic.Control.Next(V.Local.iCnt2)
		
		F.Data.DataView.Close("dtMRP","dvMRP")
		F.Data.DataView.Close("dtJobs","dvJobs")
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.Control.CallSub(LoadPOs)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadMRP2.End

Program.Sub.LoadPOs.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.fLeadTime.Declare
	V.Local.dDateDue.Declare
	V.Local.dDatePurch.Declare
	V.Local.sDatePurch.Declare
	V.Local.fQtyPurch.Declare
	V.Local.iCnt2.Declare
	V.Local.sSelect.Declare
	V.Local.sFilter.Declare
	V.Local.sPart.Declare

	f.Intrinsic.Control.If(v.Global.gvPO)
		f.Intrinsic.Control.CallSub("Serialize")
	f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.dtPO0.Exists)
		F.Data.DataTable.Close("dtPO0")
		F.Data.DataTable.Close("dtPO")
	F.Intrinsic.Control.EndIf

	F.Data.DataView.Create("dtMRP","dvMRP",22,"Purchase <> 0","PART ASC,LOCATION ASC,DATE_DUE ASC")
	F.Data.DataView.ToDataTable("dtMRP","dvMRP","dtPO0",True)
	F.Data.DataView.Close("dtMRP","dvMRP")
	'RemoveColumns
	F.Data.DataTable.RemoveColumn("dtPO0","SOURCE")
	F.Data.DataTable.RemoveColumn("dtPO0","JOB")
	F.Data.DataTable.RemoveColumn("dtPO0","SUFFIX")
	F.Data.DataTable.RemoveColumn("dtPO0","SEQUENCE")
	F.Data.DataTable.RemoveColumn("dtPO0","QUANTITY")
	F.Data.DataTable.RemoveColumn("dtPO0","CurOnHand")
	F.Data.DataTable.RemoveColumn("dtPO0","CurOnHand2")
	F.Data.DataTable.RemoveColumn("dtPO0","PostOnHand")
	F.Data.DataTable.RemoveColumn("dtPO0","ReqdQty")
	'Add Columns
	F.Data.DataTable.AddColumn("dtPO0","PurchaseDate",Date)
	F.Data.DataTable.AddColumn("dtPO0","Select",Boolean,False)
	F.Data.DataTable.AddColumn("dtPO0","Cost",Float,0)
	'Set Purchase Date
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtPO0.RowCount--,1)
		V.Local.dDateDue.Set(V.DataTable.dtPO0(V.Local.iCnt).DATE_DUE!FieldVal)
		F.Intrinsic.Math.Mult(V.DataTable.dtPO0(V.Local.iCnt).LeadTime!FieldValFloat,-1,V.Local.fLeadTime)
		F.Intrinsic.Date.DateAdd("D",V.Local.fLeadTime,V.Local.dDateDue,V.Local.dDatePurch)
		F.Data.DataTable.SetValue("dtPO0",V.Local.iCnt,"PurchaseDate",V.Local.dDatePurch)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'Create a Key Column
	F.Data.DataTable.AddExpressionColumn("dtPO0","PartLoc",String,"[PART]+[LOCATION]")
	'Load Vendors
	F.Data.DataTable.FillFromDictionary("dtPO0","dVendor","PartLoc","Vendor")
	'Preferred Vendor Names
	F.Data.DataTable.AddColumn("dtPO0","VendorName",String,"")
	F.Data.DataTable.FillFromDictionary("dtPO0","dVendorName","Vendor","VendorName")
	'GL Account
	F.Data.DataTable.AddColumn("dtPO0","GLAcct",String,"")
	F.Data.DataTable.FillFromDictionary("dtPO0","dGLAcct","PL","GLAcct")
	'Status
	F.Data.DataTable.AddColumn("dtPO0","Status",Long,0)
	F.Data.DataTable.FillFromDictionary("dtPO0","dStatus","PartLoc","Status")
	'BuyerCode
	F.Data.DataTable.AddColumn("dtPO0","BuyerCode",String,"")
	F.Data.DataTable.FillFromDictionary("dtPO0","dBuyerCode","Vendor","BuyerCode")
	'BuyerName	
	F.Data.DataTable.AddColumn("dtPO0","BuyerName",String,"")
	F.Data.DataTable.FillFromDictionary("dtPO0","dBuyerName","BuyerCode","BuyerName")
	'In Quality
	F.Data.DataTable.AddColumn("dtPO0","InQuality",Float,0)
	F.Data.Dictionary.CreateFromSQL("dInQual","con","Select Part+Location As PartLoc,Sum(Qty_Remaining) As Qty_Remaining From V_Quality Where Qty_Remaining <> 0 Group By Part,Location;")
	F.Data.Dictionary.SetDefaultReturn("dInQual",0.0)
	F.Data.DataTable.FillFromDictionary("dtPO0","dInQual","PartLoc","InQuality")
	F.Data.Dictionary.Close("dInQual")
	'Remove Key Column
	F.Data.DataTable.RemoveColumn("dtPO0","PartLoc")
	
	'Group Parts together
	F.Data.DataView.Create("dtPO0","dvGroup")
	F.Data.DataView.ToDataTableDistinct("dtPO0","dvGroup","dtPO","Select*!*PART*!*LOCATION*!*DESCRIPTION*!*Vendor*!*VendorName*!*PL*!*SortCode*!*BuyerCode*!*BuyerName*!*LEADTIME*!*OrderQty*!*OnHandQty*!*OnOrder*!*ReOrderPt*!*InQuality*!*UM*!*UMPurch*!*Conversion*!*Cost*!*GLAcct*!*Status",True)
	F.Data.DataTable.AddColumn("dtPO","PurchaseDate",Date)
	F.Data.DataTable.AddColumn("dtPO","DATE_DUE",Date)
	F.Data.DataTable.AddColumn("dtPO","Purchase",Float,0)
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtPO.RowCount--,1)
		F.Intrinsic.String.Replace(V.DataTable.dtPO(V.Local.iCnt).Part!FieldVal,"'","''",V.Local.sPart)
		F.Intrinsic.String.Build("Part = '{0}' And Location = '{1}'",V.Local.sPart,V.DataTable.dtPO(V.Local.iCnt).Location!FieldVal,V.Local.sFilter)
		F.Data.DataTable.Select("dtPO0",V.Local.sFilter,V.Local.sSelect)	
	
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Data.DataTable.Compute("dtPO0","SUM(Purchase)",V.Local.sFilter,V.Local.fQtyPurch)
		F.Data.DataTable.SetValue("dtPO",V.Local.iCnt,"PurchaseDate",V.DataTable.dtPO0(V.Local.sSelect(0)).PurchaseDate!FieldVal,"DATE_DUE",V.DataTable.dtPO0(V.Local.sSelect(0)).DATE_DUE!FieldVal,"Purchase",V.Local.fQtyPurch)	
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	
	'Create a Key Column
	F.Data.DataTable.AddExpressionColumn("dtPO","PartLoc",String,"[PART]+[LOCATION]")
	'Last Note Column
	F.Data.DataTable.AddColumn("dtPO","LastNote",String,"")
	F.Data.Dictionary.CreateFromSQL("dLastNote","con","Select Part+Loc As PartLoc,Notes From GAB_4936_NOTES Order By Create_DT Desc;")
	F.Data.Dictionary.SetDefaultReturn("dLastNote","")
	F.Data.DataTable.FillFromDictionary("dtPO","dLastNote","PartLoc","LastNote")
	F.Data.Dictionary.Close("dLastNote")
	
	F.Data.Dictionary.CreateFromSQL("dictQtyNet","con","Select Part+Location As PartLoc,Qty_Onhand + Qty_OnOrder_PO + Qty_OnOrder_WO - Qty_Required as NetQty from Inventory_MSTR;")
	
	F.Data.Dictionary.SetDefaultReturn("dictQtyNet",0)
	f.Data.DataTable.AddColumn("dtPO","NetQty","Float",0)
	F.Data.DataTable.FillFromDictionary("dtPO","dictQtyNet","PartLoc","NetQty")
	F.Data.Dictionary.Close("dictQtyNet")	
	'Remove Key Column
	F.Data.DataTable.RemoveColumn("dtPO","PartLoc")
	
	'Req Columns
	F.Data.DataTable.AddColumn("dtPO","PO_Req_Number",String,"")
	F.Data.DataTable.AddColumn("dtPO","PO_Req_Line",String,"")

	'F.Intrinsic.Control.CallSub(LoadGVPO)
	F.Intrinsic.Control.CallSub(NewPurchToStock)
	'f.Intrinsic.Control.CallSub("Deserialize","sItemControl","GsGCPO","sItemGrid","gvPO")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadPOs.End

Program.Sub.LoadGVPO.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iNext.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sNextPart.Declare
	V.Local.sNextLoc.Declare
	V.Local.sColor.Declare
	V.Local.sValues.Declare

	Gui.frmPO.GsGCPO.SuspendLayout()
	Gui.frmPO.GsGCPO.AddGridViewFromDataTable("gvPO","dtPO")
	Gui.frmPO.GsGCPO.Icon(V.Global.sGsGCIcon)
	Gui.frmPO.GsGCPO.SetGridViewProperty("gvPO","MultiSelect",True)
	Gui.frmPO.GsGCPO.SetGridViewProperty("gvPO","AllowSort",True)
	Gui.frmPO.GsGCPO.SetGridViewProperty("gvPO","AllowFilter",True)
	Gui.frmPO.GsGCPO.SetGridViewProperty("gvPO","ShowGroupPanel",True)
	Gui.frmPO.GsGCPO.SetGridViewProperty("gvPO","Enableappearanceoddrow",True)
	Gui.frmPO.GsGCPO.SetGridViewProperty("gvPO","OptionsFindAlwaysVisible",True)
	Gui.frmPO.GsGCPO.SetGridViewProperty("gvPO","OptionsViewShowAutoFilterRow",True)
	Gui.frmPO.GsGCPO.SetGridViewProperty("gvPO","OptionsViewColumnAutoWidth",False)
	Gui.frmPO.GsGCPO.SetGridViewProperty("gvPO","AllowColumnResizing",True)
	
	'Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Vendor","Visible",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","GLAcct","Visible",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Status","Visible",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","BuyerCode","Visible",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PO_Req_Number","Visible",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PO_Req_Line","Visible",False)
	
'	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Select","Fixed","Left")
'	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PART","Fixed","Left")
'	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LOCATION","Fixed","Left")
'	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Description","Fixed","Left")
	
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Select","VisibleIndex","0")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PART","VisibleIndex","1")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LOCATION","VisibleIndex","2")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DESCRIPTION","VisibleIndex","3")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","VendorName","VisibleIndex","4")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PL","VisibleIndex","5")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","SortCode","VisibleIndex","6")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","BuyerName","VisibleIndex","7")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LEADTIME","VisibleIndex","8")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OrderQty","VisibleIndex","9")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnHandQty","VisibleIndex","10")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnOrder","VisibleIndex","11")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","ReOrderPt","VisibleIndex","12")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","InQuality","VisibleIndex","13")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","NetQty","VisibleIndex","14")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UM","VisibleIndex","15")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UMPurch","VisibleIndex","16")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Conversion","VisibleIndex","17")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PURCHASEDATE","VisibleIndex","18")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DATE_DUE","VisibleIndex","19")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Cost","VisibleIndex","20")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Purchase","VisibleIndex","21")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LastNote","VisibleIndex","22")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Vendor","VisibleIndex","4")

	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Select","Caption","Select")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PART","Caption","Part")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LOCATION","Caption","Loc")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DESCRIPTION","Caption","Description")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","VendorName","Caption","Preferred Vendor")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PL","Caption","PL")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","SortCode","Caption","Sort Code")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","BuyerName","Caption","Buyer")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LEADTIME","Caption","Lead Time")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OrderQty","Caption","Order Qty")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnHandQty","Caption","On Hand Qty")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnOrder","Caption","On Order")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","ReOrderPt","Caption","ReOrder Pt")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","InQuality","Caption","In Quality")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UM","Caption","UM")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UMPurch","Caption","UM Purch")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Conversion","Caption","Conversion")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PURCHASEDATE","Caption","Purch. Date")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DATE_DUE","Caption","Due Date")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Cost","Caption","Cost")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Purchase","Caption","PO Quantity")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LastNote","Caption","Last Note")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","NetQty","Caption","Net Qty")

	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Select","MinWidth","50")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PART","MinWidth","140")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LOCATION","MinWidth","40")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DESCRIPTION","MinWidth","200")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","VendorName","MinWidth","200")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PL","MinWidth","35")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","SortCode","MinWidth","90")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","BuyerName","MinWidth","100")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LEADTIME","MinWidth","75")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OrderQty","MinWidth","85")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnHandQty","MinWidth","85")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnOrder","MinWidth","85")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","ReOrderPt","MinWidth","85")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","InQuality","MinWidth","85")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UM","MinWidth","55")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UMPurch","MinWidth","70")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Conversion","MinWidth","85")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PURCHASEDATE","MinWidth","85")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DATE_DUE","MinWidth","85")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Cost","MinWidth","85")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Purchase","MinWidth","85")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LastNote","MinWidth","115")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","NetQty","MinWidth","85")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","GLAcct","MinWidth","50")
	
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Select","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PART","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LOCATION","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DESCRIPTION","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Vendor","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","VendorName","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PL","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","SortCode","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","BuyerName","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LEADTIME","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OrderQty","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnHandQty","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnOrder","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","ReOrderPt","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","InQuality","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UM","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UMPurch","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Conversion","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PURCHASEDATE","AllowEdit",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DATE_DUE","AllowEdit",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Cost","AllowEdit",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Purchase","AllowEdit",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LastNote","AllowEdit",False)

	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Select","ReadOnly",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DATE_DUE","ReadOnly",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Cost","ReadOnly",False)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Purchase","ReadOnly",False)

	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Select","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PART","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LOCATION","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DESCRIPTION","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","VendorName","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PL","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","SortCode","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","BuyerName","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LEADTIME","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OrderQty","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnHandQty","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnOrder","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","ReOrderPt","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","InQuality","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UM","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UMPurch","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Conversion","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PURCHASEDATE","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DATE_DUE","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Cost","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Purchase","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LastNote","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","NetQty","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","GLAcct","HeaderFontBold",True)
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Vendor","HeaderFontBold",True)
	
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Select","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PART","HeaderHAlignment","Left")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LOCATION","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DESCRIPTION","HeaderHAlignment","Left")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","VendorName","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PL","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","SortCode","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","BuyerName","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LEADTIME","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OrderQty","HeaderHAlignment","Far")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnHandQty","HeaderHAlignment","Far")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnOrder","HeaderHAlignment","Far")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","ReOrderPt","HeaderHAlignment","Far")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","InQuality","HeaderHAlignment","Far")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UM","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UMPurch","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Conversion","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PURCHASEDATE","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DATE_DUE","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Cost","HeaderHAlignment","Far")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Purchase","HeaderHAlignment","Far")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LastNote","HeaderHAlignment","Left")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","NetQty","HeaderHAlignment","far")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","GLAcct","HeaderHAlignment","center")
	
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Select","CellHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LOCATION","CellHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","VendorName","CellHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PL","CellHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","SortCode","CellHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","BuyerName","CellHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LEADTIME","CellHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UM","CellHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","UMPurch","CellHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Conversion","CellHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PURCHASEDATE","CellHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DATE_DUE","CellHAlignment","Center")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","GLAcct","CellHAlignment","Center")
	
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PART","CellForeColor","Blue")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","LOCATION","CellForeColor","Blue")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DESCRIPTION","CellForeColor","Blue")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","VendorName","CellForeColor","Blue")

	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DATE_DUE","CellBackColor","LightYellow")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Cost","CellBackColor","LightYellow")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Purchase","CellBackColor","LightYellow")

	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OrderQty","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnHandQty","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","OnOrder","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","ReOrderPt","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","InQuality","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Conversion","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Cost","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","Purchase","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","NetQty","DisplayCustomNumeric","#,###,###,##0.00##")

	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","PURCHASEDATE","DisplayCustomDatetime","d")
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","DATE_DUE","DisplayCustomDatetime","d")
	
	Gui.frmPO.GsGCPO.AddSummaryItem("gvPO","PART","PART","Count","Tot Parts: ","",n0)
	
	Gui.frmPO.GsGCPO.SetColumnProperty("gvPO","NetQty","ToolTip","On Hand + On Order PO + On Order WO - Qty Required")	

	Gui.frmPO.GsGCPO.ResumeLayout()	
	Gui.frmPO.GsGCPO.MainView("gvPO")
	v.Global.gvPO.Set(True)
	
	Gui.frmPO.lblStatus.Visible(False)
	Gui.frmPO.progBarStatus.Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGVPO.End

Program.Sub.InvCheckDrop.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.iCnt.Declare
	V.Local.fSum1.Declare
	V.Local.fSum2.Declare
	V.Local.fCurOnHand.Declare
	V.Local.fBalance.Declare
	V.Local.bDic.Declare
	V.Local.dCutoff.Declare

	f.Intrinsic.Control.If(v.Global.gvPODrop)
		f.Intrinsic.Control.CallSub("Serialize")
	f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.DataTable.dtPODrop.Exists)
		F.Data.DataTable.Close("dtPODrop")
	F.Intrinsic.Control.EndIf

	Gui.frmPO.lblStatus.Caption("Loading Drop Ship POs....")
	Gui.frmPO.lblStatus.Visible(True)
	Gui.frmPO.progBarStatus.Visible(True)
	V.Global.sPart.Set("")
	
	V.Local.dCutoff.Set(V.Screen.frmPO!dtpCutoff.Value)
	
	F.Intrinsic.Control.If(V.Screen.frmPO!chkCutoff.Value,=,0)
		F.Data.DataTable.CreateFromSQL("dtPODrop","con","SELECT B.PART,B.LOCATION,B.DESCRIPTION,RTRIM(C.NAME_VENDOR) AS VENDOR1, '' as Vendor,B.PRODUCT_LINE AS PL,B.CODE_SORT AS SORTCODE,B.TIME_MATERIAL_LEAD AS LEADTIME,B.QTY_ORDER AS ORDERQTY,B.QTY_ONHAND AS ONHANDQTY,B.QTY_ONORDER_PO AS ONORDER,B.QTY_REORDER AS REORDERPT,B.UM_INVENTORY AS UM,B.UM_PURCHASING AS UMPURCH,B.FACTOR_CONVERSION AS CONVERSION,A.ORDER_NO,LEFT(A.RECORD_NO,3) AS RECORD_NO,A.DATE_ITEM_PROM AS DATE_DUE,DATEADD(DAY,(B.TIME_MATERIAL_LEAD*-1),A.DATE_ITEM_PROM) AS PURCHASEDATE,A.QTY_BO AS PURCHASE FROM V_ORDER_LINES A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION JOIN V_INVENTORY_MST2 C ON A.PART = C.PART AND A.LOCATION = C.LOCATION LEFT JOIN V_PO_DROP_SHIP D ON A.ORDER_NO = D.ORDER_NO AND A.RECORD_NO = D.ORDER_LINE WHERE A.LINE_TYPE = 'D' AND D.PO IS NULL AND C.CODE_SOURCE IN ('P','J');",True)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("SELECT B.PART,B.LOCATION,B.DESCRIPTION,RTRIM(C.NAME_VENDOR) AS VENDOR1, '' as Vendor,B.PRODUCT_LINE AS PL,B.CODE_SORT AS SORTCODE,B.TIME_MATERIAL_LEAD AS LEADTIME,B.QTY_ORDER AS ORDERQTY,B.QTY_ONHAND AS ONHANDQTY,B.QTY_ONORDER_PO AS ONORDER,B.QTY_REORDER AS REORDERPT,B.UM_INVENTORY AS UM,B.UM_PURCHASING AS UMPURCH,B.FACTOR_CONVERSION AS CONVERSION,A.ORDER_NO,LEFT(A.RECORD_NO,3) AS RECORD_NO,A.DATE_ITEM_PROM AS DATE_DUE,DATEADD(DAY,(B.TIME_MATERIAL_LEAD*-1),A.DATE_ITEM_PROM) AS PURCHASEDATE,A.QTY_BO AS PURCHASE FROM V_ORDER_LINES A JOIN V_INVENTORY_MSTR B ON A.PART = B.PART AND A.LOCATION = B.LOCATION JOIN V_INVENTORY_MST2 C ON A.PART = C.PART AND A.LOCATION = C.LOCATION LEFT JOIN V_PO_DROP_SHIP D ON A.ORDER_NO = D.ORDER_NO AND A.RECORD_NO = D.ORDER_LINE WHERE A.LINE_TYPE = 'D' AND D.PO IS NULL AND C.CODE_SOURCE IN ('P','J') AND A.DATE_ITEM_PROM <= '{0}';",V.Local.dCutoff.PervasiveDate,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtPODrop","con",V.Local.sSQL,True)
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.AddColumn("dtPODrop","Select",Boolean,False)
	F.Data.DataTable.AddColumn("dtPODrop","VendorName",String,"")
	F.Data.DataTable.AddColumn("dtPODrop","Cost",Float,0)
	F.Data.DataTable.AddColumn("dtPODrop","POHistory",String,"History")
	F.Data.DataTable.AddColumn("dtPODrop","GLAcct",String,"")
	
	
	F.Data.Dictionary.CreateFromSQL("dNameVendor","con","select rtrim(Left(Name_Vendor,20)) as Name_Vendor, rtrim(Vendor) as Vendor from v_vendor_master")
	F.Data.Dictionary.SetDefaultReturn("dNameVendor","")
	F.Data.DataTable.FillFromDictionary("dtPODrop","dNameVendor","Vendor1","Vendor")
	F.Data.DataTable.RemoveColumn("dtPODrop","Vendor1")
	F.Data.Dictionary.Close("dNameVendor")
	F.Data.DataTable.FillFromDictionary("dtPODrop","dVendorName","Vendor","VendorName")
	F.Data.DataTable.FillFromDictionary("dtPODrop","dGLAcct","PL","GLAcct")

	F.Intrinsic.Control.CallSub(LoadGvPODrop)
	f.Intrinsic.Control.CallSub("Deserialize","sItemControl","GsGCPODrop","sItemGrid","gvPODrop")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.InvCheckDrop.End

'AT modification 5/27/2022: Purchase to stock tab will now show part numbers multiple times grouped by part due date on jobs which require the part
Program.Sub.NewPurchToStock.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare
V.Local.sSql.Declare

'Check for tables and close if they exists
F.Intrinsic.Control.If(V.DataTable.dtBelowReorder.Exists)
	F.Data.Datatable.Close("dtBelowReorder")
F.Intrinsic.Control.EndIf
F.Intrinsic.Control.If(V.DataTable.dtPORequired.Exists)
	F.Data.Datatable.Close("dtPORequired")
F.Intrinsic.Control.EndIf

'Load data. Find all inventory items below reorder point
F.Data.Datatable.CreateFromSQL("dtBelowReorder", "con", "Select Convert(0,SQL_Bit) as 'SELECT', cast('1900-01-01' as date) as Date_Due,A.PART,A.LOCATION,A.DESCRIPTION,A.PRODUCT_LINE as PL,A.CODE_SORT,'' AS BuyerCode,'' as BuyerName,A.TIME_MATERIAL_LEAD,A.UM_Inventory as UM,UM_PURCHASING as UMPurch,FACTOR_CONVERSION,QTY_ONHAND,QTY_ORDER,QTY_ONORDER_PO,QTY_REORDER,A.QTY_RECVD_NOT_INSP AS IN_QUALITY,(Qty_Onhand + Qty_OnOrder_PO + Qty_OnOrder_WO - Qty_Required - Qty_Reorder) as NetQty,Convert(0,SQL_Integer) as Status,Convert(0,SQL_Float) as Cost,rtrim(B.NAME_VENDOR) as Vendor,'' as NAME_VENDOR,Cast('0' as numeric(5,4)) as Qty_Committed,Cast('0' as numeric(5,4)) as Qty_Issued, Cast('0' as numeric(5,4)) as Purchase1,'' AS NOTES, '' as GLAcct,'' as Mfg_Part, '' as Mfg_Name, '' as POLineNum from V_INVENTORY_MSTR A join V_INVENTORY_MST2 B on A.PART = B.PART and A.LOCATION = B.LOCATION where B.CODE_SOURCE = 'P' and NetQty < '0' order by A.PART, A.LOCATION", True)

'Load data. Find all part commitments on jobs
'F.Data.Datatable.CreateFromSQL("dtPORequired", "con", "Select Convert(0,SQL_Bit) as 'SELECT', Cast(j.Date_Due as date) as Date_Due,A.PART,A.LOCATION,A.DESCRIPTION,A.PRODUCT_LINE as PL,A.CODE_SORT,'' AS BuyerCode,'' as BuyerName,A.TIME_MATERIAL_LEAD,A.UM_Inventory as UM,UM_PURCHASING as UMPurch,FACTOR_CONVERSION,QTY_ONHAND,QTY_ORDER,QTY_ONORDER_PO,QTY_REORDER,A.QTY_RECVD_NOT_INSP AS IN_QUALITY,(Qty_Onhand + Qty_OnOrder_PO + Qty_OnOrder_WO - Qty_Required) as NetQty,Convert(0,SQL_Integer) as Status,Convert(0,SQL_Float) as Cost,rtrim(B.NAME_VENDOR) as Vendor,'' as NAME_VENDOR,SUM(j.Qty_Committed) as Qty_Committed,SUM(j.Qty_Issued) as Qty_Issued,SUM(j.Qty_Committed - j.Qty_Issued) as Purchase1,'' AS NOTES, '' as GLAcct, '' as Mfg_Part, '' as Mfg_Name, '' as POLineNum FROM V_Job_Commitments j inner join v_INVENTORY_MSTR A on j.Part = a.Part and j.Location = a. Location JOIN V_INVENTORY_MST2 B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE B.CODE_SOURCE = 'P' GROUP BY Date_Due, A.PART, A.LOCATION, A.DESCRIPTION, A.PRODUCT_LINE, A.CODE_SORT, A.TIME_MATERIAL_LEAD, A.UM_INVENTORY, A.UM_PURCHASING, FACTOR_CONVERSION, QTY_ONHAND,QTY_ORDER,QTY_ONORDER_PO,QTY_ONORDER_WO, QTY_REORDER, A.QTY_RECVD_NOT_INSP, B.NAME_VENDOR, QTY_REQUIRED order by A.PART,A.LOCATION, Date_Due DESC", True)

F.Data.Datatable.CreateFromSQL("dtPORequired", "con", "Select Convert(0,SQL_Bit) as 'SELECT', Cast(j.Date_Due as date) as Date_Due,A.PART,A.LOCATION,A.DESCRIPTION,A.PRODUCT_LINE as PL,A.CODE_SORT,'' AS BuyerCode,'' as BuyerName,A.TIME_MATERIAL_LEAD,A.UM_Inventory as UM,UM_PURCHASING as UMPurch,FACTOR_CONVERSION,QTY_ONHAND,QTY_ORDER,QTY_ONORDER_PO,QTY_REORDER,A.QTY_RECVD_NOT_INSP AS IN_QUALITY,(Qty_Onhand + Qty_OnOrder_PO + Qty_OnOrder_WO - Qty_Required) as NetQty,Convert(0,SQL_Integer) as Status,Convert(0,SQL_Float) as Cost,rtrim(B.NAME_VENDOR) as Vendor,'' as NAME_VENDOR,SUM(j.Qty_Committed) as Qty_Committed,SUM(j.Qty_Issued) as Qty_Issued,SUM(j.Qty_Committed - j.Qty_Issued) as Purchase1,'' AS NOTES, '' as GLAcct, '' as Mfg_Part, '' as Mfg_Name, '' as POLineNum FROM V_Job_Commitments j inner join v_INVENTORY_MSTR A on j.Part = a.Part and j.Location = a. Location JOIN V_INVENTORY_MST2 B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE B.CODE_SOURCE = 'P' GROUP BY Date_Due, A.PART, A.LOCATION, A.DESCRIPTION, A.PRODUCT_LINE, A.CODE_SORT, A.TIME_MATERIAL_LEAD, A.UM_INVENTORY, A.UM_PURCHASING, FACTOR_CONVERSION, QTY_ONHAND,QTY_ORDER,QTY_ONORDER_PO,QTY_ONORDER_WO, QTY_REORDER, A.QTY_RECVD_NOT_INSP, B.NAME_VENDOR, QTY_REQUIRED order by A.PART,A.LOCATION, Date_Due", True)


'Merge tables and create view to sort
F.Data.Datatable.Merge("dtBelowReorder", "dtPORequired", 1, 1)
F.Data.DataView.Create("dtPORequired", "dvPORequired", 22, "", "PART")

'Check for table and close if it exists
F.Intrinsic.Control.If(V.DataTable.dtFinal.Exists)
	F.Data.Datatable.Close("dtFinal")
F.Intrinsic.Control.EndIf

'Send data back to datatable for running total calculation
F.Data.DataView.ToDataTable("dtPORequired", "dvPORequired", "dtFinal", True)

'F.Intrinsic.Control.CallSub(ReorderQtyFillsRequirements)

'Create columns to keep parts with on hand below reorder point with no requirements in JOB_COMMITMENTS
F.Data.DataTable.AddColumn("dtFinal","PART_CHANGE","string")
F.Data.DataTable.SetValueOnNextLine("dtFinal","PART","PART_CHANGE","PART")
f.Data.DataTable.AddExpressionColumn("dtFinal","NULL_CHECK","string","isnull(PART_CHANGE,'Y')")

'Create columns to calculate purchase amount according to reorder qty if one exists for part
F.Data.Datatable.AddExpressionColumn("dtFinal", "REORDER_AMT", "Float", "IIF([QTY_ORDER] > 0, ([Purchase1] / [QTY_ORDER]), [Purchase1])")
F.Data.DataTable.AddExpressionColumn("dtFinal", "CEILING", "Integer", "CONVERT([REORDER_AMT], System.Int64) + iif(convert([REORDER_AMT], System.Int64) < [REORDER_AMT], 1, 0)")
F.Data.Datatable.AddExpressionColumn("dtFinal", "Purchase2", "Float", "IIF([QTY_ORDER] = 0, ([Purchase1]), [QTY_ORDER] * [CEILING])")

'Create columns to keep running total of parts on hand
'F.Data.Datatable.AddColumn("dtFinal", "RUNNING_TOT", "Float")
'Create a degault value to check against for running total validation
'F.Data.Datatable.SetValue("dtFinal", -1, "RUNNING_TOT", 999999999)
'F.Data.Datatable.AddExpressionColumn("dtFinal", "BALANCE", "Float", "IIF([RUNNING_TOT] = 999999999, ([NetQty] + [Purchase2]), ([RUNNING_TOT] + [Purchase2]))")
'F.Data.DataTable.SetValueOnNextLine("dtFinal", "BALANCE", "RUNNING_TOT", "PART")

F.Data.Datatable.AddColumn("dtFinal", "BALANCE", "Float")
F.Data.Datatable.AddColumn("dtFinal", "PURCH_FLAG", "String")
F.Data.Datatable.AddColumn("dtFinal", "Purchase", "Float")

F.Intrinsic.Control.CallSub(ToPurchase)

'Create final purchase column to account for existing on hand qty and purchase only the needed remainder if reorder qty is 0
'F.Data.Datatable.AddExpressionColumn("dtFinal", "Purchase", "Float", "IIF([BALANCE] > [QTY_REORDER] AND [QTY_ORDER] = 0, ([Purchase2] - [BALANCE]), [Purchase2])")

'Check for table and close if it exists
F.Intrinsic.Control.If(V.DataTable.dtToDashboard.Exists)
	F.Data.Datatable.Close("dtToDashboard")
F.Intrinsic.Control.EndIf

'F.Data.DataView.Create("dtFinal", "dvFinal")
'F.Data.DataView.SetFilter("dtFinal", "dvFinal", "([NULL_CHECK] = 'Y' and [NETQTY] < [QTY_REORDER]) or [RUNNING_TOT] < [QTY_REORDER]")
'F.Data.DataView.ToDataTable("dtFinal", "dvFinal", "dtToDashboard", True)

F.Data.DataView.Create("dtFinal", "dvFinal")
F.Data.DataView.SetFilter("dtFinal", "dvFinal", "([DATE_DUE] = '1/1/1900' and [BALANCE] < [QTY_REORDER]) OR [PURCH_FLAG] = 'Y'")
F.Data.DataView.ToDataTable("dtFinal", "dvFinal", "dtToDashboard", True)

'remove all add expressions columns
F.Data.Datatable.RemoveColumn("dtToDashboard", "REORDER_AMT")
F.Data.Datatable.RemoveColumn("dtToDashboard", "CEILING")
F.Data.Datatable.RemoveColumn("dtToDashboard", "Purchase2")
'F.Data.Datatable.RemoveColumn("dtToDashboard", "BALANCE")
'F.Data.Datatable.RemoveColumn("dtToDashboard", "BALANCE")
'F.Data.Datatable.RemoveColumn("dtToDashboard", "Purchase")
're-add
F.Data.Datatable.AddExpressionColumn("dtToDashboard", "REORDER_AMT", "Float", "IIF([QTY_ORDER] > 0, ([Purchase1] / [QTY_ORDER]), [Purchase1])")
F.Data.DataTable.AddExpressionColumn("dtToDashboard", "CEILING", "Integer", "CONVERT([REORDER_AMT], System.Int64) + iif(convert([REORDER_AMT], System.Int64) < [REORDER_AMT], 1, 0)")
F.Data.Datatable.AddExpressionColumn("dtToDashboard", "Purchase2", "Float", "IIF([QTY_ORDER] = 0, ([Purchase1]), [QTY_ORDER] * [CEILING])")
'F.Data.Datatable.AddExpressionColumn("dtToDashboard", "BALANCE", "Float", "IIF([RUNNING_TOT] = 999999999, ([NetQty] + [Purchase2]), ([RUNNING_TOT] + [Purchase2]))")
'F.Data.DataTable.SetValueOnNextLine("dtToDashboard", "BALANCE", "RUNNING_TOT", "PART")
'F.Data.Datatable.AddExpressionColumn("dtToDashboard", "Purchase", "Float", "IIF([BALANCE] > [QTY_REORDER] AND [QTY_ORDER] = 0, ([Purchase2] - [BALANCE]), [Purchase2])")

F.Intrinsic.Control.CallSub(LoadNewPTS)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry

Program.Sub.NewPurchToStock.End

Program.Sub.ToPurchase.Start
V.Local.iCtrl.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.sSelect.Declare(String)
V.Local.fTotal.Declare(Float)
V.Local.fRequirements.Declare(Float)
V.Local.sSql.Declare(String)
V.Local.iCtrl2.Declare(Long)
V.Local.sIndexes.Declare(String)
V.Local.iCtrl3.Declare(Long)
V.Local.iIndex.Declare(Long)
V.Local.fFinalPurchase.Declare(Float)

'Select list of distinct parts
F.Data.Dataview.Create("dtFinal", "dvCheck")
F.Data.DataView.ToDataTableDistinct("dtFinal", "dvCheck", "dtParts", "PART")

'Loop through dtParts to create array of like parts
F.Intrinsic.Control.For(V.Local.iCtrl, 0, V.DataTable.dtParts.RowCount--, 1)
	'Find like part records and split
	F.Intrinsic.String.Build("PART = '{0}'", V.DataTable.dtParts(V.Local.iCtrl).PART!FieldVal, V.Local.sSelect)
	
'	F.Intrinsic.Control.If(V.DataTable.dtParts(V.Local.iCtrl).PART!FieldValTrim, =, "RAWC")
'		Function.Intrinsic.Debug.InvokeDebugger
'		Function.Intrinsic.Debug.Stop
'	F.Intrinsic.Control.EndIf
	
	F.Data.Datatable.Select("dtFinal", V.Local.sSelect, V.Local.sRet)
	F.Intrinsic.String.Split(V.Local.sRet, "*!*", V.Local.sRet)
	
'	F.Intrinsic.Control.If(V.Local.sRet, !=, "***NORETURN***")

		'Loop through all instances of part in dtFinal
		F.Intrinsic.Control.For(V.Local.iCtrl2, 0, V.Local.sRet.UBound, 1)
			V.Local.iIndex.Set(V.Local.sRet(V.Local.iCtrl2))
			
			F.Intrinsic.Control.SelectCase(V.DataTable.dtFinal(V.Local.iIndex).DATE_DUE!FieldVal)
			
				'Set BALANCE on records with no commitments
				F.Intrinsic.Control.Case("1/1/1900")
					
					F.Intrinsic.Control.If(V.Local.iCtrl2, =, 0)
						F.Intrinsic.Math.Add(V.Datatable.dtFinal(V.Local.iIndex).QTY_ONHAND!FieldVal, V.DataTable.dtFinal(V.Local.iIndex).QTY_ONORDER_PO!FieldVal, V.Local.fTotal)
						F.Data.Datatable.SetValue("dtFinal", V.Local.iIndex, "BALANCE", V.Local.fTotal)
							
					F.Intrinsic.Control.Else
						F.Data.Datatable.SetValue("dtFinal", V.Local.iIndex, "BALANCE", V.Local.fTotal)
						
					F.Intrinsic.Control.EndIf
					
				'Handle balance and purchase qty on all records with commitments
				F.Intrinsic.Control.CaseElse()
				
					'If first record in array, set on hand balance
					F.Intrinsic.Control.If(V.Local.iCtrl2, =, 0)
						
						F.Intrinsic.Math.Add(V.Datatable.dtFinal(V.Local.iIndex).QTY_ONHAND!FieldVal, V.DataTable.dtFinal(V.Local.iIndex).QTY_ONORDER_PO!FieldVal, V.Local.fTotal)
						F.Intrinsic.Math.Sub(V.Local.fTotal, V.DataTable.dtFinal(V.Local.sRet(V.Local.iCtrl2)).Purchase1!FieldVal, v.Local.fTotal)
						F.Data.Datatable.SetValue("dtFinal", V.Local.iIndex, "BALANCE", V.Local.fTotal)
						
					'Else subtract purchase qty from balance
					F.Intrinsic.Control.Else
						F.Intrinsic.Math.Sub(V.Local.fTotal, V.DataTable.dtFinal(V.Local.iIndex).Purchase1!FieldVal, V.Local.fTotal)
						F.Data.Datatable.SetValue("dtFinal", V.Local.iIndex, "BALANCE", V.Local.fTotal)
					F.Intrinsic.Control.EndIf
					
					'If current balance < reorder point set purch flag to Y and add purchase qty to balance
					F.Intrinsic.Control.If(V.DataTable.dtFinal(V.Local.iIndex).BALANCE!FieldVal, <, V.DataTable.dtFinal(V.Local.iIndex).QTY_REORDER!FieldVal)
						
						'Create final purchase column to account for existing on hand qty and purchase only the needed remainder if order qty is 0
						F.Intrinsic.Control.If(V.DataTable.dtFinal(V.Local.iIndex).QTY_ORDER!FieldVal, =, 0)
							
							F.Intrinsic.Math.Abs(V.DataTable.dtFinal(V.Local.iIndex).BALANCE!FieldVal, V.Local.fFinalPurchase)
							F.Data.Datatable.SetValue("dtFinal", V.Local.iIndex, "Purchase", V.Local.fFinalPurchase)
							
						F.Intrinsic.Control.Else
							V.Local.fFinalPurchase.Set(V.DataTable.dtFinal(V.Local.iIndex).Purchase2!FieldVal)
							F.Data.Datatable.SetValue("dtFinal", V.Local.iIndex, "Purchase", V.Local.fFinalPurchase)
						
						F.Intrinsic.Control.EndIf
						
						F.Data.Datatable.SetValue("dtFinal", V.Local.iIndex, "PURCH_FLAG", "Y")
						F.Intrinsic.Math.Add(V.DataTable.dtFinal(V.Local.iIndex).BALANCE!FieldVal, V.Local.fFinalPurchase, V.Local.fTotal)
						F.Data.Datatable.SetValue("dtFinal", V.Local.iIndex, "BALANCE", V.Local.fTotal)
						
					F.Intrinsic.Control.EndIf
				
			F.Intrinsic.Control.EndSelect
			
		F.Intrinsic.Control.Next(V.Local.ICtrl2)

F.Intrinsic.Control.Next(V.Local.iCtrl)


Program.Sub.ToPurchase.End

Program.Sub.ReorderQtyFillsRequirements.Start
V.Local.iCtrl.Declare(Long)
V.Local.sRet.Declare(String)
V.Local.sSelect.Declare(String)
V.Local.fTotal.Declare(Float)
V.Local.fRequirements.Declare(Float)
V.Local.sSql.Declare(String)
V.Local.iCtrl2.Declare(Long)
V.Local.sIndexes.Declare(String)
V.Local.iCtrl3.Declare(Long)

'Select list of distinct parts from dtFinal
F.Data.DataView.Create("dtFinal", "dvCheck")
F.Data.DataView.ToDataTableDistinct("dtFinal", "dvCheck", "dtParts", "PART")

'Create table to hold indexes to delete
F.Intrinsic.Control.If(V.DataTable.dtIndexToDelete.Exists)
F.Data.Datatable.Close("dtIndexToDelete")
F.Intrinsic.Control.EndIf
F.Data.Datatable.Create("dtIndexToDelete", True)
F.Data.Datatable.AddColumn("dtIndexToDelete", "INDEX", "String")

'Loop through dtFinal 
F.Intrinsic.Control.For(V.Local.iCtrl, 0, V.DataTable.dtParts.RowCount--, 1)
	'Find like part records and split
	F.Intrinsic.String.Build("PART = '{0}' AND DATE_DUE <> '1/1/1900'", V.DataTable.dtParts(V.Local.iCtrl).PART!FieldVal, V.Local.sSelect)
	
'	F.Intrinsic.Control.If(V.DataTable.dtParts(V.Local.iCtrl).PART!FieldValTrim, =, "RAWE")
'			Function.Intrinsic.Debug.InvokeDebugger
'			Function.Intrinsic.Debug.Stop
'	F.Intrinsic.Control.EndIf
	
	F.Data.Datatable.Select("dtFinal", V.Local.sSelect, V.Local.sRet)
	F.Intrinsic.String.Split(V.Local.sRet, "*!*", V.Local.sRet)
	
	F.Intrinsic.Control.If(V.Local.sRet, !=, "***NORETURN***")
		'Retrieve part's QTY_REQUIRED
		F.Intrinsic.String.Build("select QTY_REQUIRED from V_INVENTORY_MSTR where PART = '{0}'", V.DataTable.dtParts(V.Local.iCtrl).PART!FieldVal, V.Local.sSql)
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSql, V.Local.fRequirements)
		
		'Reverse loop through like part records
		F.Intrinsic.Control.For(V.Local.iCtrl2, V.Local.sRet.UBound, 0, -1)
			'QTY_ONHAND + QTY_ORDER - QTY_REQUIRED
			F.Intrinsic.Math.Add(V.DataTable.DtFinal(V.Local.sRet(V.Local.iCtrl2)).QTY_ONHAND!FieldVal, V.DataTable.DtFinal(V.Local.sRet(V.Local.iCtrl2)).QTY_ORDER!FieldVal, V.Local.fTotal)
			F.Intrinsic.Math.Sub(V.Local.fTotal, V.Local.fRequirements, V.Local.fTotal)
			
			'If result > 0, delete row from dtFinal unless its the final row containing the current part in the loop
			F.Intrinsic.Control.If(V.Local.fTotal, >, 0, AND, V.Local.iCtrl2, !=, 0)
				F.Data.Datatable.AddRow("dtIndexToDelete", "INDEX", V.Local.sRet(V.Local.iCtrl2))
				'F.Data.Datatable.DeleteRow("dtFinal", V.Local.sRet(V.Local.iCtrl2))
			F.Intrinsic.Control.Else
				F.Intrinsic.Control.ExitFor(V.Local.iCtrl2)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Next(V.Local.iCtrl2)
		
		'Create dtIndexToDelete dv, send to string and split 
		F.Data.DataView.Create("dtIndexToDelete", "dvIndexToDelete")
		F.Data.DataView.ToString("dtIndexToDelete", "dvIndexToDelete", "INDEX", "$!$", "*!*", V.Local.sIndexes)
		F.Intrinsic.String.Split(V.Local.sIndexes, "*!*", V.Local.sIndexes)
		
		'Reverse loop through indexes to delete from dtFinal
		F.Intrinsic.Control.For(V.Local.iCtrl3, V.Local.sIndexes.UBound, 0, -1)
			F.Data.Datatable.DeleteRow("dtFinal", V.Local.sIndexes(V.Local.iCtrl3))
		F.Intrinsic.Control.Next(V.Local.iCtrl3)
		
		'Close dv and delete all rows from dtIndexToDelete
		F.Data.DataView.Close("dtIndexToDelete", "dvIndexToDelete")
		F.Data.Datatable.DeleteRow("dtIndexToDelete")
		
	F.Intrinsic.Control.EndIf
	
F.Intrinsic.Control.Next(V.Local.iCtrl)



Program.Sub.ReorderQtyFillsRequirements.End

'AT modification 5/27/2022: Load and format new gridview from dtToDashboard datatable
Program.Sub.LoadNewPTS.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare

V.Local.iVisibleIndex.Declare(Long)
V.Local.sBinValues.Declare(String)

Gui.frmPO.GsGCPO.AddGridViewFromDataTable("gvPONew","dtToDashboard")

'Gui.frmPO.GsGCPO.Icon(V.Global.sGsGCIcon)
Gui.frmPO.GsGCPO.SuspendLayout()
Gui.frmPO.GsGCPO.SetGridViewProperty("gvPONew","MultiSelect",True)
Gui.frmPO.GsGCPO.SetGridViewProperty("gvPONew","AllowSort",True)
Gui.frmPO.GsGCPO.SetGridViewProperty("gvPONew","AllowFilter",True)
Gui.frmPO.GsGCPO.SetGridViewProperty("gvPONew","ShowGroupPanel",True)
Gui.frmPO.GsGCPO.SetGridViewProperty("gvPONew","Enableappearanceoddrow",True)
Gui.frmPO.GsGCPO.SetGridViewProperty("gvPONew","OptionsFindAlwaysVisible",True)
Gui.frmPO.GsGCPO.SetGridViewProperty("gvPONew","OptionsViewShowAutoFilterRow",True)
Gui.frmPO.GsGCPO.SetGridViewProperty("gvPONew","OptionsViewColumnAutoWidth",False)
Gui.frmPO.GsGCPO.SetGridViewProperty("gvPONew","AllowColumnResizing",True)

'Set column captions
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","SELECT","Caption","Select")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Date_Due","Caption","Due Date")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PART","Caption","Part")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","LOCATION","Caption","Loc")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","DESCRIPTION","Caption","Description")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Vendor","Caption","Vendor")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NAME_VENDOR","Caption","Vendor Name")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PL","Caption","PL")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","CODE_SORT","Caption","Sort Code")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BuyerCode","Caption","Buyer Code")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BuyerName","Caption","Buyer Name")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","TIME_MATERIAL_LEAD","Caption","Lead Time")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","FACTOR_CONVERSION","Caption","Conversion Factor")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ONHAND","Caption","On Hand Qty")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ORDER","Caption","Order Qty")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ONORDER_PO","Caption","On Order PO")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_REORDER","Caption","Reorder Pt")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","IN_QUALITY","Caption","In Quality")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","UM","Caption","UM")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","UMPurch","Caption","Purchase UM")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NetQty","Caption","Net Qty")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Status","Caption","Status")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Cost","Caption","Cost")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_COMMITTED","Caption","Committed")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ISSUED","Caption","Issued Quantity")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Purchase","Caption","Purchase")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NOTES","Caption","Notes")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","GlAcct","Caption","GL Acct")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","MFG_PART","Caption","Mfg Part")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","MFG_NAME","Caption","Mfg Name")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","POLineNum","Caption","PO Line Number")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BALANCE","Caption","Balance")

'Set Visible indexes
V.Local.iVisibleIndex.Set(-1)

Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","SELECT","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Date_Due","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PART","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","LOCATION","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","DESCRIPTION","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Vendor","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NAME_VENDOR","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PL","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","CODE_SORT","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BuyerCode","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BuyerName","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","TIME_MATERIAL_LEAD","VisibleIndex", V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","FACTOR_CONVERSION","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ONHAND","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ORDER","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ONORDER_PO","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_REORDER","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","IN_QUALITY","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Purchase","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NetQty","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BALANCE","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Status","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Cost","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","UM","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","UMPurch","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_COMMITTED","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ISSUED","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NOTES","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","GlAcct","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","MFG_PART","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","MFG_NAME","VisibleIndex",V.Local.iVisibleIndex.++)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","POLineNum","VisibleIndex",V.Local.iVisibleIndex.++)

'Set allow edit
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","SELECT","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Date_Due","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PART","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","LOCATION","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","DESCRIPTION","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Vendor","AllowEdit",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NAME_VENDOR","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PL","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","CODE_SORT","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BuyerCode","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BuyerName","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","TIME_MATERIAL_LEAD","AllowEdit", False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","FACTOR_CONVERSION","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ONHAND","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ORDER","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ONORDER_PO","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_REORDER","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","IN_QUALITY","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Purchase","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NetQty","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BALANCE","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Status","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Cost","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","UM","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","UMPurch","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_COMMITTED","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ISSUED","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NOTES","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","GlAcct","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","MFG_PART","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","MFG_NAME","AllowEdit",False)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","POLineNum","AllowEdit",False)

'Set read only
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","SELECT","ReadOnly",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Date_Due","ReadOnly",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Purchase","ReadOnly",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Cost","ReadOnly",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Vendor","ReadOnly",False)

'Set header font bold
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","SELECT","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Date_Due","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PART","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","LOCATION","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","DESCRIPTION","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Vendor","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NAME_VENDOR","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PL","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","CODE_SORT","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BuyerCode","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BuyerName","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","TIME_MATERIAL_LEAD","HeaderFontBold", True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","FACTOR_CONVERSION","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ONHAND","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ORDER","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ONORDER_PO","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_REORDER","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","IN_QUALITY","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Purchase","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NetQty","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BALANCE","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Status","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Cost","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","UM","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","UMPurch","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_COMMITTED","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ISSUED","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NOTES","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","GlAcct","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","MFG_PART","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","MFG_NAME","HeaderFontBold",True)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","POLineNum","HeaderFontBold",True)

'Set Colummn Widths
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PART","MaxWidth",130)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PART","MinWidth",130)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","DESCRIPTION","MinWidth",180)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","DESCRIPTION","MaxWidth",180)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","LOCATION","MinWidth",50)
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","LOCATION","MaxWidth",50)


'Set header alignment
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","SELECT","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Date_Due","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PART","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","LOCATION","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","DESCRIPTION","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Vendor","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NAME_VENDOR","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PL","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","CODE_SORT","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BuyerCode","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BuyerName","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","TIME_MATERIAL_LEAD","HeaderHAlignment", "Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","FACTOR_CONVERSION","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ONHAND","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ORDER","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ONORDER_PO","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","UM","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","UMPurch","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_REORDER","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","IN_QUALITY","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Purchase","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NetQty","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","BALANCE","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Status","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Cost","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_COMMITTED","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","QTY_ISSUED","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","NOTES","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","GlAcct","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","MFG_PART","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","MFG_NAME","HeaderHAlignment","Center")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","POLineNum","HeaderHAlignment","Center")

'Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew", "PART", v.Enum.ColumnPropertyNames!IsHyperlink, True)
'Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew", "LOCATION", v.Enum.ColumnPropertyNames!IsHyperlink, True)

Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","PART","CellForeColor","Blue")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","LOCATION","CellForeColor","Blue")
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","DESCRIPTION","CellForeColor","Blue")


'Show correct date format
Gui.frmPO.GsGCPO.SetColumnProperty("gvPONew","Date_Due",V.Enum.ColumnPropertyNames!DisplayCustomDateTime,"d")

'Set visible columns and show/hide availability
'GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","RUNNING_TOT", v.Enum.ColumnPropertyNames!Visible, False)
'GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","RUNNING_TOT", V.Enum.ColumnPropertyNames!AllowShowHide, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","PURCH_FLAG", v.Enum.ColumnPropertyNames!Visible, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","PURCH_FLAG", v.Enum.ColumnPropertyNames!AllowShowHide, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","NetQty", v.Enum.ColumnPropertyNames!Visible, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","NetQty", v.Enum.ColumnPropertyNames!AllowShowHide, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","NAME_VENDOR", v.Enum.ColumnPropertyNames!Visible, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","NAME_VENDOR", V.Enum.ColumnPropertyNames!AllowShowHide, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","PART_CHANGE", v.Enum.ColumnPropertyNames!Visible, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","PART_CHANGE", V.Enum.ColumnPropertyNames!AllowShowHide, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","Purchase1", v.Enum.ColumnPropertyNames!Visible, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","Purchase1", V.Enum.ColumnPropertyNames!AllowShowHide, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","NULL_CHECK", v.Enum.ColumnPropertyNames!Visible, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","NULL_CHECK", V.Enum.ColumnPropertyNames!AllowShowHide, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","SELECT", V.Enum.ColumnPropertyNames!AllowShowHide, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","REORDER_AMT", v.Enum.ColumnPropertyNames!Visible, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","REORDER_AMT", V.Enum.ColumnPropertyNames!AllowShowHide, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","CEILING", v.Enum.ColumnPropertyNames!Visible, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","CEILING", V.Enum.ColumnPropertyNames!AllowShowHide, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","Purchase2", v.Enum.ColumnPropertyNames!Visible, False)
GUI.frmPO.GsGCPO.SetColumnProperty("gvPONew","Purchase2", V.Enum.ColumnPropertyNames!AllowShowHide, False)


'Add Vendor dropdown list
F.ODBC.Connection!con.ExecuteAndReturn("select RTRIM(VENDOR) from V_VENDOR_MASTER order by VENDOR",V.Local.sBinValues)
F.Intrinsic.String.Replace(V.Local.sBinValues,"#$#","*!*",V.Local.sBinValues)
GUI.frmPO.GsGCPO.ColumnEdit("gvPONew","Vendor","Combobox",V.Local.sBinValues)

Gui.frmPO.GsGCPO.ResumeLayout()	
Gui.frmPO.GsGCPO.MainView("gvPONew")
v.Global.gvPONew.Set(True)

Gui.frmPO.lblStatus.Visible(False)
Gui.frmPO.progBarStatus.Visible(False)
f.Intrinsic.Control.CallSub("Deserialize","sItemControl","GsGCPO","sItemGrid","gvPONew")

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry

Program.Sub.LoadNewPTS.End

Program.Sub.LoadGvPODrop.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iNext.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sNextPart.Declare
	V.Local.sNextLoc.Declare
	V.Local.sColor.Declare
	V.Local.sValues.Declare

	Gui.frmPO.GsGCPODrop.AddGridViewFromDataTable("gvPODrop","dtPODrop")
	Gui.frmPO.GsGCPODrop.Icon(V.Global.sGsGCIcon)
	Gui.frmPO.GsGCPODrop.SuspendLayout()
	Gui.frmPO.GsGCPODrop.SetGridViewProperty("gvPODrop","MultiSelect",True)
	Gui.frmPO.GsGCPODrop.SetGridViewProperty("gvPODrop","AllowSort",True)
	Gui.frmPO.GsGCPODrop.SetGridViewProperty("gvPODrop","AllowFilter",True)
	Gui.frmPO.GsGCPODrop.SetGridViewProperty("gvPODrop","ShowGroupPanel",True)
	Gui.frmPO.GsGCPODrop.SetGridViewProperty("gvPODrop","Enableappearanceoddrow",True)
	Gui.frmPO.GsGCPODrop.SetGridViewProperty("gvPODrop","OptionsFindAlwaysVisible",True)
	Gui.frmPO.GsGCPODrop.SetGridViewProperty("gvPODrop","OptionsViewShowAutoFilterRow",True)	
	
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Select","Visible",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Vendor","Visible",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","GLAcct","Visible",False)
	
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","POHistory","ShowCaption",False)
	
'	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Select","VisibleIndex","0")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PART","VisibleIndex","1")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LOCATION","VisibleIndex","2")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DESCRIPTION","VisibleIndex","3")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ORDER_NO","VisibleIndex","4")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","RECORD_NO","VisibleIndex","5")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","VendorName","VisibleIndex","6")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PL","VisibleIndex","7")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","SortCode","VisibleIndex","8")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LEADTIME","VisibleIndex","9")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OrderQty","VisibleIndex","10")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnHandQty","VisibleIndex","11")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnOrder","VisibleIndex","13")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ReOrderPt","VisibleIndex","14")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UM","VisibleIndex","15")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UMPurch","VisibleIndex","16")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Conversion","VisibleIndex","17")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PURCHASEDATE","VisibleIndex","18")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DATE_DUE","VisibleIndex","19")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Cost","VisibleIndex","20")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Purchase","VisibleIndex","21")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","POHistory","VisibleIndex","22")

	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Select","Caption","Select")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PART","Caption","Part")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LOCATION","Caption","Loc")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DESCRIPTION","Caption","Description")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","VendorName","Caption","Preferred Vendor")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PL","Caption","PL")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","SortCode","Caption","Sort Code")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LEADTIME","Caption","Lead Time")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OrderQty","Caption","Order Qty")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnHandQty","Caption","On Hand Qty")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnOrder","Caption","On Order")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ReOrderPt","Caption","ReOrder Pt")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UM","Caption","UM")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UMPurch","Caption","UM Purch")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Conversion","Caption","Conversion")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PURCHASEDATE","Caption","Purch. Date")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DATE_DUE","Caption","Due Date")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Cost","Caption","Cost")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Purchase","Caption","PO Quantity")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ORDER_NO","Caption","SO")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","RECORD_NO","Caption","SO Line")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","POHistory","Caption","PO History")

	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Select","MinWidth","50")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PART","MinWidth","140")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LOCATION","MinWidth","40")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DESCRIPTION","MinWidth","200")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","VendorName","MinWidth","200")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PL","MinWidth","35")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","SortCode","MinWidth","90")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LEADTIME","MinWidth","65")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OrderQty","MinWidth","85")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnHandQty","MinWidth","85")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnOrder","MinWidth","85")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ReOrderPt","MinWidth","85")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UM","MinWidth","55")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UMPurch","MinWidth","70")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Conversion","MinWidth","85")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PURCHASEDATE","MinWidth","85")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DATE_DUE","MinWidth","85")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Cost","MinWidth","85")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Purchase","MinWidth","85")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ORDER_NO","MinWidth","60")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","RECORD_NO","MinWidth","60")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","POHistory","MinWidth","60")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","GLAcct","MinWidth","60")
	
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Select","AllowEdit",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PART","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LOCATION","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DESCRIPTION","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Vendor","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","VendorName","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PL","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","SortCode","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LEADTIME","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OrderQty","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnHandQty","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnOrder","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ReOrderPt","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UM","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UMPurch","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Conversion","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PURCHASEDATE","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DATE_DUE","AllowEdit",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Cost","AllowEdit",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Purchase","AllowEdit",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ORDER_NO","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","RECORD_NO","AllowEdit",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","POHistory","AllowEdit",False)

	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Select","ReadOnly",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DATE_DUE","ReadOnly",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Cost","ReadOnly",False)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Purchase","ReadOnly",False)

	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Select","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PART","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LOCATION","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DESCRIPTION","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","VendorName","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PL","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","SortCode","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LEADTIME","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OrderQty","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnHandQty","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnOrder","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ReOrderPt","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UM","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UMPurch","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Conversion","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PURCHASEDATE","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DATE_DUE","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Cost","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Purchase","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ORDER_NO","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","RECORD_NO","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","POHistory","HeaderFontBold",True)
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","GLAcct","HeaderFontBold",True)
	
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Select","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PART","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LOCATION","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DESCRIPTION","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","VendorName","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PL","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","SortCode","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LEADTIME","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OrderQty","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnHandQty","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnOrder","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ReOrderPt","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UM","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UMPurch","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Conversion","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PURCHASEDATE","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DATE_DUE","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Cost","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Purchase","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ORDER_NO","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","RECORD_NO","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","POHistory","HeaderHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","GLAcct","HeaderHAlignment","Center")
	
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Select","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LOCATION","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","VendorName","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PL","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","SortCode","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LEADTIME","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UM","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","UMPurch","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Conversion","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PURCHASEDATE","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DATE_DUE","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ORDER_NO","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","RECORD_NO","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","POHistory","CellHAlignment","Center")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","GLAcct","CellHAlignment","Center")
	
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PART","CellForeColor","Blue")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","LOCATION","CellForeColor","Blue")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DESCRIPTION","CellForeColor","Blue")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","VendorName","CellForeColor","Blue")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ORDER_NO","CellForeColor","Blue")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","RECORD_NO","CellForeColor","Blue")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","POHistory","CellForeColor","White")

	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DATE_DUE","CellBackColor","LightYellow")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Cost","CellBackColor","LightYellow")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Purchase","CellBackColor","LightYellow")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","POHistory","CellBackColor","Gray")

	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OrderQty","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnHandQty","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","OnOrder","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","ReOrderPt","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Conversion","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Cost","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","Purchase","DisplayCustomNumeric","#,###,###,##0.00##")

	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","PURCHASEDATE","DisplayCustomDatetime","d")
	Gui.frmPO.GsGCPODrop.SetColumnProperty("gvPODrop","DATE_DUE","DisplayCustomDatetime","d")

	Gui.frmPO.GsGCPODrop.ResumeLayout()
	Gui.frmPO.GsGCPODrop.MainView("gvPODrop")
	v.Global.gvPODrop.Set(True)
	
	Gui.frmPO.lblStatus.Visible(False)
	Gui.frmPO.progBarStatus.Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGvPODrop.End

Program.Sub.GsGCPO_RowCellClick.Start
	F.Intrinsic.Control.Try
	
	V.Local.sError.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sFilter.Declare
	V.Local.sParams.Declare
	V.Local.sCaption.Declare
	V.Local.sGV.Declare
	V.Local.sDT.Declare
	V.Local.sSO.Declare
	V.Local.sVendor.Declare
	v.Local.sQty.Declare
	v.Local.bValue.Declare(Boolean)

	F.Intrinsic.Control.BlockEvents
	
	F.Intrinsic.Control.SelectCase(V.Screen.frmPO!tabPO.Tab)
		F.Intrinsic.Control.Case(0)
			V.Local.sGV.Set("gvPONew")
			V.Local.sDT.Set("dtToDashboard")
		F.Intrinsic.Control.Case(1)
			V.Local.sGV.Set("gvPODrop")
			V.Local.sDT.Set("dtPODrop")
		F.Intrinsic.Control.Case(2)
			V.Local.sGV.Set("gvReqs")
			V.Local.sDT.Set("dtReqs")
		F.Intrinsic.Control.Case(3)
			V.Local.sGV.Set("gvPJ")
			V.Local.sDT.Set("PJ")	
	F.Intrinsic.Control.EndSelect

	V.Global.sPart.Set("")
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.CaseAny("PART","LOCATION")	
			
			'Fill Demand, Supply and RFQ
			V.Global.sPart.Set(V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim)
			F.Intrinsic.Control.If(V.DataTable.[V.Local.sDT](V.Args.RowIndex).Location!FieldValTrim,=,"")
				F.Intrinsic.String.Build("Demand || Part: {0}",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim,V.Local.sCaption)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("Demand || Part: {0}	Loc: {1}",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).Location!FieldValTrim,V.Local.sCaption)
			F.Intrinsic.Control.EndIf
			Gui.frmPO.lblDemand.Caption(V.Local.sCaption)
			F.Intrinsic.Control.If(V.Screen.frmPO!tabPO.Tab,=,0,OR,V.Screen.frmPO!tabPO.Tab,=,2)
				F.Intrinsic.Control.CallSub(LoadDemand,"Part",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim,"Loc",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Location!FieldValTrim)
			F.Intrinsic.Control.Else
				F.Intrinsic.Control.CallSub(LoadDemandSO,"Part",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim,"Loc",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Location!FieldValTrim)
			F.Intrinsic.Control.EndIf
			'F.Intrinsic.Control.CallSub(LoadVendorQuote,"Part",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim,"Vendor",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Vendor!FieldValTrim)
			F.Intrinsic.Control.CallSub(LoadSupply,"Part",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim,"Loc",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Location!FieldValTrim)

		
		F.Intrinsic.Control.CaseAny("Description","DESCRIPTION")
			Gui.FrmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"PART",V.Args.RowIndex,V.Local.sPart)
			Gui.FrmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"LOCATION",V.Args.RowIndex,V.Local.sLoc)
			F.Intrinsic.String.Build("{0}!*!{1}!*!MR",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
			F.Global.General.CallWrapperASync(7200,V.Local.sParams)
			
		F.Intrinsic.Control.CaseAny("ORDER_NO","RECORD_NO")
			Gui.frmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"ORDER_NO",V.Args.RowIndex,V.Local.sSO)
			F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sSO,"O","*!*ZDR*!*",V.Local.sParams)
			F.Global.General.CallWrapperAsync(200000,V.Local.sParams)
		
		F.Intrinsic.Control.CaseAny("POHistory","POHISTORY")
			Gui.frmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"PART",V.Args.RowIndex,V.Local.sPart)
			Gui.frmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"LOCATION",V.Args.RowIndex,V.Local.sLoc)
			F.Intrinsic.String.Build("PO History (Part: {0} Loc: {1})",V.Local.sPart.Trim,V.Local.sLoc.Trim,V.Local.sCaption)
			Gui.frmHistory..Caption(V.Local.sCaption)
			F.Intrinsic.Control.CallSub(LoadPOHistory,"Part",V.Local.sPart,"Loc",V.Local.sLoc)
			
		F.Intrinsic.Control.CaseAny("VendorName","VENDORNAME")
			Gui.frmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"PART",V.Args.RowIndex,V.Local.sPart)
			Gui.frmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"LOCATION",V.Args.RowIndex,V.Local.sLoc)
			Gui.frmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"Purchase",V.Args.RowIndex,V.Local.sQty)
			Gui.frmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"Vendor",V.Args.RowIndex,V.Local.sVendor)
			V.Global.sPart.Set(V.Local.sPart)
			V.Global.sLoc.Set(V.Local.sLoc)
			V.Global.fQty.Set(V.Local.sQty)
			V.Global.sDt.Set(V.Local.sDT)
			V.Global.iRowIndex.Set(V.Args.RowIndex)
			F.Intrinsic.Control.If(V.Screen.frmPO!chkBrwVends.Value,=,0)
				Gui.frmPO.chkBrwVends.Value(0)
				gui.frmPO.GsGCVendQte.ContextMenuAttach("ctxVendQte")
				F.Intrinsic.String.Replace(V.Local.sPart,"'","''",V.Local.sPart)
				F.Intrinsic.Control.CallSub(GetVendorQuotes,"Part",V.Local.sPart,"Loc",V.Local.sLoc)
			F.Intrinsic.Control.Else
				Gui.frmPO.chkBrwVends.Value(1)
				F.Intrinsic.Control.CallSub(chkBrwVends_Click)
			F.Intrinsic.Control.EndIf
		
		'AT edit 6/17/2022: Add a SELECT case to set selection checkbox to true\false accordingly. Secondly, this case will also handle parts below reorder point which do not have job commitments but still need to be purchased to bring on-hand qty to or above reorder point
		F.Intrinsic.Control.CaseAny("Select","SELECT","SEL")
			
			v.Local.bValue.Set(v.DataTable.[V.Local.sDT](v.Args.RowIndex).[V.Args.Column]!FieldVal)
			f.Data.Datatable.SetValue(v.Local.sDT,v.Args.RowIndex,V.Args.Column,v.Local.bValue.Not)
			
			V.Local.sDateDue.Declare(String)
			'Get due date from current record
			V.Local.sDateDue.Set(V.DataTable.[V.Local.sDT](V.Args.RowIndex).Date_Due!FieldValTrim)
		
			'If due date is default date calcualte new due date with purchase qty
			F.Intrinsic.Control.If(V.Local.sDateDue, =, "1/1/1900")
				V.Local.iResult.Declare(Float)
				V.Local.iReOrderPt.Declare(Float)
				V.Local.iBalance.Declare(Float)
				V.Local.iReorderQty.Declare(Float)
				V.Local.iPurchaseQty.Declare(Float)
				V.Local.iLeadTime.Declare(Long)
				V.Local.dLeadDueDate.Declare(Date)
				V.Local.iNewBal.Declare(Float)
				
				'Capture needed values
				V.Local.iReorderPt.Set(V.DataTable.[V.Local.sDT](V.Args.RowIndex).QTY_REORDER!FieldValTrim)
				V.Local.iBalance.Set(V.DataTable.[V.Local.sDT](V.Args.RowIndex).BALANCE!FieldValTrim)
				V.Local.iReorderQty.Set(V.DataTable.[V.Local.sDT](V.Args.RowIndex).QTY_ORDER!FieldValTrim)
				V.Local.iLeadTime.Set(V.DataTable.[V.Local.sDT](V.Args.RowIndex).TIME_MATERIAL_LEAD!FieldValTrim)
				
				'Calculate purchase qty considering reorder point and order qty on part
				F.Intrinsic.Math.Sub(V.Local.iReorderPt, V.Local.iBalance, V.Local.iResult)
				
				'Account for cases of 0 order qty to avoid division by 0
				F.Intrinsic.Control.If(V.Local.iReorderQty, =, 0)
					V.Local.iReorderQty.Set(1)
				F.Intrinsic.Control.EndIf
				
				F.Intrinsic.Math.Div(V.Local.iResult, V.Local.iReorderQty, V.Local.iResult)
				F.Intrinsic.Math.Ceiling(V.Local.iResult, V.Local.iResult)
				F.Intrinsic.Math.Mult(V.Local.iReorderQty, V.Local.iResult, V.Local.iPurchaseQty)
				
				'Calculate due date based on part lead time
				F.Intrinsic.Date.DateAddWorkdays(V.Ambient.Date, V.Local.iLeadTime, V.Local.dLeadDueDate)
				
				'Set all new values to respective table columns
				F.Data.Datatable.SetValue(V.Local.sDT, V.Args.RowIndex, "Date_Due", V.Local.dLeadDueDate)
				F.Data.Datatable.SetValue("dtToDashboard", V.Args.RowIndex, "Purchase", V.Local.iPurchaseQty)
				
			F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCPO_RowCellClick.End

Program.Sub.chkBrwVends_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.Screen.frmPO!chkBrwVends.Value,=,0)
		V.Global.bVendQte.Set(True)
		gui.frmPO.GsGCVendQte.ContextMenuAttach("ctxVendQte")
		gui.frmPO.lblVendQte.Caption("Vendor Quotes")
		F.Intrinsic.Control.If(V.DataTable.dtGetVendQtes.Exists)
			gui.frmPO.GsGCVendQte.ClearRows("gvVendors")
			F.Data.DataTable.Close("dtGetVendQtes")
		F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.Else
		V.Global.bVendQte.Set(False)
		gui.frmPO.GsGCVendQte.ContextMenuAttach("ctxVendor")
		gui.frmPO.lblVendQte.Caption("Vendors")
		
		F.Intrinsic.Control.If(V.DataTable.dtGetVendQtes.Exists)
			F.Data.DataTable.Close("dtGetVendQtes")
		F.Intrinsic.Control.EndIf
	
		F.Data.DataTable.CreateFromSQL("dtGetVendQtes","con","Select Vendor,RTrim(Name_Vendor) As Name_Vendor From V_Vendor_Master Where Vendor <> '' Order By Name_Vendor;",True)
		
		gui.frmPO.GsGCVendQte.AddGridviewFromDatatable("gvVendors","dtGetVendQtes")
		gui.frmPO.GsGCVendQte.ResumeLayout()
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendors","MultiSelect",True)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendors","Editable",False)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendors","ReadOnly",True)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendors","AllowSort",True)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendors","AllowFilter",True)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendors","ShowGroupPanel",False)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendors","OptionsSelectionEnableAppearanceFocusedRow",False)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendors","OptionsFindAlwaysVisible",True)
		
		'VENDOR
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendors","VENDOR","Caption","Vendor No")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendors","VENDOR","MinWidth","75")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendors","VENDOR","MaxWidth","75")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendors","VENDOR","HeaderFontBold",True)
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendors","VENDOR","HeaderHAlignment","Center")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendors","VENDOR","CellHAlignment","Center")
		
		'NAME_VENDOR
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendors","NAME_VENDOR","Caption","Vendor Name")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendors","NAME_VENDOR","MinWidth","125")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendors","NAME_VENDOR","HeaderFontBold",True)
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendors","NAME_VENDOR","HeaderHAlignment","Left")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendors","NAME_VENDOR","CellHAlignment","Left")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendors","NAME_VENDOR","CellForeColor","Blue")
	
		gui.frmPO.GsGCVendQte.ResumeLayout()
		gui.frmPO.GsGCVendQte.MainView("gvVendors")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.chkBrwVends_Click.End

Program.Sub.LoadDemand.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.iCnt.Declare
	V.Local.sSQL.Declare
	V.Local.sPart.Declare
	v.Local.sRet.Declare
	v.Local.sOrder.Declare	
	
	F.Intrinsic.Control.If(V.DataTable.dtDemand.Exists)
		F.Data.DataTable.Close("dtDemand")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Replace(V.Args.Part,"'","''",V.Local.sPart)
	
	f.Intrinsic.Control.If(v.Global.bAtec.Not)
		F.Intrinsic.String.Build("Select 'Work Order' As Source,Job+'-'+Suffix As Record,Date_Due,Qty_Committed-Qty_Issued As Qty_Rem From V_Job_Commitments Where Part = '{0}' And Location = '{1}' UNION Select 'Sales Order' AS Source,Order_No+'-'+Left(Record_No,3) As Record,Date_Item_Prom As Date_Due,Qty_BO As Qty_Rem From V_Order_Lines Where Part = '{0}' And Location = '{1}' Order By Date_Due ASC;",V.Local.sPart,V.Args.Loc,V.Local.sSQL)		
	f.Intrinsic.Control.Else
		F.Intrinsic.String.Build("Select 'Work Order' As Source,Job+'-'+Suffix As Record,'' as DPAS,Date_Due,Qty_Committed-Qty_Issued As Qty_Rem From V_Job_Commitments Where Part = '{0}' And Location = '{1}' UNION Select 'Sales Order' AS Source,Order_No+'-'+Left(Record_No,3) As Record,'' as DPAS,Date_Item_Prom As Date_Due,Qty_BO As Qty_Rem From V_Order_Lines Where Part = '{0}' And Location = '{1}' Order By Date_Due ASC;",V.Local.sPart,V.Args.Loc,V.Local.sSQL)	
	f.Intrinsic.Control.EndIf
	
	F.Data.DataTable.CreateFromSQL("dtDemand","con",V.Local.sSQL,True)
	
	'For Atec
	f.Intrinsic.Control.If(v.Global.bAtec)
		f.Intrinsic.Control.For(v.Local.iCnt,0,v.DataTable.dtDemand.RowCount--,1)
			f.Intrinsic.Control.If(v.DataTable.dtDemand(v.Local.iCnt).Source!FieldValString,=,"Work Order")
				'Work Order link to Project with DPAS
				f.Intrinsic.String.Build("Select top 1 Project from Project_XRef where WO + '-' + WO_Suff = '{0}'",v.DataTable.dtDemand(v.Local.iCnt).Record!FieldValString,v.Local.sSQL)
				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
				f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")
					f.Intrinsic.String.Build("Select dpas_text from GCG_4857_DPAS_PROJ where Project = '{0}'",v.Local.sRet,v.Local.sSQL)
					f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)	
					f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")
						f.Data.DataTable.SetValue("dtDemand",v.Local.iCnt,"DPAS",v.Local.sRet)
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.ElseIf(v.DataTable.dtDemand(v.Local.iCnt).Source!FieldValString,=,"Sales Order")
				'Sales Order link to Project with DPAS
				v.Local.sOrder.Set(v.DataTable.dtDemand(v.Local.iCnt).Record!FieldValString)
				f.Intrinsic.String.Build("Select Top 1 Project from V_Order_header where Order_No =  '{0}'",v.Local.sOrder.left7,v.Local.sSQL)
				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)		
				f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")
					f.Intrinsic.String.Build("Select dpas_text from GCG_4857_DPAS_PROJ where Project = '{0}'",v.Local.sRet,v.Local.sSQL)
					f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)	
					f.Intrinsic.Control.If(v.Local.sRet.Trim,<>,"")
						f.Data.DataTable.SetValue("dtDemand",v.Local.iCnt,"DPAS",v.Local.sRet)
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.iCnt)	
	f.Intrinsic.Control.EndIf	
	
	Gui.frmPO.GsGCDemand.AddGridViewFromDataTable("gvDemand","dtDemand")
	Gui.frmPO.GsGCDemand.ResumeLayout()
	
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","MultiSelect",True)
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","Editable",False)
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","ReadOnly",True)
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","AllowSort",True)
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","AllowFilter",True)
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","ShowGroupPanel",True)
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","OptionsSelectionEnableAppearanceFocusedRow",False)
	
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Record","ShowCaption",False)
	
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Source","Caption","Source")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Record","Caption","Record")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Date_Due","Caption","Due Date")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Qty_Rem","Caption","Rem Qty")

	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Source","MinWidth","65")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Record","MinWidth","65")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Date_Due","MinWidth","85")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Qty_Rem","MinWidth","85")	

	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Source","HeaderFontBold",True)
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Record","HeaderFontBold",True)
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Date_Due","HeaderFontBold",True)
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Qty_Rem","HeaderFontBold",True)
	'For Atec
	f.Intrinsic.Control.If(v.Global.bAtec)
		Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","DPAS","HeaderFontBold",True)	
		Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","DPAS","MinWidth","65")
	f.Intrinsic.Control.EndIf	

	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Source","HeaderHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Record","HeaderHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Date_Due","HeaderHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Qty_Rem","HeaderHAlignment","Center")

	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Source","CellHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Record","CellHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Date_Due","CellHAlignment","Center")
	
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Record","CellForeColor","Blue")

	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Qty_Rem","DisplayCustomNumeric","#,###,###,##0.00##")

	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Date_Due","DisplayCustomDatetime","d")

	Gui.frmPO.GsGCDemand.ResumeLayout()
	Gui.frmPO.GsGCDemand.MainView("gvDemand")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDemand.End

Program.Sub.LoadDemandSO.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare
	V.Local.sSQL2.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtDemand.Exists)
		F.Data.DataTable.Close("dtDemand")
	F.Intrinsic.Control.EndIf
	
	'Tab 1 PO SO is deleted	
'	F.Intrinsic.Control.If(V.Screen.frmPO!tabPO.Tab,=,1)
'		F.Intrinsic.String.Build("Select '' As Plus,A.Order_No,Left(A.Record_No,3) As SOLine,Record_No As Record_No2,A.Qty_BO,A.Date_Item_Prom From V_Order_Lines A Left Join V_Sales_Ord_Com B On A.Order_No = B.Order_No And A.Record_No = B.Order_Line And B.Seq <> '000' Where A.Line_Type <> 'D' And A.Part = '{0}' And A.Location = '{1}';",V.Args.Part,V.Args.Loc,V.Local.sSQL)
'		F.Intrinsic.String.Build("Select PO,PO_Line,A.Order_No,A.Order_Line From V_Sales_Ord_Com A Join V_Order_Lines B On A.Order_No = B.Order_No And A.Order_Line = B.Record_No Where A.Part = '{0}' And A.Loc = '{1}';",V.Args.Part,V.Args.Loc,V.Local.sSQL2)

	'Now Tab 2 become Tab 1
	F.Intrinsic.Control.If(V.Screen.frmPO!tabPO.Tab,=,1)
		F.Intrinsic.String.Build("Select '' As Plus,A.Order_No,Left(A.Record_No,3) As SOLine,Record_No As Record_No2,A.Qty_BO,A.Date_Item_Prom From V_Order_Lines A Left Join V_PO_Drop_Ship B On A.Order_No = B.Order_No And A.Record_No = B.Order_Line Where A.Line_Type = 'D' And A.Part = '{0}' And A.Location = '{1}';",V.Args.Part,V.Args.Loc,V.Local.sSQL)
		F.Intrinsic.String.Build("Select PO,PO_Line,A.Order_No,A.Order_Line From V_PO_Drop_Ship A Join V_Order_Lines B On A.Order_No = B.Order_No And A.Order_Line = B.Record_No Where A.Part = '{0}' And A.Loc = '{1}';",V.Args.Part,V.Args.Loc,V.Local.sSQL2)
	F.Intrinsic.Control.EndIf
	F.Data.DataTable.CreateFromSQL("dtDemand","con",V.Local.sSQL,True)
	F.Data.DataView.Create("dtDemand","dvDemand")
	F.Data.DataTable.CreateFromSQL("dtDemand$dtPO","con",V.Local.sSQL2,True)
	F.Data.DataTable.AddRelation("dtDemand","Order_No*!*Record_No2","dtDemand$dtPO","Order_No*!*Order_Line")
	
	Gui.frmPO.GsGCDemand.AddGridviewFromDataview("gvDemand","dtDemand","dvDemand")
	Gui.frmPO.GsGCDemand.ResumeLayout()
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","MultiSelect",True)
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","Editable",False)
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","ReadOnly",True)
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","AllowSort",True)
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","AllowFilter",True)
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","ShowGroupPanel",True)
	Gui.frmPO.GsGCDemand.SetGridViewProperty("gvDemand","OptionsSelectionEnableAppearanceFocusedRow",False)
	
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Record_No2","Visible",False)
	
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Plus","ShowCaption",False)
	
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Order_No","Caption","SO")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","SOLine","Caption","Line")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Date_Item_Prom","Caption","Due Date")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Qty_BO","Caption","Rem Qty")

	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Plus","MinWidth","1")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Order_No","MinWidth","65")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","SOLine","MinWidth","35")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Date_Item_Prom","MinWidth","85")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Qty_BO","MinWidth","85")

	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Order_No","HeaderFontBold",True)
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","SOLine","HeaderFontBold",True)
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Date_Item_Prom","HeaderFontBold",True)
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Qty_BO","HeaderFontBold",True)

	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Order_No","HeaderHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","SOLine","HeaderHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Date_Item_Prom","HeaderHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Qty_BO","HeaderHAlignment","Center")

	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Order_No","CellHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","SOLine","CellHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Date_Item_Prom","CellHAlignment","Center")
	
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Order_No","CellForeColor","Blue")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","SOLine","CellForeColor","Blue")

	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Qty_BO","DisplayCustomNumeric","#,###,###,##0.00##")

	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Date_Item_Prom","DisplayCustomDatetime","d")

	Gui.frmPO.GsGCDemand.ResumeLayout()
	Gui.frmPO.GsGCDemand.MainView("gvDemand")
	
	'SubTable
	F.Data.DataView.Create("dtDemand$dtPO","dvPO")
	Gui.frmPO.GsGCDemand.AddGridviewFromDataview("gvDemand","dtDemand","dvPO")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Order_No","Visible",False)
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","Order_Line","Visible",False)
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","PO","Caption","PO")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","PO_Line","Caption","Line")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","PO","MinWidth","85")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","PO_Line","MinWidth","85")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","PO","HeaderFontBold",True)
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","PO_Line","HeaderFontBold",True)	
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","PO","HeaderHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","PO_Line","HeaderHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","PO","CellHAlignment","Center")
	Gui.frmPO.GsGCDemand.SetColumnProperty("gvDemand","PO_Line","CellHAlignment","Center")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDemandSO.End

Program.Sub.LoadVendorQuote.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare
	V.Local.sCaption.Declare
	V.Local.sPart.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtVendQte.Exists)
		F.Data.DataTable.Close("dtVendQte")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.DataTable.dtVendQteLines.Exists)
		F.Data.DataTable.Close("dtVendQteLines")
'		gui.frmPO.GsGCVendQte.ClearRows("gvVendQte")
		gui.frmPO.lblVendQte.Caption("Vendor Quotes")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Replace(V.Args.Part,"'","''",V.Local.sPart)
	F.Intrinsic.String.Build("Select Top 1 Part,Seq,A.Vendor,B.Name_Vendor,Quote_Date,Expiration_Date,RFQ_Received,Add_Date,Add_By From V_Vend_Qte_Header A Left Join V_Vendor_Master B On A.Vendor = B.Vendor Where Part = '{0}' And Expiration_Date >= CurDate() And A.Vendor = '{1}' Order By Expiration_Date Desc;",V.Local.sPart,V.Args.Vendor,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtVendQte","con",V.Local.sSQL,True)
	
	F.Intrinsic.Control.If(V.DataTable.dtVendQte.RowCount,<>,0)
		F.Intrinsic.String.Build("Vendor Quotes || {0}({1}) || Exp Date:{2}",V.DataTable.dtVendQte(0).Name_Vendor!FieldValTrim,V.DataTable.dtVendQte(0).Vendor!FieldValTrim,V.DataTable.dtVendQte(0).Expiration_Date!FieldVal,V.Local.sCaption)
		gui.frmPO.lblVendQte.Caption(V.Local.sCaption)
		
		F.Intrinsic.String.Build("Select Line,Quantity,Unit_Price From Vend_Qte_Lines Where Part = '{0}' And Seq = '{1}' Order By Line;",V.Local.sPart,V.DataTable.dtVendQte(0).Seq!FieldVal,V.Local.sSQL)
		F.Data.DataTable.CreateFromSQL("dtVendQteLines","con",V.Local.sSQL,True)
		
		gui.frmPO.GsGCVendQte.AddGridViewFromDataTable("gvVendQte","dtVendQteLines")
		gui.frmPO.GsGCVendQte.ResumeLayout()
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","MultiSelect",True)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","Editable",False)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","ReadOnly",True)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","AllowSort",True)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","AllowFilter",True)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","ShowGroupPanel",True)
		gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","OptionsSelectionEnableAppearanceFocusedRow",False)
		
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Line","Caption","Line")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Quantity","Caption","Quantity")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Unit_Price","Caption","Unit Price")
	
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Line","MinWidth","65")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Quantity","MinWidth","35")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Unit_Price","MinWidth","85")
	
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Line","HeaderFontBold",True)
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Quantity","HeaderFontBold",True)
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Unit_Price","HeaderFontBold",True)
	
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Line","HeaderHAlignment","Center")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Quantity","HeaderHAlignment","Center")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Unit_Price","HeaderHAlignment","Center")
	
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Line","CellHAlignment","Center")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Quantity","CellHAlignment","Center")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Unit_Price","CellHAlignment","Center")
	
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Quantity","DisplayCustomNumeric","#,###,###,##0.00##")
		gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Unit_Price","DisplayCustomNumeric","#,###,###,##0.00##")
	
		gui.frmPO.GsGCVendQte.ResumeLayout()
		gui.frmPO.GsGCVendQte.MainView("gvVendQte")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadVendorQuote.End

Program.Sub.LoadSupply.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare
	V.Local.sSQL2.Declare
	V.Local.sPart.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtSupply.Exists)
		F.Data.DataTable.Close("dtSupply")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Replace(V.Args.Part,"'","''",V.Local.sPart)
	F.Intrinsic.String.Build("Select Purchase_Order+'-'+Left(Record_No,3) As PO,Date_Due_Line As Date_Due,Qty_Order-Qty_Received As Qty_Rem From V_PO_Lines Where Part = '{0}' And Location = '{1}' And Flag_Recv_Close <> 'Y' Order By Date_Due_Line Asc;",V.Local.sPart,V.Args.Loc,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtSupply","con",V.Local.sSQL,True)
	F.Data.DataView.Create("dtSupply","dvSupply")
	
	Gui.frmPO.GsGCSupply.AddGridviewFromDataview("gvSupply","dtSupply","dvSupply")
	Gui.frmPO.GsGCSupply.ResumeLayout()
	Gui.frmPO.GsGCSupply.SetGridViewProperty("gvSupply","MultiSelect",True)
	Gui.frmPO.GsGCSupply.SetGridViewProperty("gvSupply","Editable",False)
	Gui.frmPO.GsGCSupply.SetGridViewProperty("gvSupply","ReadOnly",True)
	Gui.frmPO.GsGCSupply.SetGridViewProperty("gvSupply","AllowSort",True)
	Gui.frmPO.GsGCSupply.SetGridViewProperty("gvSupply","AllowFilter",True)
	Gui.frmPO.GsGCSupply.SetGridViewProperty("gvSupply","ShowGroupPanel",True)
	Gui.frmPO.GsGCSupply.SetGridViewProperty("gvSupply","OptionsSelectionEnableAppearanceFocusedRow",False)
	
	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","PO","Caption","PO")
	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","Date_Due","Caption","Due Date")
	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","Qty_Rem","Caption","Rem Qty")

	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","PO","MinWidth","65")
	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","Date_Due","MinWidth","85")
	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","Qty_Rem","MinWidth","85")

	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","PO","HeaderFontBold",True)
	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","Date_Due","HeaderFontBold",True)
	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","Qty_Rem","HeaderFontBold",True)

	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","PO","HeaderHAlignment","Center")
	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","Date_Due","HeaderHAlignment","Center")
	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","Qty_Rem","HeaderHAlignment","Center")

	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","PO","CellHAlignment","Center")
	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","Date_Due","CellHAlignment","Center")
	
	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","PO","CellForeColor","Blue")

	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","Qty_Rem","DisplayCustomNumeric","#,###,###,##0.00##")

	Gui.frmPO.GsGCSupply.SetColumnProperty("gvSupply","Date_Due","DisplayCustomDatetime","d")

	Gui.frmPO.GsGCSupply.ResumeLayout()
	Gui.frmPO.GsGCSupply.MainView("gvSupply")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadSupply.End

Program.Sub.GetVendorQuotes.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare
	V.Local.sSQL2.Declare
	V.Local.sCaption.Declare
	V.Local.iCnt.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtGetVendQtes.Exists)
		F.Data.DataTable.Close("dtGetVendQtes")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("Select '' As Plus,A.Part,A.Vendor,RTrim(B.Name_Vendor) As Name_Vendor,A.Seq,A.Quote_Date,A.Expiration_Date From V_Vend_Qte_Header A Left Join V_Vendor_Master B On A.Vendor = B.Vendor Where Part = '{0}' Order By Expiration_Date;",V.Args.Part,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtGetVendQtes","con",V.Local.sSQL,True)
	F.Data.DataView.Create("dtGetVendQtes","dvGetVendQtes")
	
	F.Intrinsic.String.Build("Select Part,Seq,Line,Quantity,Unit_Price From V_Vend_Qte_Lines Where Part = '{0}' Order By Seq,Line;",V.Args.Part,V.Local.sSQL2)
	F.Data.DataTable.CreateFromSQL("dtGetVendQtes$dtGetVendQtesLines","con",V.Local.sSQL2,True)

	F.Data.DataTable.AddRelation("dtGetVendQtes","Part*!*Seq","dtGetVendQtes$dtGetVendQtesLines","Part*!*Seq")
	
	F.Intrinsic.String.Build("Vendor Quotes || Part: {0}",V.Global.sPart.Trim,V.Local.sCaption)
	gui.frmPO.lblVendQte.Caption(V.Local.sCaption)
	
	gui.frmPO.GsGCVendQte.AddGridviewFromDataview("gvVendQte","dtGetVendQtes","dvGetVendQtes")
	gui.frmPO.GsGCVendQte.ResumeLayout()
	gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","MultiSelect",True)
	gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","Editable",False)
	gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","ReadOnly",True)
	gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","AllowSort",True)
	gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","AllowFilter",True)
	gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","ShowGroupPanel",True)
	gui.frmPO.GsGCVendQte.SetGridViewProperty("gvVendQte","OptionsSelectionEnableAppearanceFocusedRow",False)
		
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Part","Visible",False)
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Vendor","Visible",False)
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Seq","Visible",False)
	
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Plus","ShowCaption",False)
	
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Part","Caption","Part")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Vendor","Caption","Vendor No")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Name_Vendor","Caption","Vendor")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Seq","Caption","Seq")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Quote_Date","Caption","Quoted")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Expiration_Date","Caption","Expiration")

	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Part","MinWidth","45")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Vendor","MinWidth","45")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Name_Vendor","MinWidth","150")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Seq","MinWidth","45")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Quote_Date","MinWidth","65")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Expiration_Date","MinWidth","65")

	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Part","HeaderFontBold",True)
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Vendor","HeaderFontBold",True)
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Name_Vendor","HeaderFontBold",True)
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Seq","HeaderFontBold",True)
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Quote_Date","HeaderFontBold",True)
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Expiration_Date","HeaderFontBold",True)

	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Part","HeaderHAlignment","Center")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Vendor","HeaderHAlignment","Center")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Name_Vendor","HeaderHAlignment","Center")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Seq","HeaderHAlignment","Center")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Quote_Date","HeaderHAlignment","Center")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Expiration_Date","HeaderHAlignment","Center")

	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Part","CellHAlignment","Center")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Vendor","CellHAlignment","Center")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Name_Vendor","CellHAlignment","Center")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Seq","CellHAlignment","Center")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Quote_Date","CellHAlignment","Center")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Expiration_Date","CellHAlignment","Center")
	
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Vendor","CellForeColor","Blue")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Name_Vendor","CellForeColor","Blue")
	
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Quote_Date","DisplayCustomDatetime","d")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQte","Expiration_Date","DisplayCustomDatetime","d")
	
	gui.frmPO.GsGCVendQte.ResumeLayout()
	gui.frmPO.GsGCVendQte.MainView("gvVendQte")
	
	'SubTable
	F.Data.DataView.Create("dtGetVendQtes$dtGetVendQtesLines","dvGetVendQtesLines")
	gui.frmPO.GsGCVendQte.AddGridviewFromDataview("gvVendQteLines","dtGetVendQtes","dvGetVendQtesLines")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Part","Visible",False)
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Seq","Visible",False)
	
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Line","Caption","Line")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Quantity","Caption","Qty")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Unit_Price","Caption","Unit Price")
	
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Line","MinWidth","45")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Quantity","MinWidth","85")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Unit_Price","MinWidth","85")
	
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Line","HeaderFontBold",True)
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Quantity","HeaderFontBold",True)
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Unit_Price","HeaderFontBold",True)
	
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Line","HeaderHAlignment","Center")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Quantity","HeaderHAlignment","Center")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Unit_Price","HeaderHAlignment","Center")
	
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Line","CellHAlignment","Center")
	
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Quantity","DisplayCustomNumeric","#,###,###,##0.00")
	gui.frmPO.GsGCVendQte.SetColumnProperty("gvVendQteLines","Unit_Price","DisplayCustomNumeric","#,###,###,##0.00")
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtGetVendQtes.RowCount--,1)
		gui.frmPO.GsGCVendQte.ExpandMasterRow("gvVendQte",V.Local.iCnt)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.Control.CatchWhen(122000)
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.GetVendorQuotes.End

Program.Sub.LoadGVMRP.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sCaption.Declare
	V.Local.fOnHand.Declare
	V.Local.sExp.Declare
	V.Local.sValue.Declare
	V.Local.sSQL.Declare
	V.Local.sRet.Declare
	V.Local.sPart.Declare
	V.Local.sLoc.Declare

	F.Intrinsic.String.Replace(V.Args.Part,"''","'",V.Local.sPart)
	F.Intrinsic.String.Build("Part : {0}",V.Local.sPart,V.Local.sCaption)
	Gui.frmMRP.lblPart.Caption(V.Local.sCaption)
	F.Intrinsic.String.Replace(V.Args.Loc,"''","'",V.Local.sLoc)
	F.Intrinsic.String.Build("Loc : {0}",V.Local.sLoc,V.Local.sCaption)
	Gui.frmMRP.lblLoc.Caption(V.Local.sCaption)

	F.Intrinsic.String.Build("SELECT QTY_ORDER,QTY_REORDER FROM V_INVENTORY_MSTR WHERE PART = '{0}' AND LOCATION = '{1}';",V.Args.Part,V.Args.Loc,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sRet)
	F.Intrinsic.String.Split(V.Local.sRet,"*!*",V.Local.sRet)

	F.Intrinsic.String.Format(V.Local.sRet(0),"#,###,###,##0.00##",V.Local.sValue)
	F.Intrinsic.String.Build("Order Qty : {0}",V.Local.sValue,V.Local.sCaption)
	Gui.frmMRP.lblOrderQty.Caption(V.Local.sCaption)
	F.Intrinsic.String.Format(V.Local.sRet(1),"#,###,###,##0.00##",V.Local.sValue)
	F.Intrinsic.String.Build("Reorder Point : {0}",V.Local.sValue,V.Local.sCaption)
	Gui.frmMRP.lblROP.Caption(V.Local.sCaption)

	F.Intrinsic.Math.Add(V.DataView.dtMRP!dvMRP(0).CurOnHand!FieldValFloat,V.DataView.dtMRP!dvMRP(0).QUANTITY!FieldValFloat,V.Local.fOnHand)
	F.Intrinsic.String.Format(V.Local.fOnHand,"#,###,###,##0.00##",V.Local.sValue)
	F.Intrinsic.String.Build("Initial On Hand Qty : {0}",V.Local.sValue,V.Local.sCaption)
	Gui.frmMRP.lblCurOnHand.Caption(V.Local.sCaption)

	Gui.frmMRP.GsGCMRP.AddGridViewFromDataView("gvMRP","dtMRP","dvMRP")
	Gui.frmMRP.GsGCMRP.SuspendLayout()
	Gui.frmMRP.GsGCMRP.SetGridViewProperty("gvMRP","MultiSelect",True)
	Gui.frmMRP.GsGCMRP.SetGridViewProperty("gvMRP","AllowSort",False)
	Gui.frmMRP.GsGCMRP.SetGridViewProperty("gvMRP","AllowFilter",True)
	Gui.frmMRP.GsGCMRP.SetGridViewProperty("gvMRP","Editable",False)
	Gui.frmMRP.GsGCMRP.SetGridViewProperty("gvMRP","ReadOnly",True)
	Gui.frmMRP.GsGCMRP.SetGridViewProperty("gvMRP","OptionsDetailShowDetailTabs",False)
	Gui.frmMRP.GsGCMRP.SetGridViewProperty("gvMRP","OptionsViewShowGroupPanel",False)

	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","PART","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","LOCATION","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","JOB","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","SUFFIX","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","SEQUENCE","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","Description","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","PL","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","SortCode","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","LeadTime","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","CurOnHand2","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","Vendor","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","OrderQty","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","OnHandQty","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","ReqdQty","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","NetAvail","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","OnOrder","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","ReOrderPt","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","UM","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","UMPurch","Visible",False)
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","Conversion","Visible",False)

	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","SOURCE","VisibleIndex","0")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","DATE_DUE","VisibleIndex","1")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","QUANTITY","VisibleIndex","2")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","CurOnHand","VisibleIndex","3")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","Purchase","VisibleIndex","4")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","PostOnHand","VisibleIndex","5")

	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","SOURCE","Caption","Source ")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","DATE_DUE","Caption","Due Date")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","QUANTITY","Caption","Quantity ")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","CurOnHand","Caption","Current On Hand")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","Purchase","Caption","Proposed PO Amt.")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","PostOnHand","Caption","On Hand After PO")

	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","SOURCE","HeaderHAlignment","Center")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","DATE_DUE","HeaderHAlignment","Center")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","QUANTITY","HeaderHAlignment","Far")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","CurOnHand","HeaderHAlignment","Far")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","Purchase","HeaderHAlignment","Far")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","PostOnHand","HeaderHAlignment","Far")

	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","SOURCE","CellHAlignment","Center")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","DATE_DUE","CellHAlignment","Center")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","QUANTITY","CellHAlignment","Far")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","CurOnHand","CellHAlignment","Far")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","Purchase","CellHAlignment","Far")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","PostOnHand","CellHAlignment","Far")

	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","QUANTITY","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","CurOnHand","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","Purchase","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","PostOnHand","DisplayCustomNumeric","#,###,###,##0.00##")

	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","SOURCE","CellBackColor","WhiteSmoke")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","DATE_DUE","CellBackColor","WhiteSmoke")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","QUANTITY","CellBackColor","WhiteSmoke")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","CurOnHand","CellBackColor","WhiteSmoke")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","Purchase","CellBackColor","WhiteSmoke")
	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","PostOnHand","CellBackColor","WhiteSmoke")

	Gui.frmMRP.GsGCMRP.SetColumnProperty("gvMRP","DATE_DUE","DisplayCustomDatetime","d")

	Gui.frmMRP.GsGCMRP.ResumeLayout()
	Gui.frmMRP.GsGCMRP.MainView("gvMRP")

	F.Data.DataView.Close("dtMRP","dvMRP")
	Gui.frmMRP..Show
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGVMRP.End

Program.Sub.frmMRP_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmMRP..Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.frmMRP_UnLoad.End

Program.Sub.frmHistory_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmHistory..Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry

Program.Sub.frmHistory_UnLoad.End

Program.Sub.GsGCHistory_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sParams.Declare
	
	F.Intrinsic.Control.If(v.Args.Column,=,"Purchase_Order")
		F.Intrinsic.String.Build("V!*!{0}!*!",V.Args.CellValue,V.Local.sParams)
		F.Global.General.CallWrapperAsync(175200,V.Local.sParams)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCHistory_RowCellClick.End

Program.Sub.LoadPOHistory.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	
	F.Intrinsic.Control.If(v.DataTable.dtHist.Exists)
		F.Data.DataTable.Close("dtHist")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("Select A.Purchase_Order,Left(A.PO_Line,3) As PO_Line,B.Name_Vendor,A.Buyer,A.Qty_Order,A.Qty_Recd_Not_Insp,A.Qty_Received,A.Qty_Reject,A.Qty_Order - A.Qty_Received as Remaining,A.Cost,A.Date_PO,A.Date_Due,A.Date_Received,A.UM_Inventory,A.Product_Line,A.Job,A.Suffix,RTrim(A.GL_Account) As GL_Account,A.Receiver_No From V_PO_History A Left Join V_Vendor_Master B ON A.Vendor = B.Vendor Where A.Part = '{0}' and A.Location = '{1}' Order By A.Date_Received Desc,A.PO_TIME Desc;",V.Args.Part,V.Args.Loc,v.Local.sSQL)
	
	F.Data.DataTable.CreateFromSQL("dtHist","con",V.Local.sSQL,true)		
	
	F.Intrinsic.Control.CallSub(LoadGvHistory)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadPOHistory.End

Program.Sub.LoadGvHistory.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sTemp.Declare
	
	Gui.frmHistory.GsGCHistory.AddGridviewFromDataTable("gvHist","dtHist")
	Gui.frmHistory.GsGCHistory.SuspendLayout()
	Gui.frmHistory.GsGCHistory.SetGridviewProperty("gvHist","MultiSelect",True)
	Gui.frmHistory.GsGCHistory.SetGridviewProperty("gvHist","Editable",False)
	Gui.frmHistory.GsGCHistory.SetGridviewProperty("gvHist","AllowSort",True)
	Gui.frmHistory.GsGCHistory.SetGridviewProperty("gvHist","AllowFilter",True)
	Gui.frmHistory.GsGCHistory.setGridViewProperty("gvHist","OptionsDetailShowDetailTabs",False)
	Gui.frmHistory.GsGCHistory.SetGridViewProperty("gvHist","OptionsMenuShowAutoFilterRowItem",False)
	Gui.frmHistory.GsGCHistory.SetGridviewProperty("gvHist","OptionsViewShowGroupPanel",True)
	Gui.frmHistory.GsGCHistory.SetGridViewProperty("gvHist","EnableAppearanceOddRow",True)
	
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Purchase_Order","Caption","PO Number")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","PO_Line","Caption","PO Line")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Name_Vendor","Caption","Vendor")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Buyer","Caption","Buyer")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Order","Caption","Order Qty")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Recd_Not_Insp","Caption","Not Insp")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Received","Caption","Received")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Reject","Caption","Rejected")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Remaining","Caption","Open")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Cost","Caption","Unit Cost")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_PO","Caption","Order Date")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_Due","Caption","Due Date")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_Received","Caption","Received Date")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","UM_Inventory","Caption","UM Inv")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Product_Line","Caption","PL")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Job","Caption","Job")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Suffix","Caption","Suffix")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","GL_Account","Caption","GL Account")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Receiver_No","Caption","Receiver Number")
	
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Purchase_Order","MinWidth","80")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","PO_Line","MinWidth","50")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Name_Vendor","MinWidth","180")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Buyer","MinWidth","55")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Order","MinWidth","80")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Recd_Not_Insp","MinWidth","80")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Received","MinWidth","80")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Reject","MinWidth","80")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Remaining","MinWidth","80")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Cost","MinWidth","80")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_PO","MinWidth","80")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_Due","MinWidth","80")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_Received","MinWidth","95")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","UM_Inventory","MinWidth","65")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Product_Line","MinWidth","35")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Job","MinWidth","80")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Suffix","MinWidth","80")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","GL_Account","MinWidth","85")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Receiver_No","MinWidth","120")
	
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Purchase_Order","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","PO_Line","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Name_Vendor","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Buyer","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Order","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Recd_Not_Insp","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Received","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Reject","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Remaining","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Cost","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_PO","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_Due","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_Received","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","UM_Inventory","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Product_Line","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Job","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Suffix","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","GL_Account","HeaderFontBold",True)
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Receiver_No","HeaderFontBold",True)
	
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Purchase_Order","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","PO_Line","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Name_Vendor","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Buyer","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Order","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Recd_Not_Insp","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Received","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Reject","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Remaining","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Cost","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_PO","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_Due","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_Received","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","UM_Inventory","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Product_Line","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Job","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Suffix","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","GL_Account","HeaderHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Receiver_No","HeaderHAlignment","Center")
	
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Purchase_Order","CellHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","PO_Line","CellHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Buyer","CellHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","UM_Inventory","CellHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Product_Line","CellHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Receiver_No","CellHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_PO","CellHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_Due","CellHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_Received","CellHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Job","CellHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Suffix","CellHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","GL_Account","CellHAlignment","Center")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Receiver_No","CellHAlignment","Center")
	
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_PO","DisplayCustomDateTime","d")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_Due","DisplayCustomDateTime","d")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Date_Received","DisplayCustomDateTime","d")
	
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Order","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Recd_Not_Insp","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Received","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Qty_Reject","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Remaining","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmHistory.GsGCHistory.SetColumnProperty("gvHist","Cost","DisplayCustomNumeric","#,###,###,##0.00")
	
	Gui.frmHistory.GsGCHistory.ResumeLayout()
	Gui.frmHistory.GsGCHistory.MainView("gvHist")
	
	Gui.frmHistory..Show
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGvHistory.End

Program.Sub.cmdNewVendQte_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iRet.Declare
	
	F.Global.General.LaunchMenuTask(271,2,V.Local.iRet)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.cmdNewVendQte_Click.End

Program.Sub.cmdViewVendQte_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.Global.sPart,<>,"")
		F.Global.General.CallWrapperAsync(175000,V.Global.sPart)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.cmdViewVendQte_Click.End

Program.Sub.chkCutoff_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.Screen.frmPO!chkCutoff.Value,=,1)
		Gui.frmPO.dtpCutoff.Enabled(True)
	F.Intrinsic.Control.Else
		Gui.frmPO.dtpCutoff.Enabled(False)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.chkCutoff_Click.End

Program.Sub.Hyperlinks.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sRecord.Declare
	V.Local.sPO.Declare
	V.Local.sSO.Declare
	V.Local.sParams.Declare
	
	F.Intrinsic.Control.BlockEvents
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.CaseAny("Record","RECORD")
			F.Intrinsic.Control.If(V.DataTable.dtDemand(V.Args.RowIndex).Source!FieldVal,=,"Work Order")
				F.Intrinsic.String.Split(V.DataTable.dtDemand(V.Args.RowIndex).Record!FieldVal,"-",V.Local.sRecord)
				F.Intrinsic.String.ConcatCallWrapperArgs("7",V.Local.sRecord(0).Trim,V.Local.sRecord(1).Trim,"A",V.Local.sParams)
				F.Global.General.CallWrapperSync(450000,V.Local.sParams)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Split(V.DataTable.dtDemand(V.Args.RowIndex).Record!FieldVal,"-",V.Local.sRecord)
				F.Intrinsic.String.ConcatCallWrapperArgs(V.Local.sRecord(0).Trim,"V","*!*ZDR*!*",V.Local.sParams)
				F.Global.General.CallWrapperAsync(200000,V.Local.sParams)
			F.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.Case("PO")
			F.Intrinsic.String.Split(V.DataTable.dtSupply(V.Args.RowIndex).PO!FieldVal,"-",V.Local.sRecord)
			F.Intrinsic.String.ConcatCallWrapperArgs("V",V.Local.sRecord(0).Trim,"",V.Local.sParams)
			F.Global.General.CallWrapperASync(175200,V.Local.sParams)
		
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.Hyperlinks.End
Program.Sub.GsGCVendQte_RowCellClick.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCallType.Declare
	V.Local.iReturnCode.Declare
	V.Local.fReturnCost.Declare
	V.Local.sReturnVendor.Declare
	V.Local.sVendor.Declare
	v.Local.sRows.Declare
	v.Local.iCnt.Declare
	v.Local.sPart.Declare
	v.Local.sFilter.Declare
	v.Local.iIndex.Declare
	v.Local.sQty.Declare
	v.Local.fQty.Declare
	v.Local.sDT.Declare
	v.Local.sGV.Declare
	v.Local.sGSGrid.Declare
	
	f.Intrinsic.Control.If(v.Screen.frmPO!tabPO.Tab,=,3)
		f.Intrinsic.Control.If(v.Global.sDt,=,"")
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
		
		gui.frmPO.gsPJ.GetSelectedRows("gvPJ",v.Local.sRows)
		f.Intrinsic.Control.If(v.Local.sRows.Trim,=,"")
			f.Intrinsic.UI.Msgbox("Please highlight a row in thie Purchase to Jobs grid.","Attention")
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf
		f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)

		F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
			F.Intrinsic.Control.CaseAny("NAME_VENDOR","VENDOR")
				gui.frmPO..Enabled(False)
				f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sRows.UBound,1)
					v.Local.iIndex.Set(v.Local.sRows(v.Local.iCnt))
					v.Local.sPart.Set(v.DataTable.PJ(v.local.iIndex).Part!FieldValString)
					f.Data.DataTable.SetValue("PJ",v.local.iIndex,"Vendor",V.DataTable.dtGetVendQtes(V.Args.RowIndex).Vendor!FieldVal,"Name_Vendor",V.DataTable.dtGetVendQtes(V.Args.RowIndex).Name_Vendor!FieldVal)		
					F.Intrinsic.Control.If(V.Global.bVendQte)
						F.Intrinsic.Control.CallSub(LoadVendorQuote,"Part",v.Local.sPart,"Vendor",V.DataTable.dtGetVendQtes(V.Args.RowIndex).Vendor!FieldVal)
					F.Intrinsic.Control.EndIf
					
					f.Intrinsic.Control.If(V.Screen.frmPO!ddlCost.Text,=,"Zero Cost")
						v.Local.fReturnCost.Set(0)
					f.Intrinsic.Control.Else				
						'CostType
						F.Intrinsic.Control.If(V.Screen.frmPO!ddlCost.Text,=,"PO History Cost")
							F.Intrinsic.Control.SelectCase(V.DataTable.PJ(v.local.iIndex).Status!FieldVal)
								F.Intrinsic.Control.Case(0)
									V.Local.iCallType.Set(1)
									V.Local.sVendor.Set("")
								F.Intrinsic.Control.CaseAny(1,2)
									V.Local.iCallType.Set(3)
									V.Local.sVendor.Set("")
							F.Intrinsic.Control.EndSelect
						F.Intrinsic.Control.Else
							F.Intrinsic.Control.SelectCase(V.DataTable.PJ(v.local.iIndex).Status!FieldVal)
								F.Intrinsic.Control.Case(0)
									V.Local.iCallType.Set(1)
									V.Local.sVendor.Set("")
								F.Intrinsic.Control.Case(1)
									V.Local.iCallType.Set(2)
									V.Local.sVendor.Set(V.DataTable.dtGetVendQtes(V.Args.RowIndex).Vendor!FieldVal)
								F.Intrinsic.Control.Case(2)
									V.Local.iCallType.Set(3)
									V.Local.sVendor.Set("")
							F.Intrinsic.Control.EndSelect
						F.Intrinsic.Control.EndIf				
						'Cost
						F.Global.Callwrapper.New("LoadCost","Purchasing.GetPartPurchaseCost")
						F.Global.Callwrapper.SetProperty("LoadCost","CallType",V.Local.iCallType)
						F.Global.Callwrapper.SetProperty("LoadCost","Part",v.Local.sPart)
						F.Global.Callwrapper.SetProperty("LoadCost","Location",v.DataTable.PJ(v.local.iIndex).Location!FieldValString)
						F.Global.Callwrapper.SetProperty("LoadCost","Vendor",V.Local.sVendor)
						F.Global.Callwrapper.SetProperty("LoadCost","Quantity",v.DataTable.PJ(v.local.iIndex).Purchase!FieldValString)
						F.Global.CallWrapper.Run("LoadCost")
						'Returns
						F.Global.CallWrapper.GetProperty("LoadCost","ReturnCode",V.Local.iReturnCode)
						F.Global.CallWrapper.GetProperty("LoadCost","ReturnCost",V.Local.fReturnCost)
						F.Global.CallWrapper.GetProperty("LoadCost","ReturnVendor",V.Local.sReturnVendor)
					f.Intrinsic.Control.EndIf	
					
					'Set Buyers
					F.Data.DataTable.FillFromDictionary("PJ","dBuyerCode4PJ","Vendor","BuyerCode")
					F.Data.DataTable.FillFromDictionary("PJ","dBuyerName4PJ","BuyerCode","BuyerName")				
					
					'Set Value
					f.Intrinsic.String.Build("Part = '{0}'",v.Local.sPart,v.Local.sFilter)
					f.Data.DataView.Create("PJ","dvPJ",22,v.Local.sFilter,"")
					f.Data.DataView.SetValue("PJ","dvPJ",-1,"Vendor",V.DataTable.dtGetVendQtes(V.Args.RowIndex).Vendor!FieldVal,"Name_Vendor",V.DataTable.dtGetVendQtes(V.Args.RowIndex).Name_Vendor!FieldVal,"Cost",V.Local.fReturnCost)
					f.Data.DataView.Close("PJ","dvPJ")				
				
				f.Intrinsic.Control.Next(v.Local.iCnt)	
				gui.frmPO..Enabled(True)
		F.Intrinsic.Control.EndSelect	
	
	f.Intrinsic.Control.Else	
		f.Intrinsic.Control.SelectCase(v.Screen.frmPO!tabPO.Tab)
			f.Intrinsic.Control.Case(0)
				v.Local.sDT.Set("dtPO")
				v.Local.sGV.Set("gvPO")
				v.Local.sGSGrid.Set("GsGCPO")								
			f.Intrinsic.Control.Case(1)
				v.Local.sDT.Set("dtPODrop")
				v.Local.sGV.Set("gvPODrop")
				v.Local.sGSGrid.Set("GsGCPODrop")				
			f.Intrinsic.Control.Case(2)
				v.Local.sDT.Set("dtReqs")
				v.Local.sGV.Set("gvReqs")
				v.Local.sGSGrid.Set("GsGCReqs")							
		f.Intrinsic.Control.EndSelect
		gui.frmPO.[v.Local.sGSGrid].GetSelectedRows(v.Local.sGV,v.Local.sRows)
		F.Intrinsic.Control.If(v.Local.sRows.Trim,=,"")
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf		
		f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)	
		
		F.Intrinsic.Control.SelectCase(V.Args.Column)
			F.Intrinsic.Control.CaseAny("Name_Vendor","Vendor")
			
				f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sRows.UBound,1)				
					v.Local.iIndex.Set(v.Local.sRows(v.Local.iCnt))
					F.Data.DataTable.SetValue(v.Local.sDT,v.local.iIndex,"Vendor",V.DataTable.dtGetVendQtes(V.Args.RowIndex).Vendor!FieldVal,"VendorName",V.DataTable.dtGetVendQtes(V.Args.RowIndex).Name_Vendor!FieldVal)
					F.Intrinsic.Control.If(V.Global.bVendQte)
						F.Intrinsic.Control.CallSub(LoadVendorQuote,"Part",V.Global.sPart,"Vendor",V.DataTable.dtGetVendQtes(V.Args.RowIndex).Vendor!FieldVal)
					F.Intrinsic.Control.EndIf
					
					f.Intrinsic.Control.If(V.Screen.frmPO!ddlCost.Text,=,"Zero Cost")
						v.Local.fReturnCost.Set(0)
					f.Intrinsic.Control.Else
						
						gui.frmPO..Enabled(False)
						'CostType
						F.Intrinsic.Control.If(V.Screen.frmPO!ddlCost.Text,=,"PO History Cost")
							F.Intrinsic.Control.SelectCase(V.DataTable.[v.local.sDT](v.Local.iIndex).Status!FieldVal)
								F.Intrinsic.Control.Case(0)
									V.Local.iCallType.Set(1)
									V.Local.sVendor.Set("")
								F.Intrinsic.Control.CaseAny(1,2)
									V.Local.iCallType.Set(3)
									V.Local.sVendor.Set("")
							F.Intrinsic.Control.EndSelect
						F.Intrinsic.Control.Else
							F.Intrinsic.Control.SelectCase(V.DataTable.[v.local.sDT](v.Local.iIndex).Status!FieldVal)
								F.Intrinsic.Control.Case(0)
									V.Local.iCallType.Set(1)
									V.Local.sVendor.Set("")
								F.Intrinsic.Control.Case(1)
									V.Local.iCallType.Set(2)
									V.Local.sVendor.Set(V.DataTable.dtGetVendQtes(V.Args.RowIndex).Vendor!FieldVal)
								F.Intrinsic.Control.Case(2)
									V.Local.iCallType.Set(3)
									V.Local.sVendor.Set("")
							F.Intrinsic.Control.EndSelect
						F.Intrinsic.Control.EndIf				
						'Cost
						F.Global.Callwrapper.New("LoadCost","Purchasing.GetPartPurchaseCost")
						F.Global.Callwrapper.SetProperty("LoadCost","CallType",V.Local.iCallType)
						F.Global.Callwrapper.SetProperty("LoadCost","Part",v.DataTable.[v.local.sDT](v.local.iIndex).Part!FieldValString)
						F.Global.Callwrapper.SetProperty("LoadCost","Location",v.DataTable.[v.local.sDT](v.local.iIndex).Location!FieldValString)
						F.Global.Callwrapper.SetProperty("LoadCost","Vendor",V.Local.sVendor)
						v.Local.sQty.Set(v.DataTable.[v.local.sDT](v.local.iIndex).Purchase!FieldValString)
						v.Local.fQty.Set(v.Local.sQty)
						F.Global.Callwrapper.SetProperty("LoadCost","Quantity",v.Local.fQty)
						F.Global.CallWrapper.Run("LoadCost")
					
						'Returns
						F.Global.CallWrapper.GetProperty("LoadCost","ReturnCode",V.Local.iReturnCode)
						F.Global.CallWrapper.GetProperty("LoadCost","ReturnCost",V.Local.fReturnCost)
						F.Global.CallWrapper.GetProperty("LoadCost","ReturnVendor",V.Local.sReturnVendor)
							
						'Set Value
						F.Data.DataTable.SetValue(v.Local.sDT,v.Local.iIndex,"Cost",V.Local.fReturnCost)
						
						f.Intrinsic.Control.If(v.Screen.frmPO!tabPO.Tab,=,0)
							'Set Buyers
							F.Data.DataTable.FillFromDictionary("dtPO","dBuyerCode","Vendor","BuyerCode")
							F.Data.DataTable.FillFromDictionary("dtPO","dBuyerName","BuyerCode","BuyerName")						
						f.Intrinsic.Control.EndIf
						
						f.Intrinsic.Control.If(v.Screen.frmPO!tabPO.Tab,=,2)
							'Set Buyers
							F.Data.DataTable.FillFromDictionary("dtReqs","dBuyerCode","Vendor","Buyer")
							F.Data.DataTable.FillFromDictionary("dtReqs","dBuyerName","Buyer","Buyer_Name")						
						f.Intrinsic.Control.EndIf
					'EndIf Zero Cost
					f.Intrinsic.Control.EndIf
				f.Intrinsic.Control.Next(v.Local.iCnt)
				gui.frmPO..Enabled(True)
		F.Intrinsic.Control.EndSelect
		
	f.Intrinsic.Control.EndIf


	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCVendQte_RowCellClick.End
Program.Sub.LoadCost.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCallType.Declare
	V.Local.iCnt.Declare
	V.Local.iReturnCode.Declare
	V.Local.fReturnCost.Declare
	V.Local.sReturnVendor.Declare
	V.Local.sVendor.Declare
	v.Local.fReturnPurchase.Declare
	
	'1-Default
	'2-Vendor Quote
	'3-Purchase Order History
	
	F.Intrinsic.Control.If(V.Screen.frmPO!ddlCost.Text,=,"Zero Cost")
		f.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.dtPOFinal.Exists,=,False)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'PO Tab
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtPO.RowCount--,1)
		F.Intrinsic.Control.If(V.Screen.frmPO!ddlCost.Text,=,"PO History Cost")
			F.Intrinsic.Control.SelectCase(V.DataTable.dtPO(V.Local.iCnt).Status!FieldVal)
				F.Intrinsic.Control.Case(0)
					V.Local.iCallType.Set(1)
					V.Local.sVendor.Set("")
				F.Intrinsic.Control.CaseAny(1,2)
					V.Local.iCallType.Set(3)
					V.Local.sVendor.Set("")
			F.Intrinsic.Control.EndSelect
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.SelectCase(V.DataTable.dtPO(V.Local.iCnt).Status!FieldVal)
				F.Intrinsic.Control.Case(0)
					V.Local.iCallType.Set(1)
					V.Local.sVendor.Set("")
				F.Intrinsic.Control.Case(1)
					V.Local.iCallType.Set(2)
					V.Local.sVendor.Set(V.DataTable.dtPO(V.Local.iCnt).Vendor!FieldVal)
				F.Intrinsic.Control.Case(2)
					V.Local.iCallType.Set(3)
					V.Local.sVendor.Set("")
			F.Intrinsic.Control.EndSelect
		F.Intrinsic.Control.EndIf
		
		F.Global.Callwrapper.New("LoadCost","Purchasing.GetPartPurchaseCost")
		F.Global.Callwrapper.SetProperty("LoadCost","CallType",V.Local.iCallType)
		F.Global.Callwrapper.SetProperty("LoadCost","Part",V.DataTable.dtPO(V.Local.iCnt).Part!FieldVal)
		F.Global.Callwrapper.SetProperty("LoadCost","Location",V.DataTable.dtPO(V.Local.iCnt).Location!FieldVal)
		F.Global.Callwrapper.SetProperty("LoadCost","Vendor",V.Local.sVendor)
		F.Global.Callwrapper.SetProperty("LoadCost","Quantity",V.DataTable.dtPO(V.Local.iCnt).Purchase!FieldVal)
		F.Global.CallWrapper.Run("LoadCost")
		
		'Returns
		F.Global.CallWrapper.GetProperty("LoadCost","ReturnCode",V.Local.iReturnCode)
		F.Global.CallWrapper.GetProperty("LoadCost","ReturnCost",V.Local.fReturnCost)
		F.Global.CallWrapper.GetProperty("LoadCost","ReturnVendor",V.Local.sReturnVendor)
		
		'Set Value
		F.Data.DataTable.SetValue("dtPO",V.Local.iCnt,"Cost",V.Local.fReturnCost)
		
		'Apply conversion factor 10 09 2020
		f.Intrinsic.Control.If(V.DataTable.dtPO(V.Local.iCnt).Conversion!FieldVal,>,0)
			f.Intrinsic.Math.Div(V.DataTable.dtPO(V.Local.iCnt).Purchase!FieldVal,V.DataTable.dtPO(V.Local.iCnt).Conversion!FieldVal,v.Local.fReturnPurchase)
			F.Data.DataTable.SetValue("dtPO",V.Local.iCnt,"Purchase",V.Local.fReturnPurchase)			
		f.Intrinsic.Control.Else
			F.Data.DataTable.SetValue("dtPO",V.Local.iCnt,"UMpurch",V.DataTable.dtPO(V.Local.iCnt).UM!FieldVal)
		f.Intrinsic.Control.EndIf
					
		
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadCost.End

Program.Sub.GenerateEmail.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSelect.Declare
	V.Local.iCnt.Declare
	V.Local.iUserID.Declare
	V.Local.sSenderName.Declare
	V.Local.sSenderEmail.Declare
	V.Local.sParams.Declare
	V.Local.iBIRunID.Declare
	V.Local.iLogID.Declare
	V.Local.sAttach.Declare
	V.Local.sParamName.Declare
	V.Local.sParamVal.Declare
	V.Local.iRet.Declare
	V.Local.sRecipient.Declare
	V.Local.sRecipientEmail.Declare
	V.Local.sSubject.Declare
	V.Local.sBody.Declare
	V.Local.sDir.Declare
	V.Local.bFile.Declare
	V.Local.sSQL.Declare
	V.Local.sCallingProgram.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtEmails.Exists)
		F.Data.DataTable.Close("dtEmails")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("{0}\Orders",V.Caller.PluginsDir,V.Local.sDir)
	F.Intrinsic.File.CreateDir(V.Local.sDir)

	'Check Subject Txt File
	F.Intrinsic.String.Build("{0}\GAB_4163_Email_Subject_Custom.txt",V.Caller.GasDir,V.Local.sSubject)
	F.Intrinsic.File.Exists(V.Local.sSubject,V.Local.bFile)
	F.Intrinsic.Control.If(V.Local.bFile,=,False)
		F.Intrinsic.String.Build("{0}\GAB_4163_Email_Subject.txt",V.Caller.GasDir,V.Local.sSubject)
	F.Intrinsic.Control.EndIf
	
	'Check Body Txt File
	F.Intrinsic.String.Build("{0}\GAB_4163_Email_Body_Custom.txt",V.Caller.GasDir,V.Local.sBody)
	F.Intrinsic.File.Exists(V.Local.sBody,V.Local.bFile)
	F.Intrinsic.Control.If(V.Local.bFile,=,False)
		F.Intrinsic.String.Build("{0}\GAB_4163_Email_Body.txt",V.Caller.GasDir,V.Local.sBody)
	F.Intrinsic.Control.EndIf
	
	'F.Intrinsic.String.Build("Select A.Purchase_Order,RTrim(B.Name_Vendor) As Name_Vendor,Case When C.Name_Preferred <> '' Then RTrim(C.Name_Preferred)+' '+RTrim(C.Name_Last) Else RTrim(C.Name_Preferred)+' '+RTrim(C.Name_Last) End As Contact_Name,RTrim(C.Email1) As Contact_Email From V_PO_Header A Join V_Vendor_Master B On A.Vendor = B.Vendor Join Contact C On A.Vendor = C.Cust Where C.Pri_Cntct = 1 And A.Purchase_Order In ({0}) And C.Email1 <> '';",V.Args.EmailList,V.Local.sSQL)
	F.Intrinsic.String.Build("Select A.Purchase_Order,RTrim(B.Name_Vendor) As Name_Vendor,'' As Contact_Name,RTrim(C.Email) As Contact_Email From V_PO_Header A Join V_Vendor_Master B On A.Vendor = B.Vendor Join V_Vendor_Addl C On A.Vendor = C.Vendor Where A.Purchase_Order In ({0}) And C.Email <> '';",V.Args.EmailList,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtEmails","con",V.Local.sSQL,True)
	
	F.Global.Security.GetUserId(V.Caller.User,V.Caller.CompanyCode,V.Local.iUserID)
	F.Global.Security.GetFullName(V.Caller.User,V.Local.sSenderName)
	F.Global.Security.GetUserEmail(V.Caller.User,V.Local.sSenderEmail)
	F.Intrinsic.Control.If(V.Local.sSenderEmail,=,"")
		F.Intrinsic.UI.Msgbox("Error in email procedure. The GS User does not have an email address associated with it in User Security Maintenance.")
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(V.Screen.FrmPO!ddlEmail.Text,=,"Preview Email")
		F.Intrinsic.Control.If(V.DataTable.dtEmails.RowCount,=,0)
			'F.Data.DataTable.Close("dtEmails")
			'F.Intrinsic.String.Build("Select A.Purchase_Order,RTrim(B.Name_Vendor) As Name_Vendor,'' As Contact_Name,'' As Contact_Email From V_PO_Header A Join V_Vendor_Master B On A.Vendor = B.Vendor Where A.Purchase_Order In ({0});",V.Args.EmailList,V.Local.sSQL)
			F.Intrinsic.String.Build("Select A.Purchase_Order,RTrim(B.Name_Vendor) As Name_Vendor,'' As Contact_Name,RTrim(C.Email) As Contact_Email From V_PO_Header A Join V_Vendor_Master B On A.Vendor = B.Vendor Join V_Vendor_Addl C On A.Vendor = C.Vendor Where A.Purchase_Order In ({0}) And C.Email <> '';",V.Args.EmailList,V.Local.sSQL)
		F.Intrinsic.Control.EndIf
		F.Data.Datatable.AddColumn("dtEmails","SenderName",String,V.Local.sSenderName)
		F.Data.Datatable.AddColumn("dtEmails","SenderEmail",String,V.Local.sSenderEmail)
		'Subject
		F.Intrinsic.File.File2String(V.Local.sSubject,V.Local.sSubject)
		'Body
		F.Intrinsic.File.File2String(V.Local.sBody,V.Local.sBody)
		'Modify DataTable
		F.Data.Datatable.AddColumn("dtEmails","Subject",String,V.Local.sSubject)
		F.Data.Datatable.AddColumn("dtEmails","Body",String,V.Local.sBody)
		F.Data.Datatable.AddColumn("dtEmails","AttachmentFiles",String)
		F.Data.Datatable.AddColumn("dtEmails","Attachments",Boolean,False)
		F.Data.Datatable.AddColumn("dtEmails","Preview",String,"Preview")
		F.Intrinsic.Control.CallSub(LoadPreviewEmails)
		Gui.FrmPO.lblStatus.Visible(False)
		Gui.FrmPO.progBarStatus.Visible(False)
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
		
	F.Intrinsic.Control.If(V.DataTable.dtEmails.RowCount,<>,0)
		Gui.FrmPO.lblStatus.Caption("Sending Emails....")
		Gui.FrmPO.lblStatus.Visible(True)
		Gui.FrmPO.progBarStatus.Visible(True)
		Gui.FrmPO.tabPO.Enabled(False)
		Gui.FrmPO.progBarStatus.Min(0)
		F.Intrinsic.Control.If(V.Local.sSelect.UBound,<>,0)
			Gui.FrmPO.progBarStatus.Max(V.Local.sSelect.UBound)
		F.Intrinsic.Control.Else
			Gui.FrmPO.progBarStatus.Max(1)
		F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtEmails.RowCount--,1)
			Gui.FrmPO.progBarStatus.Value(V.Local.iCnt)
			F.Intrinsic.Control.If(V.DataTable.dtEmails(V.Local.iCnt).Contact_Email!FieldValTrim,<>,"")
				'Populate BI Table
				F.Intrinsic.String.Build("{0}!*!S!*! !*!N!*!N",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sParams)	
				F.Global.General.CallWrapperSyncBio(915000,V.Local.sParams)
				'Export File
				F.Global.BI.GetRunID(V.Local.iBIRunID)
				F.Global.BI.StartLogging(V.Local.iBIRunID,002801,-1,"",V.Local.iLogID)
				F.Intrinsic.String.Build("{0}\Orders\{1}.pdf",V.Caller.PluginsDir,V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sAttach)
				V.Local.sParamName.Set("Terminal*!*ReportID*!*UseVendorCurr*!*PRTCNFRM*!*PROGRAM*!*PRTHIST*!*QTYDEC")
				F.Intrinsic.String.Build("{0}*!*002801*!* *!* *!* *!* *!*{1}*!* *!*",V.Caller.Terminal,0,V.Local.sParamVal)
				F.Global.BI.RunReportPreProcessor(V.Local.iBIRUNID,V.Local.iLogID,V.Local.sParamName,V.Local.sParamVal,"",4,True,"",-1,"",0,V.Local.sAttach,"",V.Local.iRet)
				F.Global.BI.StopLogging(V.Local.iLogID)
				'Prepare Email
				F.Intrinsic.String.Replace(V.DataTable.dtEmails(V.Local.iCnt).Contact_Email!FieldValTrim,";",",",V.Local.sRecipientEmail)
				F.Intrinsic.String.Build("{0}*!*{0}",V.Local.sRecipientEmail,V.Local.sRecipient)
				F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sSenderEmail,V.Local.sSenderName,V.Local.sSenderEmail)
				F.Intrinsic.String.Build("{0}.pdf*!*{1}\Orders\",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Caller.PluginsDir,V.Local.sAttach)
				'Subject
				F.Intrinsic.String.Build("{0}\GAB_4163_Email_Subject.txt",V.Caller.GasDir,V.Local.sSubject)
				F.Intrinsic.File.File2String(V.Local.sSubject,V.Local.sSubject)
				F.Intrinsic.String.Replace(V.Local.sSubject,"%PO%",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sSubject)
				'Body
				F.Intrinsic.String.Build("{0}\GAB_4163_Email_Body.txt",V.Caller.GasDir,V.Local.sBody)
				F.Intrinsic.File.File2String(V.Local.sBody,V.Local.sBody)
				F.Intrinsic.String.Replace(V.Local.sBody,"%PO%",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sBody)
				F.Intrinsic.String.Replace(V.Local.sBody,"%USER%",V.Local.sSenderName,V.Local.sBody)
				'Calling Program
				F.Intrinsic.String.Build("Email PO-{0}",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sCallingProgram)
				'Send Email				
				F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,0,V.Local.sCallingProgram,V.Local.sSubject,V.Local.sSenderEmail,V.Local.sRecipient,V.Local.sBody,5,"",False,"","","","","","","",V.Local.sAttach,False)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf
	
	Gui.FrmPO.lblStatus.Visible(False)
	Gui.FrmPO.progBarStatus.Visible(False)
	Gui.FrmPO.tabPO.Enabled(True)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.GenerateEmail.End

Program.Sub.frmPrevEmail_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iRet.Declare
	
	F.Intrinsic.UI.Msgbox("Emails will not be sent out. Continue?","Continue?",4,V.Local.iRet)
	F.Intrinsic.Control.If(V.Local.iRet,=,6)
		Gui.frmPrevEmail..Visible(False)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.frmPrevEmail_UnLoad.End

Program.Sub.LoadPreviewEmails.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmPrevEmail.GsGCPrevEml.AddGridviewFromDatatable("gvEmails","dtEmails")
	Gui.frmPrevEmail.GsGCPrevEml.SuspendLayout()
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","MultiSelect",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","AllowSort",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","AllowFilter",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","Editable",False)
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","ReadOnly",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","ShowGroupPanel",False)
	Gui.frmPrevEmail.GsGCPrevEml.SetGridViewProperty("gvEmails","Enableappearanceoddrow",True)
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Subject","Visible",False)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Body","Visible",False)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderName","Visible",False)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderEmail","Visible",False)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","AttachmentFiles","Visible",False)
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","ShowCaption",False)
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Purchase_Order","Caption","PO")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Name_Vendor","Caption","Vendor")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Name","Caption","Name")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Email","Caption","Email")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderName","Caption","Sender Name")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderEmail","Caption","Sender Email")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Subject","Caption","Subject")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Body","Caption","Body")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","AttachmentFiles","Caption","Files")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Attachments","Caption","Attachments")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","Caption","Preview")
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Purchase_Order","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Name_Vendor","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Name","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Email","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderName","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderEmail","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Subject","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","AttachmentFiles","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Attachments","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Body","MinWidth","85")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","MinWidth","85")
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Purchase_Order","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Name_Vendor","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Name","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Email","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderName","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderEmail","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Subject","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","AttachmentFiles","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Attachments","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Body","HeaderFontBold",True)
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","HeaderFontBold",True)
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Purchase_Order","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Name_Vendor","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Name","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Contact_Email","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderName","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","SenderEmail","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Subject","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","AttachmentFiles","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Attachments","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Body","HeaderHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","HeaderHAlignment","Center")
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Purchase_Order","CellHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","AttachmentFiles","CellHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Attachments","CellHAlignment","Center")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","CellHAlignment","Center")
	
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","CellBackColor","Gray")
	Gui.frmPrevEmail.GsGCPrevEml.SetColumnProperty("gvEmails","Preview","CellForeColor","White")
	
	Gui.frmPrevEmail.GsGCPrevEml.ResumeLayout()
	Gui.frmPrevEmail.GsGCPrevEml.MainView("gvEmails")
	
	Gui.frmPrevEmail..Show

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadPreviewEmails.End

Program.Sub.GsGCPrevEml_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFilePath.Declare
	V.Local.sSubject.Declare
	V.Local.sBody.Declare
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.Case("Preview")
			Gui.frmEmail..Caption("Edit Email")
			Gui.frmEmail.txtSName.Text(V.DataTable.dtEmails(V.Args.RowIndex).SenderName!FieldValTrim)
			Gui.frmEmail.txtSEmail.Text(V.DataTable.dtEmails(V.Args.RowIndex).SenderEmail!FieldValTrim)
			Gui.frmEmail.txtRName.Text(V.DataTable.dtEmails(V.Args.RowIndex).Contact_Name!FieldValTrim)
			Gui.frmEmail.txtREmail.Text(V.DataTable.dtEmails(V.Args.RowIndex).Contact_Email!FieldValTrim)
			F.Intrinsic.String.Replace(V.DataTable.dtEmails(V.Args.RowIndex).Subject!FieldValTrim,"%PO%",V.DataTable.dtEmails(V.Args.RowIndex).Purchase_Order!FieldValTrim,V.Local.sSubject)
			Gui.frmEmail.txtSubject.Text(V.Local.sSubject)
			F.Intrinsic.String.Replace(V.DataTable.dtEmails(V.Args.RowIndex).Body!FieldValTrim,"%PO%",V.DataTable.dtEmails(V.Args.RowIndex).Purchase_Order!FieldValTrim,V.Local.sBody)
			F.Intrinsic.String.Replace(V.Local.sBody,"%USER%",V.DataTable.dtEmails(V.Args.RowIndex).SenderName!FieldValTrim,V.Local.sBody)
			Gui.frmEmail.txtBody.Text(V.Local.sBody)
			Gui.frmEmail.txtAttach.Text(V.DataTable.dtEmails(V.Args.RowIndex).AttachmentFiles!FieldValTrim)
			Gui.frmEmail.txtRow.Text(V.Args.RowIndex)
			Gui.frmEmail..Show
			Gui.frmEmail.txtSName.SetFocus
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCPrevEml_RowCellClick.End

Program.Sub.cmdSend_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iCnt2.Declare
	V.Local.sSender.Declare
	V.Local.sRecipient.Declare
	V.Local.sRecipientEmail.Declare
	V.Local.sSubject.Declare
	V.Local.sBody.Declare
	V.Local.sAttachments.Declare
	V.Local.sFiles.Declare
	V.Local.sFilePath.Declare
	V.Local.sFileName.Declare
	V.Local.sParams.Declare
	V.Local.iBIRunID.Declare
	V.Local.iLogID.Declare
	V.Local.sParamName.Declare
	V.Local.sParamVal.Declare
	V.Local.iRet.Declare
	V.Local.sCallingProgram.Declare
	
	Gui.frmPrevEmail.lblStatus.Visible(True)
	Gui.frmPrevEmail.pbStatus.Visible(True)
	Gui.frmPrevEmail.pbStatus.Min(0)
	F.Intrinsic.Control.If(V.DataTable.dtEmails.RowCount,<>,0)
		Gui.frmPrevEmail.pbStatus.Max(V.DataTable.dtEmails.RowCount)
	F.Intrinsic.Control.Else
		Gui.frmPrevEmail.pbStatus.Max(100)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtEmails.RowCount--,1)
		Gui.frmPrevEmail.pbStatus.Value(V.Local.iCnt)
		F.Intrinsic.Control.If(V.DataTable.dtEmails(V.Local.iCnt).Contact_Email!FieldValTrim,<>,"")
			'Populate BI Table
			F.Intrinsic.String.Build("{0}!*!S!*! !*!N!*!N",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sParams)	
			F.Global.General.CallWrapperSyncBio(915000,V.Local.sParams)
			'Export File
			F.Global.BI.GetRunID(V.Local.iBIRunID)
			F.Global.BI.StartLogging(V.Local.iBIRunID,002801,-1,"",V.Local.iLogID)
			F.Intrinsic.String.Build("{0}\Orders\{1}.pdf",V.Caller.PluginsDir,V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sAttachments)
			V.Local.sParamName.Set("Terminal*!*ReportID*!*UseVendorCurr*!*PRTCNFRM*!*PROGRAM*!*PRTHIST*!*QTYDEC")
			F.Intrinsic.String.Build("{0}*!*002801*!* *!* *!* *!* *!*{1}*!* *!*",V.Caller.Terminal,0,V.Local.sParamVal)
			F.Global.BI.RunReportPreProcessor(V.Local.iBIRUNID,V.Local.iLogID,V.Local.sParamName,V.Local.sParamVal,"",4,True,"",-1,"",0,V.Local.sAttachments,"",V.Local.iRet)
			F.Global.BI.StopLogging(V.Local.iLogID)
			'Recipient
			F.Intrinsic.String.Replace(V.DataTable.dtEmails(V.Local.iCnt).Contact_Email!FieldValTrim,";",",",V.Local.sRecipientEmail)
			F.Intrinsic.String.Build("{0}*!*{1}",V.DataTable.dtEmails(V.Local.iCnt).Contact_Name!FieldValTrim,V.Local.sRecipientEmail,V.Local.sRecipient)
			'Sender
			F.Intrinsic.String.Build("{0}*!*{1}",V.DataTable.dtEmails(V.Local.iCnt).SenderEmail!FieldValTrim,V.DataTable.dtEmails(V.Local.iCnt).SenderName!FieldValTrim,V.Local.sSender)
			'PO Attachments
			F.Intrinsic.String.Build("{0}.pdf*!*{1}\Orders\",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Caller.PluginsDir,V.Local.sAttachments)
			'Additional Attachments
			F.Intrinsic.Control.If(V.DataTable.dtEmails(V.Local.iCnt).Attachments!FieldVal)
				F.Intrinsic.String.Split(V.DataTable.dtEmails(V.Local.iCnt).AttachmentFiles!FieldVal,V.Ambient.NewLine,V.Local.sFiles)
				F.Intrinsic.Control.For(V.Local.iCnt2,0,V.Local.sFiles.UBound,1)
					F.Intrinsic.String.Split(V.Local.sFiles(V.Local.iCnt2),"\",V.Local.sFileName)
					V.Local.sFileName.Set(V.Local.sFileName(V.Local.sFileName.UBound))
					F.Intrinsic.String.Replace(V.Local.sFiles(V.Local.iCnt2),V.Local.sFileName,"",V.Local.sFilePath)
					F.Intrinsic.String.Build("{0}@!@{1}*!*{2}",V.Local.sAttachments,V.Local.sFileName,V.Local.sFilePath,V.Local.sAttachments)
				F.Intrinsic.Control.Next(V.Local.iCnt2)
			F.Intrinsic.Control.EndIf
			'Subject
			F.Intrinsic.String.Replace(V.DataTable.dtEmails(V.Local.iCnt).Subject!FieldValTrim,"%PO%",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sSubject)
			'Body
			F.Intrinsic.String.Replace(V.DataTable.dtEmails(V.Local.iCnt).Body!FieldValTrim,"%PO%",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sBody)
			F.Intrinsic.String.Replace(V.Local.sBody,"%USER%",V.DataTable.dtEmails(V.Local.iCnt).SenderName!FieldValTrim,V.Local.sBody)
			'Calling Program
			F.Intrinsic.String.Build("Email PO-{0}",V.DataTable.dtEmails(V.Local.iCnt).Purchase_Order!FieldValTrim,V.Local.sCallingProgram)
			'Send Email	
			F.Global.Messaging.QueueMessage(V.Caller.CompanyCode,0,V.Local.sCallingProgram,V.Local.sSubject,V.Local.sSender,V.Local.sRecipient,V.Local.sBody,5,"",False,"","","","","","","",V.Local.sAttachments,False)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.Control.If(V.DataTable.dtEmails.RowCount,<>,0)
		Gui.frmPrevEmail.pbStatus.Value(V.DataTable.dtEmails.RowCount)
	F.Intrinsic.Control.Else
		Gui.frmPrevEmail.pbStatus.Value(100)
	F.Intrinsic.Control.EndIf
	
	Gui.frmPrevEmail.lblStatus.Visible(False)
	Gui.frmPrevEmail.pbStatus.Visible(False)
	Gui.frmPrevEmail..Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.cmdSend_Click.End

Program.Sub.frmEmail_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmEmail..Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.frmEmail_UnLoad.End

Program.Sub.cmdSavePreview_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sAttach.Declare
	V.Local.bAttach.Declare
	
	V.Local.sAttach.Set(V.Screen.frmEmail!txtAttach.Text)
	F.Intrinsic.Control.If(V.Local.sAttach.Trim,<>,"")
		V.Local.bAttach.Set(True)
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.SetValue("dtEmails",V.Screen.frmEmail!txtRow.Text,"SenderName",V.Screen.frmEmail!txtSName.Text,"SenderEmail",V.Screen.frmEmail!txtSEmail.Text,"Contact_Name",V.Screen.frmEmail!txtRName.Text,"Contact_Email",V.Screen.frmEmail!txtREmail.Text,"Subject",V.Screen.frmEmail!txtSubject.Text,"Body",V.Screen.frmEmail!txtBody.Text,"AttachmentFiles",V.Screen.frmEmail!txtAttach.Text,"Attachments",V.Local.bAttach)
	Gui.frmEmail..Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.cmdSavePreview_Click.End

Program.Sub.DragDrop.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.iCnt.Declare
	V.Local.sFiles.Declare
	V.Local.sAttach.Declare
	
	F.Intrinsic.String.Split(V.Args.Files,"*!*",V.Local.sFiles)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sFiles.UBound,1)
		F.Intrinsic.Control.If(V.Local.iCnt,=,0)
			V.Local.sAttach.Set(V.Local.sFiles(V.Local.iCnt))
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}{1}{2}",V.Local.sAttach,V.Ambient.NewLine,V.Local.sFiles(V.Local.iCnt),V.Local.sAttach)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.Control.If(V.Screen.frmEmail!txtAttach.Text,<>,"")
		F.Intrinsic.String.Build("{0}{1}{2}",V.Screen.frmEmail!txtAttach.Text,V.Ambient.NewLine,V.Local.sAttach,V.Local.sAttach)
	F.Intrinsic.Control.EndIf
	
	Gui.frmEmail.txtAttach.Text(V.Local.sAttach)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.DragDrop.End

Program.Sub.GetCompanyShipTo.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Data.DataTable.CreateFromSQL("dtCompany","con","Select NAME_COMPANY, ADDRESS1, ADDRESS2, CITY, STATE, CODE_ZIP, COUNTRY, COUNTY, ATTENTION From V_COMPANY;",True)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.GetCompanyShipTo.End

Program.Sub.RemoveExpiredNotes.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.ODBC.Connection!con.Execute("DELETE FROM GAB_4936_NOTES WHERE EXPIRE_DT <= CURDATE();")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.RemoveExpiredNotes.End

Program.Sub.MenuClickAdd.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iNID.Declare
	
	F.ODBC.Connection!con.ExecuteAndReturn("Select Max(NID) From GAB_4936_NOTES;",V.Local.iNID)
	F.Intrinsic.Math.Add(V.Local.iNID,1,V.Local.iNID)
	F.Data.DataTable.AddRow("dtNotes","NID",V.Local.iNID,"PART",V.Global.sPart2,"LOC",V.Global.sLoc2,"GSUSER",V.Caller.User,"CREATE_DT",V.Ambient.Now)
	F.Data.DataTable.SaveToDB("dtNotes","con","GAB_4936_NOTES","NID")
	F.Intrinsic.Control.CallSub(LoadDtNotes)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickAdd.End

Program.Sub.MenuClickDelete.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRow.Declare
	V.Local.sSQL.Declare
	
	Gui.frmNotes.GsGCNotes.GetSelectedRows("gvNotes",V.Local.iRow)
	F.Intrinsic.String.Build("Delete From GAB_4936_NOTES Where NID = {0};",V.DataTable.dtNotes(V.Local.iRow).NID!FieldVal,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	F.Data.DataTable.DeleteRow("dtNotes",V.Local.iRow)
	F.Intrinsic.Control.CallSub(LoadDtNotes)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickDelete.End

Program.Sub.LoadDtNotes.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare

	F.Intrinsic.Control.If(V.DataTable.dtNotes.Exists)
		F.Data.DataTable.Close("dtNotes")
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.String.Build("Select * From GAB_4936_NOTES Where Part = '{0}' And Loc = '{1}' Order By Create_DT Desc;",V.Global.sPart2,V.Global.sLoc2,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtNotes","con",V.Local.sSQL,True)
	
	F.Intrinsic.Control.CallSub(LoadGvNotes)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDtNotes.End

Program.Sub.LoadGvNotes.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.sColumns.Declare
	
	Gui.frmNotes.GsGCNotes.SuspendLayout()
	Gui.frmNotes.GsGCNotes.AddGridViewFromDataTable("gvNotes","dtNotes")
	Gui.frmNotes.GsGCNotes.Icon(V.Global.sGsGCIcon)
	Gui.frmNotes.GsGCNotes.SetGridViewProperty("gvNotes","MultiSelect",True)
	Gui.frmNotes.GsGCNotes.SetGridViewProperty("gvNotes","AllowSort",True)
	Gui.frmNotes.GsGCNotes.SetGridViewProperty("gvNotes","AllowFilter",True)
	Gui.frmNotes.GsGCNotes.SetGridViewProperty("gvNotes","OptionsDetailShowDetailTabs",False)
	Gui.frmNotes.GsGCNotes.SetGridViewProperty("gvNotes","OptionsViewShowGroupPanel",True)
	Gui.frmNotes.GsGCNotes.SetGridViewProperty("gvNotes","EnableAppearanceOddRow",True)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtNotes.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	'NID
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NID","Visible",False)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NID","Caption","NID")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NID","AllowEdit",False)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NID","ReadOnly",True)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NID","MinWidth","45")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NID","HeaderHAlignment","Center")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NID","CellHAlignment","Center")
	
	'PART
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","PART","Visible",False)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","PART","Caption","Part")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","PART","AllowEdit",False)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","PART","ReadOnly",True)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","PART","MinWidth","50")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","PART","HeaderHAlignment","Center")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","PART","CellHAlignment","Center")
	
	'LOC
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","LOC","Visible",False)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","LOC","Caption","Loc")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","LOC","AllowEdit",False)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","LOC","ReadOnly",True)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","LOC","MinWidth","50")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","LOC","HeaderHAlignment","Center")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","LOC","CellHAlignment","Center")
	
	'GSUSER
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","GSUSER","Caption","User")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","GSUSER","AllowEdit",False)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","GSUSER","ReadOnly",True)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","GSUSER","MinWidth","50")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","GSUSER","HeaderHAlignment","Center")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","GSUSER","CellHAlignment","Center")
	
	'CREATE_DT
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","CREATE_DT","Caption","Create Date")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","CREATE_DT","AllowEdit",False)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","CREATE_DT","ReadOnly",True)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","CREATE_DT","MinWidth","50")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","CREATE_DT","HeaderHAlignment","Center")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","CREATE_DT","CellHAlignment","Center")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","CREATE_DT","DisplayCustomDatetime","d")

	'NOTES
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NOTES","Caption","Notes")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NOTES","AllowEdit",True)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NOTES","ReadOnly",False)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NOTES","MinWidth","350")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NOTES","HeaderHAlignment","Center")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","EXPIRE_DT","CellHAlignment","Left")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NOTES","CellBackColor","LightYellow")
	
	'EXPIRE_DT
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","EXPIRE_DT","Caption","Expire Date")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","EXPIRE_DT","AllowEdit",True)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","EXPIRE_DT","ReadOnly",False)
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","EXPIRE_DT","MinWidth","50")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","EXPIRE_DT","HeaderHAlignment","Center")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","EXPIRE_DT","CellHAlignment","Center")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","EXPIRE_DT","DisplayCustomDatetime","d")
	Gui.frmNotes.GsGCNotes.SetColumnProperty("gvNotes","NOTES","CellBackColor","LightYellow")

	Gui.frmNotes.GsGCNotes.ResumeLayout()
	Gui.frmNotes.GsGCNotes.MainView("gvNotes")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGvNotes.End

Program.Sub.frmNotes_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	Gui.frmNotes..Visible(False)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.frmNotes_UnLoad.End

Program.Sub.GsGCNotes_CellValueChanged.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sText.Declare
	V.Local.sSQL.Declare
	V.Local.iNID.Declare
	V.Local.dExpDate.Declare
	
	V.Local.iNID.Set(V.DataTable.dtNotes(V.Args.RowIndex).NID!FieldVal)
	
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.Case("NOTES")
			F.Intrinsic.String.Replace(V.Args.Value,"'","''",V.Local.sText)
			F.Intrinsic.String.Build("Update GAB_4936_NOTES Set Notes = '{0}' Where NID = {1};",V.Local.sText,V.Local.iNID,V.Local.sSQL)
			
		F.Intrinsic.Control.Case("EXPIRE_DT")
			V.Local.dExpDate.Set(V.DataTable.dtNotes(V.Args.RowIndex).EXPIRE_DT!FieldVal)
			F.Intrinsic.String.Build("Update GAB_4936_NOTES Set Expire_DT = '{0}' Where NID = {1};",V.Local.dExpDate.PervasiveDate,V.Local.iNID,V.Local.sSQL)
			
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.If(V.Local.sSQL,<>,"")
		F.ODBC.Connection!con.Execute(V.Local.sSQL)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCNotes_CellValueChanged.End

Program.Sub.LoadRequisitions.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare

	f.Intrinsic.Control.If(v.Global.gvReqs)
		f.Intrinsic.Control.CallSub("Serialize")
	f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.IF(V.DataTable.dtReqs.Exists)
		F.Data.DataTable.Close("dtReqs")
	F.Intrinsic.Control.EndIF

	'F.Intrinsic.String.Build("Select Cast(0 As Bit) As {0}Select{0},PO_Req_Number,Hold_Flag As Hold,User_Approval as 'ApprovedBy',PO_Req_Line,Part,Location,Description,rtrim(A.Vendor) as Vendor,RTRIM(B.Name_Vendor) As VendorName,Product_Line As PL,Sort_Code,Case When A.Buyer = '' Then rtrim(B.Buyer) Else rtrim(A.Buyer) End As Buyer,RTRIM(C.Buyer) As Buyer_Name,Inventory_UM,UM,GL_Account As GLAcct,Job,Suffix,Case When Sequence = '000000' Then '' Else Sequence End As Sequence,Date_Original,UserID_Originator,Date_Due,Unit_Price As COST,Quantity As Purchase From V_Purchase_Reqs A Left Join V_Vendor_Master B On A.Vendor = B.Vendor And B.Vendor <> '' Left Join V_Buyers C On Case When A.Buyer = '' Then B.Buyer Else A.Buyer End = C.Buyer_Code;",V.Ambient.DblQuote,V.Local.sSQL)
	F.Intrinsic.String.Build("Select Cast(0 As Bit) As 'Select',A.PO_Req_Number,Hold_Flag As Hold,rtrim(User_Approval) as 'ApprovedBy',A.PO_Req_Line,Part,Location,Description,rtrim(A.Vendor) as Vendor,RTRIM(B.Name_Vendor) As VendorName,Product_Line As PL,Sort_Code,Case When A.Buyer = '' Then rtrim(B.Buyer) Else rtrim(A.Buyer) End As Buyer,RTRIM(C.Buyer) As Buyer_Name,Inventory_UM as UM,UM as UMPurch,GL_Account As GLAcct,Job,Suffix,Case When Sequence = '000000' Then '' Else Sequence End As Sequence,Date_Original,UserID_Originator,Date_Due,Unit_Price As COST,Quantity As Purchase,D.UF_1,D.UF_2,D.UF_3,D.UF_4,D.UF_5,E.TEXT AS Notes,Convert(0,SQL_Integer) as Status From V_Purchase_Reqs A Left Join V_Vendor_Master B On A.Vendor = B.Vendor And B.Vendor <> '' Left Join V_Buyers C On Case When A.Buyer = '' Then B.Buyer Else A.Buyer End = C.Buyer_Code Left Join GCG_5988_ReqUFs D on A.PO_Req_Number=D.PO_Req_Number AND A.PO_Req_Line=D.PO_Req_Line Left Join REQSN_TEXT E ON A.PO_Req_Number=E.NUMBER AND A.PO_Req_Line=E.LINE;",V.Ambient.DblQuote,V.Local.sSQL)
	F.Data.DataTable.CreateFromSQL("dtReqs","con",V.Local.sSQL,True)

	F.Intrinsic.Control.CallSub(LoadRequisitionsGV)
	f.Intrinsic.Control.CallSub("Deserialize","sItemControl","GsGCReqs","sItemGrid","gvReqs")	
	F.Intrinsic.Control.CallSub(CheckPOReqOpt)
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadRequisitions.End

Program.Sub.LoadRequisitionsGV.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare		
	V.Local.iCnt.Declare
	V.Local.sColumns.Declare	
	
	Gui.frmPO.GsGCReqs.SuspendLayout()
	Gui.frmPO.GsGCReqs.AddGridViewFromDataTable("gvReqs","dtReqs")
	Gui.frmPO.GsGCReqs.Icon(V.Global.sGsGCIcon)
	Gui.frmPO.GsGCReqs.SetGridViewProperty("gvReqs","MultiSelect",True)
	Gui.frmPO.GsGCReqs.SetGridViewProperty("gvReqs","AllowSort",True)
	Gui.frmPO.GsGCReqs.SetGridViewProperty("gvReqs","AllowFilter",True)
	Gui.frmPO.GsGCReqs.SetGridViewProperty("gvReqs","OptionsDetailShowDetailTabs",False)
	Gui.frmPO.GsGCReqs.SetGridViewProperty("gvReqs","OptionsViewShowGroupPanel",True)
	Gui.frmPO.GsGCReqs.SetGridViewProperty("gvReqs","EnableAppearanceOddRow",True)
	Gui.frmPO.GsGCReqs.SetGridViewProperty("gvReqs","OptionsFindAlwaysVisible",True)
	Gui.frmPO.GsGCReqs.SetGridViewProperty("gvReqs","OptionsViewShowAutoFilterRow",True)
	Gui.frmPO.GsGCReqs.SetGridViewProperty("gvReqs","OptionsViewColumnAutoWidth",False)
	
	'Loop through columns names by using the V.DataTable.dtName.FieldNames
	F.Intrinsic.String.Split(V.DataTable.dtReqs.FieldNames,"*!*",V.Local.sColumns)
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.Local.sColumns.UBound,1)
		Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs",V.Local.sColumns(V.Local.iCnt),"HeaderFontBold",True)
	F.Intrinsic.Control.Next(V.Local.iCnt)

	'Select
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Select","Caption","Select")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Select","MinWidth","55")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Select","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Select","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Select","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Select","CellHAlignment","Center")
	
	'Hold Flag
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Hold","Caption","Hold")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Hold","MinWidth","55")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Hold","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Hold","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Hold","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Hold","CellHAlignment","Center")
	'Set column color based on Hold Flag
	Gui.frmPO.GsGCReqs.AddStyleFormatCondition("gvReqs","Hold","taghold","equal","True")
	Gui.frmPO.GsGCReqs.SetStyleFormatConditionProperty("gvReqs","Hold","taghold","backcolor","Purple")
	
	'Approved By
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","ApprovedBy","Caption","Approved By")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","ApprovedBy","MinWidth","100")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","ApprovedBy","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","ApprovedBy","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","ApprovedBy","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","ApprovedBy","CellHAlignment","Center")
	'Set column color based on Approval
	Gui.frmPO.GsGCReqs.AddStyleFormatCondition("gvReqs","ApprovedBy","tagapprove","notequal","")
	Gui.frmPO.GsGCReqs.SetStyleFormatConditionProperty("gvReqs","ApprovedBy","tagapprove","backcolor","LightGreen")
	
	'PO_Req_Number
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PO_Req_Number","Caption","Requisition No.")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PO_Req_Number","MinWidth","90")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PO_Req_Number","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PO_Req_Number","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PO_Req_Number","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PO_Req_Number","CellHAlignment","Center")
	Gui.frmPO.GsGCReqs.AddSummaryItem("gvReqs","PO_Req_Number","PO_Req_Number","Count","Tot Reqs: ","",n0)
	
	'PO_Req_Line
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PO_Req_Line","Caption","Line")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PO_Req_Line","MinWidth","55")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PO_Req_Line","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PO_Req_Line","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PO_Req_Line","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PO_Req_Line","CellHAlignment","Center")
	
	'Part
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Part","Caption","Part")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Part","MinWidth","125")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Part","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Part","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Part","HeaderHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Part","CellHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Part","CellForeColor","Blue")
	
	'LOC
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Location","Caption","Loc")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Location","MinWidth","45")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Location","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Location","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Location","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Location","CellHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Location","CellForeColor","Blue")
	
	'Description
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Description","Caption","Description")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Description","AllowEdit",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Description","ReadOnly",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Description","MinWidth","200")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Description","HeaderHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Description","CellHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Description","CellForeColor","Blue")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Description","CellBackColor","LightYellow")
	
	'Vendor
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Vendor","Visible",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Vendor","Caption","Vendor")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Vendor","MinWidth","85")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Vendor","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Vendor","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Vendor","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Vendor","CellHAlignment","Center")
	
	'VendorName
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","VendorName","Caption","Vendor Name")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","VendorName","MinWidth","200")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","VendorName","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","VendorName","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","VendorName","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","VendorName","CellHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","VendorName","CellForeColor","Blue")
	
	'PL
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PL","Caption","PL")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PL","MinWidth","45")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PL","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PL","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PL","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","PL","CellHAlignment","Center")
	
	'Sort_Code
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sort_Code","Caption","Sort Code")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sort_Code","MinWidth","85")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sort_Code","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sort_Code","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sort_Code","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sort_Code","CellHAlignment","Center")
	
	'Buyer
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer","Visible",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer","Caption","Buyer")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer","MinWidth","50")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer","CellHAlignment","Center")
	
	'Buyer_Name
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer_Name","Caption","Buyer Name")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer_Name","MinWidth","125")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer_Name","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer_Name","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer_Name","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Buyer_Name","CellHAlignment","Center")
	
	'Inventory_UM
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UM","Caption","Inv UM")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UM","MinWidth","50")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UM","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UM","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UM","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UM","CellHAlignment","Center")
	
	'Purchase UM
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UMPurch","Caption","Purch UM")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UMPurch","MinWidth","65")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UMPurch","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UMPurch","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UMPurch","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UMPurch","CellHAlignment","Center")
	
	'GLAcct
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","GLAcct","Visible",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","GLAcct","Caption","GL Acct")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","GLAcct","MinWidth","50")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","GLAcct","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","GLAcct","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","GLAcct","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","GLAcct","CellHAlignment","Center")
	
	'Job
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Job","Visible",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Job","Caption","Job")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Job","MinWidth","50")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Job","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Job","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Job","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Job","CellHAlignment","Center")
	
	'Suffix
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Suffix","Visible",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Suffix","Caption","Suffix")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Suffix","MinWidth","50")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Suffix","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Suffix","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Suffix","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Suffix","CellHAlignment","Center")
	
	'Sequence
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sequence","Visible",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sequence","Caption","Seq")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sequence","MinWidth","50")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sequence","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sequence","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sequence","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Sequence","CellHAlignment","Center")
	
	'Date_Original
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Original","Caption","Original Date")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Original","MinWidth","85")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Original","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Original","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Original","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Original","CellHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Original","DisplayCustomDatetime","d")
	
	'UserID_Originator
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UserID_Originator","Caption","Originator")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UserID_Originator","MinWidth","85")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UserID_Originator","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UserID_Originator","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UserID_Originator","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UserID_Originator","CellHAlignment","Center")
	
	'Date_Due
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Due","Caption","Due Date")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Due","MinWidth","85")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Due","AllowEdit",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Due","ReadOnly",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Due","HeaderHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Due","CellHAlignment","Center")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Due","DisplayCustomDatetime","d")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Date_Due","CellBackColor","LightYellow")
	
	'COST
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","COST","Caption","Cost")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","COST","MinWidth","85")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","COST","AllowEdit",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","COST","ReadOnly",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","COST","HeaderHAlignment","Far")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","COST","CellHAlignment","Far")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","COST","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","COST","CellBackColor","LightYellow")
	
	'Purchase
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Purchase","Caption","PO Quantity")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Purchase","MinWidth","85")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Purchase","AllowEdit",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Purchase","ReadOnly",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Purchase","HeaderHAlignment","Far")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Purchase","CellHAlignment","Far")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Purchase","DisplayCustomNumeric","#,###,###,##0.00##")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Purchase","CellBackColor","LightYellow")
	
	'Notes	
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","notes","Caption","Notes")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","notes","MinWidth","250")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","notes","AllowEdit",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","notes","ReadOnly",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","notes","HeaderHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","notes","CellHAlignment","Left")
	'Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","notes","CellBackColor","LightYellow")
	
	'UF_1
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_1","Caption","User Field 1 (30 Characters)")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_1","MinWidth","200")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_1","AllowEdit",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_1","ReadOnly",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_1","HeaderHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_1","CellHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_1","CellBackColor","LightYellow")
	
	'UF_2	
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_2","Caption","User Field 2 (30 Characters)")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_2","MinWidth","200")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_2","AllowEdit",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_2","ReadOnly",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_2","HeaderHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_2","CellHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_2","CellBackColor","LightYellow")
	
	'UF_3	
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_3","Caption","User Field 3 (30 Characters)")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_3","MinWidth","200")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_3","AllowEdit",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_3","ReadOnly",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_3","HeaderHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_3","CellHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_3","CellBackColor","LightYellow")
	
	'UF_4	
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_4","Caption","User Field 4 (30 Characters)")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_4","MinWidth","200")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_4","AllowEdit",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_4","ReadOnly",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_4","HeaderHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_4","CellHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_4","CellBackColor","LightYellow")
	
	'UF_5	
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_5","Caption","User Field 5 (30 Characters)")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_5","MinWidth","200")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_5","AllowEdit",True)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_5","ReadOnly",False)
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_5","HeaderHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_5","CellHAlignment","Left")
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","UF_5","CellBackColor","LightYellow")
	
	'Status
	Gui.frmPO.GsGCReqs.SetColumnProperty("gvReqs","Status","Visible",False)

	Gui.frmPO.GsGCReqs.ResumeLayout()
	Gui.frmPO.GsGCReqs.MainView("gvReqs")
	v.Global.gvReqs.Set(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadRequisitionsGV.End

Program.Sub.cmdPJRefresh_Click.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare

	f.Intrinsic.Control.If(v.Screen.frmPO!cmdPJRefresh.Enabled,=,False)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	gui.frmPO.cmdPJRefresh.Enabled(False)

	gui.frmPO.lblProgress.Caption("Load Purchase to Jobs Parts...")
	'BN added Purchase to Jobs Tab	
	f.Intrinsic.Control.If(v.Global.gvPJ)
		f.Intrinsic.Control.CallSub("Serialize")
	f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.CallSub(Load_Purchase_To_Jobs)	
	gui.frmPO.lblProgress.Caption("Completed.")
	gui.frmPO.cmdPJRefresh.Enabled(True)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry	
Program.Sub.cmdPJRefresh_Click.End

''''''''''''''''''''''''''''''''///''''''''''''''''''''''''''''''''
Program.Sub.Load_Purchase_To_Jobs.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.sSql.Declare
	v.Local.dCutOff.Declare
	
	'Get Cuttoff date
	v.Local.dCutOff.Set(v.Screen.frmPO!dtpCutoff.Value)
	
	f.Intrinsic.Control.If(v.DataTable.PJ.Exists)
		f.Data.DataTable.Close("PJ")
	f.Intrinsic.Control.EndIf	
	F.Data.DataTable.CreateFromSQL("PJ","con","Select Convert(0,SQL_Bit) as SelectRow,j.Job,j.Suffix,j.Sequence,j.Date_Due,A.PART+A.LOCATION AS PartLoc,A.PART,A.LOCATION,A.DESCRIPTION,A.PRODUCT_LINE as PL,A.CODE_SORT, '' AS BuyerCode,'' as BuyerName,A.TIME_MATERIAL_LEAD,A.UM_Inventory as UM,UM_PURCHASING as UMPurch,FACTOR_CONVERSION,QTY_ONHAND,QTY_ORDER,QTY_ONORDER_PO,QTY_REORDER, A.QTY_RECVD_NOT_INSP AS IN_QUALITY,Qty_Onhand + Qty_OnOrder_PO + Qty_OnOrder_WO - Qty_Required as NetQty ,Convert(0,SQL_Integer) as Status,Convert(0,SQL_Float) as Cost,rtrim(B.NAME_VENDOR) as Vendor,'' as NAME_VENDOR,j.Qty_Committed,j.Qty_Issued,j.Qty_Committed - j.Qty_Issued as Purchase,'' AS NOTES, '' as GLAcct, '' as Mfg_Part, '' as Mfg_Name,j.Job + j.Suffix + j.Sequence  as JSS,'' as POLineNum FROM V_Job_Commitments j inner join v_INVENTORY_MSTR A on j.Part = a.Part and j.Location = a. Location JOIN V_INVENTORY_MST2 B ON A.PART = B.PART AND A.LOCATION = B.LOCATION WHERE B.CODE_SOURCE IN ('J') order by A.PART,A.LOCATION,j.Date_Due",True)	
	
	f.Intrinsic.Control.CallSub("FillPOData","DT","PJ")	
	
	'Fill in GL account
	f.Data.Dictionary.CreateFromSQL("dictPL","con","select product_line, Purchasing_Account from V_PRODUCT_LINE;")
	f.Data.Dictionary.SetDefaultReturn("dictPL","")
	f.Data.DataTable.FillFromDictionary("PJ","dictPL","PL","GLAcct")
	f.Data.Dictionary.Close("dictPL")

	'Fill in mfg part and name
	f.Data.datatable.CreateFromSQL("dtMfgXref","con","select Part + Location as PartLoc, mfg_part, mfg_name from v_inv_cross_ref;")
	f.Data.Dictionary.Createfromdatatable("dictMfgPart","dtMfgXref","PartLoc","Mfg_Part")
	f.Data.Dictionary.Createfromdatatable("dictMfgName","dtMfgXref","PartLoc","Mfg_Name")
	f.Data.Dictionary.SetDefaultReturn("dictMfgPart","")
	f.Data.Dictionary.SetDefaultReturn("dictMfgName","")
	f.Data.DataTable.FillFromDictionary("PJ","dictMfgPart","PartLoc","Mfg_Part")
	f.Data.DataTable.FillFromDictionary("PJ","dictMfgName","PartLoc","Mfg_Name")
	f.Data.Dictionary.Close("dictMfgPart")
	f.Data.Dictionary.Close("dictMfgName")
	f.Data.DataTable.Close("dtMfgXref")
	
	f.Data.Dictionary.CreateFromSQL("dictNotes","con","Select JSS,Notes from GCG_4936_Notes")
	f.Data.Dictionary.SetDefaultReturn("dictNotes","")
	f.Data.DataTable.FillFromDictionary("PJ","dictNotes","JSS","NOtes")
	f.Data.Dictionary.Close("dictNotes")
	
	F.Data.DataTable.AddColumn("PJ","PO_Req_Number",String,"")
	F.Data.DataTable.AddColumn("PJ","PO_Req_Line",String,"")
	
	f.Data.DataTable.AddExpressionColumn("PJ","Extension","Float","[Purchase] * [Cost]")
	
	gui.frmPO.gsPJ.AddGridviewFromDatatable("gvPJ","PJ")
	f.Intrinsic.Control.CallSub("Load_gvPJ")
	gui.frmPO.gsPJ.MainView("gvPJ")
	f.Intrinsic.Control.CallSub("Deserialize","sItemControl","gsPJ","sItemGrid","gvPJ")
	v.Global.gvPJ.Set(True)

	f.Intrinsic.Control.CallSub("GetVendorsForPJ")
	f.Data.DataTable.FillFromDictionary("PJ","dicStatus4PJ","PartLoc","Status")
	f.Data.DataTable.FillFromDictionary("PJ","dicVendor4PJ","PartLoc","Vendor")
	f.Data.DataTable.FillFromDictionary("PJ","dicName4PJ","Vendor","Name_Vendor")
	f.Intrinsic.Control.CallSub("LoadPJCost")
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Load_Purchase_To_Jobs.End

Program.Sub.GetVendorsForPJ.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.bExist.Declare
	
	F.Intrinsic.Control.If(V.DataTable.dtVendStat4PJ.Exists)	
		f.Data.DataTable.Close("dtVendStat4PJ")
	f.Intrinsic.Control.EndIf
	F.Data.DataTable.CreateFromSQL("dtVendStat4PJ1","con","Select  A.Part+A.Location As PartLoc,RTrim(B.Name_Vendor) As Vendor,Cast(DateAdd(Day,1,CurDate()) As Date) As Date_Received,1 As Status From Inventory_Mstr A Join Inventory_Mst2 B On A.Part = B.Part And A.Location = B.Location Where B.Name_Vendor <> '';",True)
	F.Data.DataTable.CreateFromSQL("dtVendStat4PJ2","con","Select Part+Location As PartLoc,RTrim(Vendor) As Vendor,Cast(Date_Received As Date) As Date_Received,2 As Status From V_PO_History Where Part <> '' And Date_Received <> '1900-01-01';",True)
	F.Data.DataTable.Merge("dtVendStat4PJ2","dtVendStat4PJ1",True,3)
	

	
	F.Data.DataView.Create("dtVendStat4PJ1","dvVendStat1",22,"","Status,PartLoc,Date_Received Desc")
	F.Data.DataView.ToDataTable("dtVendStat4PJ1","dvVendStat1","dtVendStat4PJ",True)	
	F.Data.DataTable.Close("dtVendStat4PJ1")
	F.Data.DataTable.Close("dtVendStat4PJ2")
	
	'Vendor_name
	F.Data.Dictionary.CreateFromSQL("dNameVendor","con","Select RTrim(left(Name_Vendor,20)) As Vendor,RTrim(Vendor) From V_Vendor_Master Where Vendor <> '' Order By Vendor;")
	F.Data.Dictionary.SetDefaultReturn("dNameVendor","")
	f.Data.DataTable.FillFromDictionary("dtVendStat4PJ","dNameVendor","Vendor","Vendor")
	F.Data.Dictionary.Close("dNameVendor")
	
	'Vendor
	f.Data.Dictionary.Exists("dicVendor4PJ",v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist)
		f.Data.Dictionary.Close("dicVendor4PJ")
	f.Intrinsic.Control.EndIF	
	F.Data.Dictionary.CreateFromDataTable("dicVendor4PJ","dtVendStat4PJ","PartLoc","Vendor")
	F.Data.Dictionary.SetDefaultReturn("dicVendor4PJ","")
	
	'Name Vendor
	f.Data.Dictionary.Exists("dicName4PJ",v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist)
		f.Data.Dictionary.Close("dicName4PJ")
	f.Intrinsic.Control.EndIF	
	F.Data.Dictionary.CreateFromSQL("dicName4PJ","con","select rtrim(Vendor) as Vendor, Name_Vendor  from v_vendor_master where vendor <> ''")
	F.Data.Dictionary.SetDefaultReturn("dicName4PJ","")	
	
	'Status
	f.Data.Dictionary.Exists("dicStatus4PJ",v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist)
		f.Data.Dictionary.Close("dicStatus4PJ")
	f.Intrinsic.Control.EndIF
	F.Data.Dictionary.CreateFromDataTable("dicStatus4PJ","dtVendStat4PJ","PartLoc","Status")
	F.Data.Dictionary.SetDefaultReturn("dicStatus4PJ",0)	

	'Buyer Code
	f.Data.Dictionary.Exists("dBuyerCode4PJ",v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist)
		f.Data.Dictionary.Close("dBuyerCode4PJ")
	f.Intrinsic.Control.EndIF	
	F.Data.Dictionary.CreateFromSQL("dBuyerCode4PJ","con","Select rtrim(Vendor) as Vendor,Buyer From V_Vendor_Master Where Vendor <> '' And Buyer <> '' Order By Vendor;")
	F.Data.Dictionary.SetDefaultReturn("dBuyerCode4PJ","")
	
	'Buyer Name
	f.Data.Dictionary.Exists("dBuyerName4PJ",v.Local.bExist)
	f.Intrinsic.Control.If(v.Local.bExist)
		f.Data.Dictionary.Close("dBuyerName4PJ")
	f.Intrinsic.Control.EndIF		
	F.Data.Dictionary.CreateFromSQL("dBuyerName4PJ","con","Select Buyer_Code,RTRIM(Buyer) As Buyer From V_Buyers;")
	F.Data.Dictionary.SetDefaultReturn("dBuyerName4PJ","")	

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.GetVendorsForPJ.End

Program.Sub.LoadPJCost.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCallType.Declare
	V.Local.iCnt.Declare
	V.Local.iReturnCode.Declare
	V.Local.fReturnCost.Declare
	V.Local.sReturnVendor.Declare
	V.Local.sVendor.Declare
	v.Local.iOuter.Declare
	v.Local.sFilter.Declare
	v.Local.fReturnPurchase.Declare
	
	'1-Default
	'2-Vendor Quote
	'3-Purchase Order History
	
	f.Intrinsic.Control.If(V.Screen.frmPO!ddlCost.Text,=,"Zero Cost")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.If(v.DataTable.PJ.Exists,=,False)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'PO Tab
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.PJ.RowCount--,1)
		F.Intrinsic.Control.If(V.Screen.frmPO!ddlCost.Text,=,"PO History Cost")
			F.Intrinsic.Control.SelectCase(V.DataTable.PJ(V.Local.iCnt).Status!FieldVal)
				F.Intrinsic.Control.Case(0)
					V.Local.iCallType.Set(1)
					V.Local.sVendor.Set("")
				F.Intrinsic.Control.CaseAny(1,2)
					V.Local.iCallType.Set(3)
					V.Local.sVendor.Set("")
			F.Intrinsic.Control.EndSelect
			
		F.Intrinsic.Control.Else
			F.Intrinsic.Control.SelectCase(V.DataTable.PJ(V.Local.iCnt).Status!FieldVal)
				F.Intrinsic.Control.Case(0)
					V.Local.iCallType.Set(1)
					V.Local.sVendor.Set("")
				F.Intrinsic.Control.Case(1)
					V.Local.iCallType.Set(2)
					V.Local.sVendor.Set(V.DataTable.PJ(V.Local.iCnt).Vendor!FieldVal)
				F.Intrinsic.Control.Case(2)
					V.Local.iCallType.Set(3)
					V.Local.sVendor.Set("")
			F.Intrinsic.Control.EndSelect
		F.Intrinsic.Control.EndIf
		
		F.Global.Callwrapper.New("LoadCost","Purchasing.GetPartPurchaseCost")
		F.Global.Callwrapper.SetProperty("LoadCost","CallType",V.Local.iCallType)
		F.Global.Callwrapper.SetProperty("LoadCost","Part",V.DataTable.PJ(V.Local.iCnt).Part!FieldVal)
		F.Global.Callwrapper.SetProperty("LoadCost","Location",V.DataTable.PJ(V.Local.iCnt).Location!FieldVal)
		F.Global.Callwrapper.SetProperty("LoadCost","Vendor",V.Local.sVendor)
		F.Global.Callwrapper.SetProperty("LoadCost","Quantity",V.DataTable.PJ(V.Local.iCnt).Purchase!FieldVal)
		F.Global.CallWrapper.Run("LoadCost")
		
		'Returns
		F.Global.CallWrapper.GetProperty("LoadCost","ReturnCode",V.Local.iReturnCode)
		F.Global.CallWrapper.GetProperty("LoadCost","ReturnCost",V.Local.fReturnCost)
		F.Global.CallWrapper.GetProperty("LoadCost","ReturnVendor",V.Local.sReturnVendor)
		
		'Set Value
		F.Data.DataTable.SetValue("PJ",V.Local.iCnt,"Cost",V.Local.fReturnCost)

	
	'Apply conversion factor 10 09 2020
		f.Intrinsic.Control.If(V.DataTable.PJ(V.Local.iCnt).FACTOR_CONVERSION!FieldVal,>,0)
			f.Intrinsic.Math.Div(V.DataTable.PJ(V.Local.iCnt).Purchase!FieldVal,V.DataTable.PJ(V.Local.iCnt).FACTOR_CONVERSION!FieldVal,v.Local.fReturnPurchase)
			F.Data.DataTable.SetValue("PJ",V.Local.iCnt,"Purchase",V.Local.fReturnPurchase)
		f.Intrinsic.Control.Else
			F.Data.DataTable.SetValue("PJ",V.Local.iCnt,"UMpurch",V.DataTable.PJ(V.Local.iCnt).UM!FieldVal)
		f.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.LoadPJCost.End

Program.Sub.Load_gvPJ.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.sAllColumns.Declare
	v.Local.sAllignmentCenter.Declare
	v.Local.sAllignmentFar.Declare
	
	gui.frmPO.gsPJ.SuspendLayout()
	'General format for the grid
	Gui.frmPO.gsPJ.SetGridViewProperty("gvPJ","AllowSort",True)
	Gui.frmPO.gsPJ.SetGridViewProperty("gvPJ","AllowFilter",True)
	Gui.frmPO.gsPJ.SetGridViewProperty("gvPJ","OptionsFindAlwaysVisible",True)
	Gui.frmPO.gsPJ.SetGridViewProperty("gvPJ","OptionsViewShowAutoFilterRow",True)	
	Gui.frmPO.gsPJ.SetGridViewProperty("gvPJ","EnableAppearanceOddRow",False)
	Gui.frmPO.gsPJ.SetGridViewProperty("gvPJ","AllowColumnResizing",True)
	Gui.frmPO.gsPJ.SetGridViewProperty("gvPJ","OptionsViewColumnAutoWidth",False)	
	Gui.frmPO.gsPJ.SetGridViewProperty("gvPJ","ColumnPanelRowHeight","35")
	
	v.Local.sAllColumns.Set("SelectRow,PART,LOCATION,DESCRIPTION,Job,Suffix,Sequence,Date_Due,PartLoc,PL,CODE_SORT,BuyerCode,TIME_MATERIAL_LEAD,UM,UMPurch,FACTOR_CONVERSION,QTY_ONHAND,QTY_ORDER,QTY_ONORDER_PO,QTY_REORDER,IN_QUALITY,NetQty,Qty_Committed,Qty_Issued,Purchase,Cost,Extension,Vendor,NAME_VENDOR,POLineNum,GLAcct,Mfg_Part,Mfg_Name,NOTES,PO_Req_Number,JSS,PO_Req_Number,BuyerName,Status")
	
	v.Local.sAllignmentCenter.Set("SelectRow,Job,Suffix,Sequence,Date_Due,PL,Code_Sort,UM,Vendor,Status")
	v.Local.sAllignmentFar.Set("Extension,Cost,Qty_Committed,Qty_Issued,Purchase,TIME_MATERIAL_LEAD,QTY_ORDER,QTY_ONHAND,QTY_ONORDER_PO,QTY_REORDER,FACTOR_CONVERSION,In_Quality,NetQty")
	
	'VisibleIndex	
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns",v.Local.sAllColumns,"sProperty","VisibleIndex")
	'InVisible
	gui.frmPO.gsPJ.SetColumnProperty("gvPJ","PO_Req_Line","Visible",False)
	
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns","PartLoc,Status,PO_Req_Number,JSS,PO_Req_Number,BuyerName,QTY_ORDER","sProperty","Invisible")
	
	'HeaderWordWrap
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns",v.Local.sAllColumns,"sProperty","HeaderWordWrap")
	'HeaderAllign_Top
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns",v.Local.sAllColumns,"sProperty","HeaderAllign_Top")
	'HeaderBold
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns",v.Local.sAllColumns,"sProperty","HeaderFontBold")
	'Header alignment center
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns",v.Local.sAllignmentCenter,"sProperty","HeaderAllign_Center")
	'Header alignment far
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns",v.Local.sAllignmentFar,"sProperty","HeaderAllign_Far")
	'CellHAlignment center
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns",v.Local.sAllignmentCenter,"sProperty","CellHAlignment_Center")
	'CellHAlignment _ Far
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns",v.Local.sAllignmentFar,"sProperty","CellHAlignment_Far")
	'Caption	
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns","SelectRow~Select,Job~Job,Suffix~Suf,Sequence~Seq,Qty_Committed~Committed,Qty_Issued~Issued,Purchase~Required,Date_Due~Due Date,PartLoc~PartLoc,PART~Part,LOCATION~Loc,DESCRIPTION~Description,PL~PL,CODE_SORT~Sort Code,TIME_MATERIAL_LEAD~Lead Time,QTY_ORDER~Qty Order,QTY_ONHAND~Onhand,QTY_ONORDER_PO~On Order PO,QTY_REORDER~ReOrder Pt,UM~UM,UMPurch~UM Purch.,FACTOR_CONVERSION~Convrs. Factor,NAME_VENDOR~Vendor Name,In_Quality~In Quality,Vendor~Vendor,BuyerCode~Buyer,Notes~Notes,GLAcct~GL Acct,Mfg_Part~Mfg Part,Mfg_Name~Mfg Name,POLineNum~POs,NetQty~Net Qty","sProperty","Caption")
	
	'Width	
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns","PL,Location,UM,UMPurch","sProperty","Width","sWidth","35")
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns","Job,Suffix,Sequence","sProperty","Width","sWidth","50")
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns","NetQty,Extension,POLineNum","sProperty","Width","sWidth","85")
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns","Part","sProperty","Width","sWidth","160")
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns","Description,Name_Vendor,Notes","sProperty","Width","sWidth","220")
	'For_RowCell_Click
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns","Job,Suffix,Sequence,Part,Location,Description,Vendor,Name_Vendor,POLineNum,Notes","sProperty","For_RowCell_Click")
	
	'For_CellValue_Changed
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns","SelectRow,Cost,Purchase","sProperty","For_CellValue_Changed")
	'Decimal_1
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns",v.Local.sAllignmentFar,"sProperty","Decimal_1")	
	'DisplayCustomDatetime
	f.Intrinsic.Control.CallSub(FormatBulk,"GS","gsPJ","GV","gvPJ","sInputColumns","Date_Due","sProperty","DisplayCustomDatetime")	
	'Color
	gui.frmPO.gsPJ.SetColumnProperty("gvPJ","Part","CellForeColor","Blue")
	gui.frmPO.gsPJ.SetColumnProperty("gvPJ","Description","CellForeColor","Blue")
	gui.frmPO.gsPJ.SetColumnProperty("gvPJ","Vendor","CellForeColor","Blue")
	gui.frmPO.gsPJ.SetColumnProperty("gvPJ","Name_Vendor","CellForeColor","Blue")
	gui.frmPO.gsPJ.SetColumnProperty("gvPJ","Job","CellForeColor","Blue")
	gui.frmPO.gsPJ.SetColumnProperty("gvPJ","Suffix","CellForeColor","Blue")
	gui.frmPO.gsPJ.SetColumnProperty("gvPJ","Sequence","CellForeColor","Blue")
	gui.frmPO.gsPJ.SetColumnProperty("gvPJ","Cost","CellBackColor","#FAEBD7")
	gui.frmPO.gsPJ.SetColumnProperty("gvPJ","Purchase","CellBackColor","#FAEBD7")
	gui.frmPO.gsPJ.SetColumnProperty("gvPJ","Extension","CellBackColor","LightBlue")
	gui.frmPO.gsPJ.SetColumnProperty("gvPJ","Notes","CellBackColor","#F5F5DC")
	
	'Tool tip
	Gui.frmPO.gsPJ.SetColumnProperty("gvPJ","NetQty","ToolTip","On Hand + On Order PO + On Order WO - Qty Required")	
	
	Gui.frmPO.gsPJ.AddSummaryItem("gvPJ","PART","PART","Count","Total Rows: ","",n0)
	gui.frmPO.gsPJ.AddSummaryItem("gvPJ","Extension","Extension","Sum","$ ","","n")
	
	Gui.frmPO.gsPJ.SetColumnProperty("gvPJ","SelectRow","AllowEdit",False)
	Gui.frmPO.gsPJ.SetColumnProperty("gvPJ","SelectRow","Readonly",True)
	Gui.frmPO.gsPJ.SetColumnProperty("gvPJ","SelectRow","Fixed","Left")
	Gui.frmPO.gsPJ.SetColumnProperty("gvPJ","PART","Fixed","Left")
	Gui.frmPO.gsPJ.SetColumnProperty("gvPJ","LOCATION","Fixed","Left")	
	Gui.frmPO.gsPJ.SetColumnProperty("gvPJ","Description","Fixed","Left")
	
	gui.frmPO.gsPJ.ResumeLayout()	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Load_gvPJ.End

Program.Sub.FormatBulk.Start
f.Intrinsic.Control.Try
	V.Local..BulkDeclareString(sError,sColumns,sHold)
	v.Local..BulkDeclareLong(iCnt)

	f.Intrinsic.String.Split(v.Args.sInputColumns,",",v.Local.sColumns)
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sColumns.UBound,1)
		F.Intrinsic.Control.SelectCase(v.Args.sProperty)
			F.Intrinsic.Control.Case("MinWidth")
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"MinWidth",v.Args.sWidth)
			F.Intrinsic.Control.Case("MaxWidth")
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"MaxWidth",v.Args.sWidth)
			F.Intrinsic.Control.Case("Width")
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"Width",v.Args.sWidth)
			F.Intrinsic.Control.Case("Invisible")
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"Visible",False)
			F.Intrinsic.Control.Case("VisibleIndex")
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"VisibleIndex",v.Local.iCnt)
			F.Intrinsic.Control.Case("Caption")
				f.Intrinsic.String.Split(v.Local.sColumns(v.Local.iCnt),"~",v.Local.sHold)
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sHold(0),"Caption",v.Local.sHold(1))
			F.Intrinsic.Control.Case("HeaderAllign_Far")
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"HeaderHAlignment","Far")
			F.Intrinsic.Control.Case("HeaderAllign_Center")
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"HeaderHAlignment","Center")
			F.Intrinsic.Control.Case("HeaderAllign_Top")
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"HeaderVAlignment","Top")
			F.Intrinsic.Control.Case("HeaderFontBold")	
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"HeaderFontBold",True)
			F.Intrinsic.Control.Case("HeaderWordWrap")	
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"HeaderWordWrap","Wrap")
			F.Intrinsic.Control.Case("CellHAlignment_Center")	
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"CellHAlignment","Center")
			F.Intrinsic.Control.Case("CellHAlignment_Far")	
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"CellHAlignment","Far")
			F.Intrinsic.Control.Case("Decimal_1")	
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"DisplayCustomNumeric","###,###,###,##0.00")
			f.Intrinsic.Control.Case("For_CellValue_Changed")
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"AllowEdit",True)	
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"ReadOnly",False)
			f.Intrinsic.Control.Case("For_RowCell_Click")
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"AllowEdit",False)	
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"ReadOnly",True)
			f.Intrinsic.Control.Case("DisplayCustomDatetime")
				gui.frmPO.[v.Args.GS].SetColumnProperty(v.Args.GV,v.Local.sColumns(v.Local.iCnt),"DisplayCustomDatetime","d")	
			F.Intrinsic.Control.EndSelect		
	f.Intrinsic.Control.Next(v.Local.iCnt)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}Subroutine: {2}{1}Subroutine called from:{6}{1}Error Occurred: {3}{1}Description: {4}{1}GAB Version: {5} column: {7}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,v.Ambient.SubroutineCalledFrom,v.Local.sColumns(v.Local.iCnt),V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	f.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry

Program.Sub.FormatBulk.End

Program.Sub.Export_PJ.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sExt.Declare

	F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
	F.Intrinsic.Control.If(V.Local.bExcel)
		V.Local.sExt.Set("xlsx")
	F.Intrinsic.Control.Else
		V.Local.sExt.Set("csv")
	F.Intrinsic.Control.EndIf
			
	F.Intrinsic.String.Build("{0}\PJ_5988_Export_{2}.{1}",V.Caller.LocalGssTempDir,V.Local.sExt,v.Ambient.Now.FormatYYYYMMDDHHNNSS,V.Local.sFileExport)
	F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
	F.Intrinsic.Control.If(V.Local.bFileLocked)
		F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
		F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
	F.Intrinsic.Control.Else
		Gui.frmPO.gsPJ.Export(V.Local.sFileExport,V.Local.sExt)
		F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
	F.Intrinsic.Control.EndIf	

F.Intrinsic.Control.CatchWhen(5700)
	F.Intrinsic.UI.Msgbox("No Data to Export","Export")
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Export_PJ.End

Program.Sub.MenuClick4PJ.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iRet.Declare
	V.Local.sControl.Declare
	V.Local.sGV.Declare
	V.Local.iRow.Declare
	v.Local.sCaption.Declare
	v.Local.sRows.Declare
	
	f.Intrinsic.Control.If(v.DataTable.PJ.Exists)

		F.Intrinsic.Control.SelectCase(V.Args.ItemName)
			F.Intrinsic.Control.Case("VIEW")
				F.Global.General.LaunchMenuTask(271,2,V.Local.iRet)
	
			F.Intrinsic.Control.Case("NEW")
				F.Intrinsic.Control.If(V.Global.sPart,<>,"")
					F.Global.General.CallWrapperAsync(175000,V.Global.sPart)
				F.Intrinsic.Control.EndIf
				
			F.Intrinsic.Control.Case("NOTES")
				f.Intrinsic.Control.If(v.Global.gvPJ.Not)
					f.Intrinsic.Control.ExitSub
				f.Intrinsic.Control.EndIf

				Gui.frmPO.gsPJ.GetSelectedRows("gvPJ",V.Local.sRows)
				f.Intrinsic.Control.If(v.Local.sRows,=,"")
					f.Intrinsic.Control.ExitSub
				f.Intrinsic.Control.EndIf
				f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
				v.Local.iRow.Set(v.Local.sRows(0))
			
				f.Intrinsic.String.Build("Notes: Part {0} - Location {1}",V.DataTable.PJ(V.Local.iRow).PART!FieldVal,V.DataTable.PJ(V.Local.iRow).LOCATION!FieldVal,v.Local.sCaption)
				gui.frmNotes..Caption(v.Local.sCaption)
				V.Global.sPart2.Set(V.DataTable.PJ(V.Local.iRow).PART!FieldVal)
				V.Global.sLoc2.Set(V.DataTable.PJ(V.Local.iRow).LOCATION!FieldVal)
				F.Intrinsic.Control.CallSub(LoadDtNotes)
				Gui.frmNotes..Show
				
			F.Intrinsic.Control.Case("HISTORY")
			
			''''working here.............................................!!!!!!!!!!!!!!!!!!!!!!
				Gui.frmPO.gsPJ.GetSelectedRows("gvPJ",V.Local.sRows)
				f.Intrinsic.Control.If(v.Local.sRows,=,"")
					f.Intrinsic.Control.ExitSub
				f.Intrinsic.Control.EndIf
				f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
				v.Local.iRow.Set(v.Local.sRows(0))
				
				F.Intrinsic.Control.CallSub(GsGCPO_RowCellClick,"Column","POHistory","ControlName","gsPJ","RowIndex",V.Local.iRow)
				
		F.Intrinsic.Control.EndSelect
	
	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClick4PJ.End

Program.Sub.gsPJ_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sPart.Declare
	V.Local.sLoc.Declare
	V.Local.sQty.Declare
	V.Local.sFilter.Declare
	V.Local.sParams.Declare
	V.Local.sCaption.Declare
	V.Local.sGV.Declare
	V.Local.sDT.Declare
	V.Local.sSO.Declare
	V.Local.sVendor.Declare
	v.Local.sMsg.Declare
	v.Local.sNote.Declare
	v.Local.sPrompt.Declare
	v.Local.ssql.Declare
	v.Local.sRet.Declare
	v.Local.bValue.Declare
	
	F.Intrinsic.Control.BlockEvents
	
	V.Local.sGV.Set("gvPJ")
	V.Local.sDT.Set("PJ")
	V.Global.sPart.Set("")
	F.Intrinsic.Control.SelectCase(V.Args.Column.UCase)
		F.Intrinsic.Control.CaseAny("PART","LOCATION")
			'Fill Demand, Supply and RFQ
			V.Global.sPart.Set(V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim)
			F.Intrinsic.Control.If(V.DataTable.[V.Local.sDT](V.Args.RowIndex).Location!FieldValTrim,=,"")
				F.Intrinsic.String.Build("Demand || Part: {0}",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim,V.Local.sCaption)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("Demand || Part: {0}	Loc: {1}",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).Location!FieldValTrim,V.Local.sCaption)
			F.Intrinsic.Control.EndIf
			Gui.frmPO.lblDemand.Caption(V.Local.sCaption)
			F.Intrinsic.Control.CallSub(LoadDemand,"Part",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim,"Loc",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Location!FieldValTrim)

			F.Intrinsic.Control.CallSub(LoadVendorQuote,"Part",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim,"Vendor",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Vendor!FieldValTrim)
			F.Intrinsic.Control.CallSub(LoadSupply,"Part",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Part!FieldValTrim,"Loc",V.DataTable.[V.Local.sDT](V.Args.RowIndex).Location!FieldValTrim)
		
		F.Intrinsic.Control.CaseAny("DESCRIPTION")
			Gui.FrmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"PART",V.Args.RowIndex,V.Local.sPart)
			Gui.FrmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"LOCATION",V.Args.RowIndex,V.Local.sLoc)
			F.Intrinsic.String.Build("{0}!*!{1}!*!MR",V.Local.sPart,V.Local.sLoc,V.Local.sParams)
			F.Global.General.CallWrapperASync(7200,V.Local.sParams)
			
		F.Intrinsic.Control.CaseAny("VENDOR","NAME_VENDOR")
			Gui.frmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"PART",V.Args.RowIndex,V.Local.sPart)
			Gui.frmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"LOCATION",V.Args.RowIndex,V.Local.sLoc)
			Gui.frmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"Purchase",V.Args.RowIndex,V.Local.sQty)
			Gui.frmPO.[V.Args.ControlName].GetCellValueByColumnName(V.Local.sGV,"Vendor",V.Args.RowIndex,V.Local.sVendor)
			V.Global.sPart.Set(V.Local.sPart)
			V.Global.sLoc.Set(V.Local.sLoc)
			V.Global.fQty.Set(V.Local.sQty)
			V.Global.sDt.Set(V.Local.sDT)
			V.Global.iRowIndex.Set(V.Args.RowIndex)
			F.Intrinsic.Control.If(V.Screen.frmPO!chkBrwVends.Value,=,0)
				Gui.frmPO.chkBrwVends.Value(0)
				gui.frmPO.GsGCVendQte.ContextMenuAttach("ctxVendQte")
				F.Intrinsic.String.Replace(V.Local.sPart,"'","''",V.Local.sPart)
				F.Intrinsic.Control.CallSub(GetVendorQuotes,"Part",V.Local.sPart,"Loc",V.Local.sLoc)
			F.Intrinsic.Control.Else
				Gui.frmPO.chkBrwVends.Value(1)
				F.Intrinsic.Control.CallSub(chkBrwVends_Click)
			F.Intrinsic.Control.EndIf
		
		F.Intrinsic.Control.CaseAny("JOB","SUFFIX","SEQUENCE")
			F.Intrinsic.String.ConcatCallWrapperArgs("7",V.DataTable.[V.Local.sDT](V.Args.RowIndex).JOB!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).SUFFIX!FieldValTrim,"A",V.Local.sParams)
			F.Global.General.CallWrapperSync(450000,V.Local.sParams)
		F.Intrinsic.Control.Case("POLINENUM")
			f.Intrinsic.String.Build("Job Sequence: {0}-{1}-{2}:{4}{3}",V.DataTable.[V.Local.sDT](V.Args.RowIndex).JOB!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).SUFFIX!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).Sequence!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).POLineNum!FieldValTrim,v.Ambient.NewLine,v.Local.sMsg)
			f.Intrinsic.UI.SetClipboardText(v.Local.sMsg)
			f.Intrinsic.UI.Msgbox(v.Local.sMsg,"PO for Job Sequences")		
		F.Intrinsic.Control.Case("NOTES")
			f.Intrinsic.String.Build("Job Sequence: {0}-{1}-{2}:{4}{3}",V.DataTable.[V.Local.sDT](V.Args.RowIndex).JOB!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).SUFFIX!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).Sequence!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).NOTES!FieldValTrim,v.Ambient.NewLine,v.Local.sMsg)
			f.Intrinsic.UI.SetClipboardText(v.Local.sMsg)
			f.Intrinsic.String.Build("Job Sequence: {0}-{1}-{2}",V.DataTable.[V.Local.sDT](V.Args.RowIndex).JOB!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).SUFFIX!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).Sequence!FieldValTrim,v.Local.sPrompt)
			f.Intrinsic.UI.Inputbox("Job Sequence Note",v.Local.sPrompt,V.DataTable.[V.Local.sDT](V.Args.RowIndex).NOTES!FieldValTrim,v.Local.sNote)
			f.Intrinsic.String.Trim(v.Local.sNote,v.Local.sNote)
			f.Intrinsic.Control.If(v.Local.sNote,<>,"***CANCEL***")
				f.Intrinsic.String.Build("Select * from GCG_4936_Notes where JSS = '{0}{1}{2}'",V.DataTable.[V.Local.sDT](V.Args.RowIndex).JOB!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).SUFFIX!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).Sequence!FieldValTrim,v.Local.sSQL)
				f.ODBC.Connection!con.ExecuteAndReturn(v.Local.ssql,v.Local.sRet)
				f.Intrinsic.Control.If(v.Local.sRet.Trim,=,"")
					f.Intrinsic.String.Build("Insert into GCG_4936_Notes (JSS,Notes) values ('{0}{1}{2}','{3}')",V.DataTable.[V.Local.sDT](V.Args.RowIndex).JOB!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).SUFFIX!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).Sequence!FieldValTrim,v.Local.sNote.PSQLFriendly,v.Local.ssql)
				f.Intrinsic.Control.Else
					f.Intrinsic.String.Build("Update GCG_4936_Notes set Notes = '{3}' where JSS = '{0}{1}{2}'",V.DataTable.[V.Local.sDT](V.Args.RowIndex).JOB!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).SUFFIX!FieldValTrim,V.DataTable.[V.Local.sDT](V.Args.RowIndex).Sequence!FieldValTrim,v.Local.sNote.PSQLFriendly,v.Local.ssql)
				f.Intrinsic.Control.EndIf
				f.ODBC.Connection!con.Execute(v.Local.ssql)
				F.Data.DataTable.SetValue("PJ",v.Args.RowIndex,"Notes",v.Local.sNote)
			f.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.CaseAny("Select","SELECT","SelectRow","SELECTROW")
			
			v.Local.bValue.Set(v.DataTable.[V.Local.sDT](v.Args.RowIndex).Select!FieldVal)
			f.Data.Datatable.SetValue(v.Local.sDT,v.Args.RowIndex,"Select",v.Local.bValue.Not)
			
	F.Intrinsic.Control.EndSelect
		
	F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.gsPJ_RowCellClick.End

Program.Sub.PJ_CreateNewManual.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iRowCnt.Declare
	V.Local.iRowCnt2.Declare
	V.Local.iRow.Declare
	V.Local.sVendorNo.Declare
	V.Local.sParams.Declare
	V.Local.sDT.Declare
	v.Local.sRows.Declare
			
	f.Intrinsic.Control.If(v.DataTable.PJ.Exists)

		Gui.frmPO.gsPJ.GetSelectedRows("gvPJ",V.Local.sRows)
		f.Intrinsic.Control.If(v.Local.sRows,<>,"")
			f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
			f.Intrinsic.Control.If(v.Local.sRows.UBound,>,0)
				f.Intrinsic.UI.Msgbox("Please highlight only 1 row to Create Manual","Attention")
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.Else
				v.Local.iRow.Set(v.local.sRows(0))
				Gui.frmPO.gsPJ.GetCellValueByColumnName("gvPJ","Vendor",V.Local.iRow,V.Local.sVendorNo)
				V.Local.sDT.Set("PJ")
			
				F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM V_PO_HEADER;",V.Local.iRowCnt)
				F.Intrinsic.String.ConcatCallWrapperArgs("N","",V.Local.sVendorNo,V.Local.sParams)
				F.Global.General.CallWrapperSync(175200,V.Local.sParams)
				F.ODBC.Connection!con.ExecuteAndReturn("SELECT COUNT(*) FROM V_PO_HEADER;",V.Local.iRowCnt2)
				F.Intrinsic.Control.If(V.Local.iRowCnt,<>,V.Local.iRowCnt2)
					'Remove/Hide line from the PO Screen
					F.Data.DataTable.DeleteRow(V.Local.sDT,V.Local.iRow)
					F.Data.DataTable.AcceptChanges(V.Local.sDT)
				F.Intrinsic.Control.EndIf
			f.Intrinsic.Control.EndIf		
		f.Intrinsic.Control.Else
			f.Intrinsic.UI.Msgbox("Please highlight a row.","Attention")
			f.Intrinsic.Control.ExitSub
		f.Intrinsic.Control.EndIf

	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.PJ_CreateNewManual.End

Program.Sub.MenuClickSelectAllRows.Start
'Select All Rows
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	F.Intrinsic.Control.SelectCase(V.Screen.frmPO!tabPO.Tab)
		f.Intrinsic.Control.Case(0)
			f.Intrinsic.Control.If(v.DataTable.dtPO.Exists)
				f.Data.DataTable.SetValue("dtPO",-1,"Select",True)
			f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.Case(1)
			f.Intrinsic.Control.If(v.DataTable.dtPODrop.Exists)
				f.Data.DataTable.SetValue("dtPODrop",-1,"Select",True)
			f.Intrinsic.Control.EndIf	
			
		f.Intrinsic.Control.Case(2)
			f.Intrinsic.Control.If(v.DataTable.dtReqs.Exists)
				f.Data.DataTable.SetValue("dtReqs",-1,"Select",True)
			f.Intrinsic.Control.EndIf			

		f.Intrinsic.Control.Case(3)
			f.Intrinsic.Control.If(v.DataTable.PJ.Exists)
				f.Data.DataTable.SetValue("PJ",-1,"SelectRow",True)
			f.Intrinsic.Control.EndIf	
	F.Intrinsic.Control.EndSelect


F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickSelectAllRows.End

Program.Sub.MenuClickDeselectAllRows.Start
'Deselect All Rows
F.Intrinsic.Control.Try
	V.Local.sError.Declare		
	F.Intrinsic.Control.SelectCase(V.Screen.frmPO!tabPO.Tab)
		f.Intrinsic.Control.Case(0)
			f.Intrinsic.Control.If(v.DataTable.dtPO.Exists)
				f.Data.DataTable.SetValue("dtPOFinal",-1,"SEL",False)
			f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.Case(1)
			f.Intrinsic.Control.If(v.DataTable.dtPODrop.Exists)
				f.Data.DataTable.SetValue("dtPODrop",-1,"Select",False)
			f.Intrinsic.Control.EndIf
			
		f.Intrinsic.Control.Case(2)
			f.Intrinsic.Control.If(v.DataTable.dtReqs.Exists)
				f.Data.DataTable.SetValue("dtReqs",-1,"Select",False)
			f.Intrinsic.Control.EndIf			

		f.Intrinsic.Control.Case(3)
			f.Intrinsic.Control.If(v.DataTable.PJ.Exists)
				f.Data.DataTable.SetValue("PJ",-1,"SelectRow",False)
			f.Intrinsic.Control.EndIf	
	F.Intrinsic.Control.EndSelect	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickDeselectAllRows.End

Program.Sub.MenuClickSelectHighlightedRows.Start
'Select Highlighted Rows
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iCnt.Declare
	v.Local.sRows.Declare
	
	F.Intrinsic.Control.SelectCase(V.Screen.frmPO!tabPO.Tab)
		f.Intrinsic.Control.Case(0)
			f.Intrinsic.Control.If(v.Global.gvPO.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			gui.frmPO.GsGCPO.GetSelectedRows("gvPO",v.Local.sRows)
			f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
			f.Intrinsic.Control.For(v.Local.icnt,0,v.Local.sRows.UBound,1)
				f.Data.DataTable.SetValue("dtPO",v.Local.sRows(v.Local.iCnt),"Select",True)
			f.Intrinsic.Control.Next(v.Local.icnt)
			
		f.Intrinsic.Control.Case(1)
			f.Intrinsic.Control.If(v.Global.gvPODrop.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			gui.frmPO.GsGCPODrop.GetSelectedRows("gvPODrop",v.Local.sRows)
			f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
			f.Intrinsic.Control.For(v.Local.icnt,0,v.Local.sRows.UBound,1)
				f.Data.DataTable.SetValue("dtPODrop",v.Local.sRows(v.Local.iCnt),"Select",True)
			f.Intrinsic.Control.Next(v.Local.icnt)		
			
		f.Intrinsic.Control.Case(2)
			f.Intrinsic.Control.If(v.Global.gvReqs.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			gui.frmPO.GsGCReqs.GetSelectedRows("gvReqs",v.Local.sRows)
			f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
			f.Intrinsic.Control.For(v.Local.icnt,0,v.Local.sRows.UBound,1)
				f.Data.DataTable.SetValue("dtReqs",v.Local.sRows(v.Local.iCnt),"Select",True)
			f.Intrinsic.Control.Next(v.Local.icnt)			

		f.Intrinsic.Control.Case(3)
			f.Intrinsic.Control.If(v.Global.gvPJ.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			gui.frmPO.gsPJ.GetSelectedRows("gvPJ",v.Local.sRows)
			f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
			f.Intrinsic.Control.For(v.Local.icnt,0,v.Local.sRows.UBound,1)
				f.Data.DataTable.SetValue("PJ",v.Local.sRows(v.Local.iCnt),"SelectRow",True)
			f.Intrinsic.Control.Next(v.Local.icnt)	
	F.Intrinsic.Control.EndSelect	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickSelectHighlightedRows.End

Program.Sub.MenuClickDeselectHighlightedRows.Start
'Deselect Hightlighted Rows
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iCnt.Declare
	v.Local.sRows.Declare
	
	F.Intrinsic.Control.SelectCase(V.Screen.frmPO!tabPO.Tab)
		f.Intrinsic.Control.Case(0)
			f.Intrinsic.Control.If(v.Global.gvPONew.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			gui.frmPO.GsGCPO.GetSelectedRows("gvPONew",v.Local.sRows)
			f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
			f.Intrinsic.Control.For(v.Local.icnt,0,v.Local.sRows.UBound,1)
				f.Data.DataTable.SetValue("dtPOFinal",v.Local.sRows(v.Local.iCnt),"SEL",False)
			f.Intrinsic.Control.Next(v.Local.icnt)

		f.Intrinsic.Control.Case(1)
			f.Intrinsic.Control.If(v.Global.gvPODrop.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			gui.frmPO.GsGCPODrop.GetSelectedRows("gvPODrop",v.Local.sRows)
			f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
			f.Intrinsic.Control.For(v.Local.icnt,0,v.Local.sRows.UBound,1)
				f.Data.DataTable.SetValue("dtPODrop",v.Local.sRows(v.Local.iCnt),"Select",False)
			f.Intrinsic.Control.Next(v.Local.icnt)		
			
		f.Intrinsic.Control.Case(2)
			f.Intrinsic.Control.If(v.Global.gvReqs.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			gui.frmPO.GsGCReqs.GetSelectedRows("gvReqs",v.Local.sRows)
			f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
			f.Intrinsic.Control.For(v.Local.icnt,0,v.Local.sRows.UBound,1)
				f.Data.DataTable.SetValue("dtReqs",v.Local.sRows(v.Local.iCnt),"Select",False)
			f.Intrinsic.Control.Next(v.Local.icnt)	

		f.Intrinsic.Control.Case(3)
			f.Intrinsic.Control.If(v.Global.gvPJ.Not)
				f.Intrinsic.Control.ExitSub
			f.Intrinsic.Control.EndIf
			gui.frmPO.gsPJ.GetSelectedRows("gvPJ",v.Local.sRows)
			f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
			f.Intrinsic.Control.For(v.Local.icnt,0,v.Local.sRows.UBound,1)
				f.Data.DataTable.SetValue("PJ",v.Local.sRows(v.Local.iCnt),"SelectRow",False)
			f.Intrinsic.Control.Next(v.Local.icnt)	
	F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickDeselectHighlightedRows.End

Program.Sub.MenuClickChangeGLHighlightedRows_gsPJ.Start
'Change GL for Highlighted Rows
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iCnt.Declare
	v.Local.sRows.Declare
	v.Local.sGL.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare

	f.Intrinsic.Control.If(v.Global.gvPJ.Not)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	f.Intrinsic.UI.Inputbox("Enter GL number: ","Change GL","",v.Local.sGL)
	f.Intrinsic.String.Build("Select GL_Account from GL_Master where ltrim(rtrim(GL_Account)) = '{0}'",v.Local.sGL.Trim,v.Local.sSQL)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,=,"")
		f.Intrinsic.UI.Msgbox("Invalid GL Account","Attention")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	gui.frmPO.gsPJ.GetSelectedRows("gvPJ",v.Local.sRows)
	f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
	f.Intrinsic.Control.For(v.Local.icnt,0,v.Local.sRows.UBound,1)
		f.Data.DataTable.SetValue("PJ",v.Local.sRows(v.Local.iCnt),"GLAcct",v.Local.sGL.Trim)
	f.Intrinsic.Control.Next(v.Local.icnt)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickChangeGLHighlightedRows_gsPJ.End

Program.Sub.MenuClickChangeGLHighlightedRows_GsGCPO.Start
'Change GL for Highlighted Rows
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iCnt.Declare
	v.Local.sRows.Declare
	v.Local.sGL.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare

	f.Intrinsic.Control.If(v.Global.gvPO.Not)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	f.Intrinsic.UI.Inputbox("Enter GL number: ","Change GL","",v.Local.sGL)
	f.Intrinsic.String.Build("Select GL_Account from GL_Master where ltrim(rtrim(GL_Account)) = '{0}'",v.Local.sGL.Trim,v.Local.sSQL)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,=,"")
		f.Intrinsic.UI.Msgbox("Invalid GL Account","Attention")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	gui.frmPO.GsGCPO.GetSelectedRows("gvPO",v.Local.sRows)
	f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
	
	f.Intrinsic.Control.For(v.Local.icnt,0,v.Local.sRows.UBound,1)
		f.Data.DataTable.SetValue("dtPO",v.Local.sRows(v.Local.iCnt),"GLAcct",v.Local.sGL.Trim)
	f.Intrinsic.Control.Next(v.Local.icnt)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickChangeGLHighlightedRows_GsGCPO.End

Program.Sub.MenuClickChangeGLHighlightedRows_GsGCPODrop.Start
'Change GL for Highlighted Rows
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iCnt.Declare
	v.Local.sRows.Declare
	v.Local.sGL.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	'working
	
	f.Intrinsic.Control.If(v.Global.gvPODrop.Not)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	f.Intrinsic.UI.Inputbox("Enter GL number: ","Change GL","",v.Local.sGL)
	f.Intrinsic.String.Build("Select GL_Account from GL_Master where ltrim(rtrim(GL_Account)) = '{0}'",v.Local.sGL.Trim,v.Local.sSQL)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,=,"")
		f.Intrinsic.UI.Msgbox("Invalid GL Account","Attention")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	gui.frmPO.GsGCPODrop.GetSelectedRows("gvPODrop",v.Local.sRows)
	f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
	
	f.Intrinsic.Control.For(v.Local.icnt,0,v.Local.sRows.UBound,1)
		f.Data.DataTable.SetValue("dtPODrop",v.Local.sRows(v.Local.iCnt),"GLAcct",v.Local.sGL.Trim)
	f.Intrinsic.Control.Next(v.Local.icnt)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickChangeGLHighlightedRows_GsGCPODrop.End

Program.Sub.MenuClickChangeGLHighlightedRows_GsGCReqs.Start
'Change GL for Highlighted Rows
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iCnt.Declare
	v.Local.sRows.Declare
	v.Local.sGL.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare

	f.Intrinsic.Control.If(v.Global.gvReqs.Not)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	f.Intrinsic.UI.Inputbox("Enter GL number: ","Change GL","",v.Local.sGL)
	f.Intrinsic.String.Build("Select GL_Account from GL_Master where ltrim(rtrim(GL_Account)) = '{0}'",v.Local.sGL.Trim,v.Local.sSQL)
	f.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL,v.Local.sRet)
	f.Intrinsic.Control.If(v.Local.sRet,=,"")
		f.Intrinsic.UI.Msgbox("Invalid GL Account","Attention")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	gui.frmPO.GsGCReqs.GetSelectedRows("gvReqs",v.Local.sRows)
	f.Intrinsic.String.Split(v.Local.sRows,"*!*",v.Local.sRows)
	
	f.Intrinsic.Control.For(v.Local.icnt,0,v.Local.sRows.UBound,1)
		f.Data.DataTable.SetValue("dtReqs",v.Local.sRows(v.Local.iCnt),"GLAcct",v.Local.sGL.Trim)
	f.Intrinsic.Control.Next(v.Local.icnt)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickChangeGLHighlightedRows_GsGCReqs.End

''''''''''''''''''''''''
Program.Sub.PJ_MenuClickNewAuto.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.dDueDate.Declare
	V.Local.fExtension.Declare
	V.Local.sSelect.Declare
	v.Local.iSelect.Declare
	V.Local.sPO.Declare
	V.Local.sLastPO.Declare
	V.Local.sParams.Declare
	v.Local.sJob.Declare
	v.Local.sSuf.Declare
	v.Local.sSeq.Declare
	v.Local.sPart.Declare
	v.Local.sSQL.Declare
	V.Local.sDT.Declare
	V.Local.sLastVendor.Declare
	V.Local.sEmailList.Declare
	v.Local.sFilePath.Declare
	v.Local.sRet.Declare
	v.Local.bExists.Declare
	V.Local.sPOFull.Declare
	V.Local.sRecordType.Declare
	v.Local.sGSGC.Declare
	V.Local.sGV.Declare
	V.Local.sLoops.Declare
	V.Local.sPOHead.Declare
	V.Local.sPOLine.Declare
	
	f.Intrinsic.Control.If(v.Global.gvPJ.Not)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf

	V.Local.sDT.Set("PJ")
	v.Local.sGSGC.Set("GsPJ")
	V.Local.sGV.Set("gvPJ")
	
	
'	''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''	
'		'BM Make sure user clicks away from select box, otherwise won't read last value selected (Dumb work around for now manually selects different row. SelectCell method does not work as of 5/21/21. Corresponds to Sort code Column, which has no event tied to it)
'    F.Data.DataTable.Select(V.Local.sDT,"Select = True",V.Local.sSelect)
''This if takes care of case where user might make multiple row selections, but last one isn't being read, sets focus to first row they selected, column 13 so that the last one gets read
'    F.Intrinsic.Control.If(V.Local.sSelect, <>, "***NORETURN***")
'        F.Intrinsic.String.Split(V.Local.sSelect, "*!*", V.Local.sSelect)
'        Gui.frmPO.[v.Local.sGSGC].FocusCell(V.Local.sGV, V.Local.sSelect(0), 11)
''Add this case if users only selects one row. If you set focus to the row that is the last row selection the user made, does not register the select box as being clicked ;-;
'    F.Intrinsic.Control.Else
''If grid only has one row, we can only do focus cell on that same cell, which won't work for reading the select box's state. Notify user to try again and make sure to click away manually before going to context menu
'        F.Intrinsic.Control.If(V.DataTable.[V.Local.sDT].RowCount, =, 1)
'            F.Intrinsic.String.Build("With only one row in the grid, please make sure that you click{0}away from the row before bringing up the context menu to create AutoPOs.{0}Termination will exit and no new PO will be created.", V.Ambient.NewLine, V.Local.sError)
'            F.Intrinsic.UI.Msgbox(V.Local.sError, "No PO will be Created Error")
'            F.Intrinsic.Control.ExitSub
'        F.Intrinsic.Control.Else
'            Gui.frmPO.[v.Local.sGSGC].FocusCell(V.Local.sGV, 0, 11)
'            Gui.frmPO.[v.Local.sGSGC].FocusCell(V.Local.sGV, V.DataTable.[V.Local.sDT].RowCount--, 11)
'        F.Intrinsic.Control.EndIf
'    F.Intrinsic.Control.EndIf
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''	

	Gui.frmPO.lblStatus.Visible(True)
	Gui.frmPO.lblStatus.Caption("Generating POs....")
	
	F.Data.Dictionary.CreateFromSQL("DictDesc","con","Select RTRIM(Part), Description from V_INVENTORY_MSTR")
	F.Data.Dictionary.SetDefaultReturn("DictDesc","")
	
	
	F.Data.DataView.Create(V.Local.sDT,"dvPOSelected",22,"SelectRow = True And NAME_VENDOR <> '' and POLineNum = ''","VENDOR ASC")
	
	v.local.iSelect.Set(1)
	F.Intrinsic.Control.If(v.DataView.[V.local.sDT]!dvPOSelected.RowCount,>,0)
		F.Intrinsic.Control.For(V.Local.iCnt,0,v.DataView.[V.local.sDT]!dvPOSelected.RowCount--,1)
			F.Intrinsic.Control.If(v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).VENDOR!FieldValTrim,<>,"")
				F.Intrinsic.Control.If(V.Screen.frmPO!ddlPOs.Text,=,"Individual POs")
					'Scrub last vendor since user wants individual POs not Grouped POs
					V.Local.sLastVendor.Set("")
				F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.If(v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).VENDOR!Fieldvaltrim,<>,V.Local.sLastVendor)
					F.Intrinsic.Math.Add(v.local.iSelect,1,v.local.iSelect)
					F.Intrinsic.Control.If(V.Screen.frmPO!chkOpenPOMaint2.CheckedAsBoolean)
						F.Data.DataTable.AddRow("175100","ID",v.local.iSelect,"AutoNumber","Y","AddComments","Y","OpenPO","Y")
					F.Intrinsic.Control.Else
						F.Data.DataTable.AddRow("175100","ID",v.local.iSelect,"AutoNumber","Y","AddComments","Y","OpenPO","N")
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				
					V.Local.dDueDate.Set(v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).DATE_DUE!FieldValTrim)
					F.Intrinsic.Math.Mult(v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Purchase!FieldValTrim,v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Cost!FieldValTrim,V.Local.fExtension)
	
					F.Data.DataTable.AddRow("175100File","ID",v.local.iSelect,"Vendor",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).VENDOR!FieldValTrim,"Part",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Part!FieldValTrim,"Loc",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Location!FieldValTrim,"DueDate",V.Local.dDueDate.FormatYYYYMMDD,"Description",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).DESCRIPTION!FieldValTrim,"InvUM",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).UM!FieldValTrim,"InvCost",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Cost!FieldValTrim,"InvQty",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Purchase!FieldValTrim,"POUM",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).UMPurch!FieldValTrim,"POCost",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Cost!FieldValTrim,"POQty",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Purchase!FieldValTrim,"GLAccount",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).GLAcct!FieldValTrim,"Extension",V.Local.fExtension,"Job",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).JOB!FieldValTrim,"Suffix",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).SUFFIX!FieldValTrim,"Sequence",v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).Sequence!FieldValTrim)
			'F.Intrinsic.Control.Else
				'F.Data.DataTable.SetValue("[V.local.sDT]",v.local.iSelect,"SelectRow",False)
			F.Intrinsic.Control.EndIf
			V.Local.sLastVendor.Set(v.DataView.[V.local.sDT]!dvPOSelected(V.Local.iCnt).VENDOR!Fieldvaltrim)	
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf
	
	F.Intrinsic.Control.If(v.DataView.[V.local.sDT]!dvPOSelected.RowCount,>,0)
		F.Intrinsic.Control.CallSub(175100Sync)
		
		
		f.Data.Datatable.Create("dtRecordsToUpdate",True)
		F.Data.DataTable.AddColumn("dtRecordsToUpdate","PURCHASE_ORDER","String","")
		F.Data.DataTable.AddColumn("dtRecordsToUpdate","RECORD_NO","String","")
		
''''''''''''''''''''''''''''''''''''''''''''
		'F.Intrinsic.String.Build("select rtrim(PURCHASE_ORDER) as PURCHASE_ORDER, rtrim(RECORD_NO) as RECORD_NO, rtrim(PART) as PART, DESCRIPTION from V_PO_LINES where DESCRIPTION = '{0}'", V.Caller.User, V.Local.sSQL)
				
		'We just created the POs with the Callsub 175100, We need to know what the PO number(s) that were just created. Bao said we can do this be opening the file SLPURxxx.txt in File folder where xxx is the terminal. I originally did this by passing an identifier in the PO line description, then puttin the description back, but this was confusing to the customer.

		'Right here we will look for SLPURxxx.txt, read in the PO(s), Create a dtRecordsToUpdate from that list of POs (PURCHASE_ORDER, RECORD_NO).
		f.Intrinsic.String.Build("{0}\SLPUR{1}.txt",v.Caller.FilesDir,V.Caller.Terminal,v.Local.sFilePath)
		f.Intrinsic.file.Exists(v.Local.sFilePath,v.Local.bExists)
		f.Intrinsic.control.If(v.Local.bExists,=,True)
			f.Intrinsic.File.File2String(v.Local.sFilePath,v.Local.sRet)
			F.Intrinsic.String.Split(V.Local.sRet,V.Ambient.NewLine,V.Local.sRet)
			'Line 0 = B Record
			'Line 1 = C Record
			'Line 2 = A Record
			'Line 3 = First PO line
			F.Intrinsic.Math.Sub(V.Local.sRet.UBound,1,V.Local.sLoops)
			F.Intrinsic.Control.For(V.Local.iCnt,3,V.Local.sLoops,1)
				F.Intrinsic.String.Mid(V.Local.sRet(V.Local.iCnt),11,1,V.Local.sRecordType)
				F.Intrinsic.Control.If(V.Local.sRecordType,=,"A","OR",V.Local.sRecordType,=,"B",V.Local.sRecordType,=,"C")
					F.Intrinsic.Control.Next(V.Local.iCnt)
				F.Intrinsic.Control.EndIf

				F.Intrinsic.String.Left(V.Local.sRet(V.Local.iCnt),12,V.Local.sPOFull)
				F.Intrinsic.String.Left(V.Local.sPOFull,7,V.Local.sPOHead)
				F.Intrinsic.String.Right(V.Local.sPOFull,4,V.Local.sPOLine)
				
				'F.Intrinsic.String.Split(V.Local.sPOFull," ",V.Local.sPOFull)
				
				F.Data.Datatable.AddRow("dtRecordsToUpdate","PURCHASE_ORDER",V.Local.sPOHead,"RECORD_NO",V.Local.sPOLine)
			F.Intrinsic.Control.Next(V.Local.iCnt)
		f.Intrinsic.control.Else
			F.Intrinsic.Control.ExitSub
		F.Intrinsic.Control.EndIf
''''''''''''''''''''''''''''''''''''''''''''		
		
		'Emails
		f.Intrinsic.Control.If(v.Screen.frmPO!ddlEmail.Text.Trim,<>,"Do Not Email")
			V.Local.sEmailList.Set("***EMPTY***")
			v.Local.sLastPO.Set("")
			F.Intrinsic.Control.For(v.Local.iCnt,0,V.DataTable.dtRecordsToUpdate.RowCount--,1)
				V.Local.sPO.Set(V.DataTable.dtRecordsToUpdate(V.Local.iCnt).PURCHASE_ORDER!FieldvalTrim)
				F.Intrinsic.String.LPad(V.Local.sPO,"0",7,V.Local.sPO)
				F.Intrinsic.Control.If(V.Local.sPO,<>,V.Local.sLastPO)
					F.Intrinsic.Control.If(V.Local.sEmailList,=,"***EMPTY***")
						F.Intrinsic.String.Build("'{0}'",V.Local.sPO,V.Local.sEmailList)
					F.Intrinsic.Control.Else
						F.Intrinsic.String.Build("{0},'{1}'",V.Local.sEmailList,V.Local.sPO,V.Local.sEmailList)
					F.Intrinsic.Control.EndIf
				F.Intrinsic.Control.EndIf
				v.Local.sLastPO.Set(V.Local.sPO)
			F.Intrinsic.Control.Next(V.Local.iCnt)
		
			F.Intrinsic.Control.If(V.Local.sEmailList,<>,"***EMPTY***")
				F.Intrinsic.Control.CallSub(GenerateEmail,"EmailList",V.Local.sEmailList)
			F.Intrinsic.Control.EndIf	
		f.Intrinsic.Control.EndIf

		F.Data.DataTable.Close("dtRecordsToUpdate")
	F.Intrinsic.Control.EndIf
	
		'Remove Lines from DataTable
	F.Data.DataTable.Select(V.Local.sDT,"SelectRow = True And Name_Vendor <> ''",V.Local.sSelect)
	F.Intrinsic.Control.If(V.Local.sSelect,<>,"***NORETURN***")
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Intrinsic.Control.For(V.Local.iCnt,V.Local.sSelect.UBound,0,-1)
			v.Local.iSelect.Set(V.Local.sSelect(V.Local.iCnt))
			'Delete Rows
			F.Data.DataTable.DeleteRow(V.Local.sDT,v.Local.iSelect)
			F.Data.DataTable.AcceptChanges(V.Local.sDT)
		F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Data.DataTable.SetValue(V.Local.sDT,-1,"SelectRow",False)
	F.Intrinsic.Control.EndIf


'	F.Intrinsic.Control.For(V.Local.iCnt,v.DataView.[V.local.sDT]!dvPOSelected.RowCount--,0,-1)
'		F.Intrinsic.Control.If(v.DataView.[V.local.sDT]!dvPOSelected(v.local.iCnt).Vendor!FieldValTrim,<>,"")
'			'Remove Row From Grid
'			F.Data.DataView.deleteRow(V.local.sDT,"dvPOSelected",v.local.iCnt)
'			F.Data.DataTable.AcceptChanges(V.local.sDT)
'		F.Intrinsic.Control.EndIf
'	F.Intrinsic.Control.Next(V.Local.iCnt)

	F.Data.Dictionary.Close("DictDesc")
	F.Data.DataView.Close(V.Local.sDT,"dvPOSelected")

		'Why does the DT PJ not filter out lines that have POs already? How does PO reqs work with this?
		
	Gui.frmPO.lblStatus.Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.PJ_MenuClickNewAuto.End

Program.Sub.PJ_MenuClickCreateAutoPOs.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iCnt.Declare
	V.Local.iCnt2.Declare
	V.Local.dDueDate.Declare
	V.Local.fExtension.Declare
	V.Local.sSelect.Declare
	V.Local.iPO.Declare
	V.Local.sPO.Declare
	V.Local.iPOLine.Declare
	V.Local.sPOLine.Declare
	V.Local.sFilter.Declare
	V.Local.sStatus.Declare
	V.Local.sReturnFileName.Declare
	V.Local.sSQL.Declare
	V.Local.sFileName.Declare
	V.Local.sPURORDER.Declare
	V.Local.sEmailList.Declare
	V.Local.sName.Declare
	V.Local.sNameSplit.Declare
	V.Local.sBuyerCode.Declare
	V.Local.sGV.Declare
	V.Local.sDT.Declare
	v.Local.sParams.Declare
	v.Local.iSelect.Declare
	

	V.Local.sGV.Set("gvPJ")
	V.Local.sDT.Set("PJ")
	
	V.Local.sEmailList.Set("***EMPTY***")
	
	'Get Buyer Code
	F.Global.Security.GetFullName(V.Caller.User,V.Local.sName)
	F.Intrinsic.String.Split(V.Local.sName," ",V.Local.sNameSplit)
	F.Intrinsic.Control.If(V.Local.sNameSplit.UBound,=,2)
		F.Intrinsic.String.Build("{0} {1}",V.Local.sNameSplit(0),V.Local.sNameSplit(2),V.Local.sName)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Build("Select Buyer_Code From V_Buyers Where Upper(Buyer) = Upper('{0}');",V.Local.sName,V.Local.sSQL)
	F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.sBuyerCode)
	'Create Grouped POs
	F.Data.DataView.Create(V.Local.sDT,"dvPOVends",22,"SelectRow = True And Name_Vendor <> ''","")
	F.Data.DataView.ToDataTableDistinct(V.Local.sDT,"dvPOVends","dtPOVends","Vendor*!*Name_Vendor",True)
	F.Data.DataView.Close(V.Local.sDT,"dvPOVends")
	F.Intrinsic.Control.For(V.Local.iCnt,0,V.DataTable.dtPOVends.RowCount--,1)
		F.Intrinsic.String.Build("SelectRow = True And Vendor = '{0}'",V.DataTable.dtPOVends(V.Local.iCnt).Vendor!FieldValTrim,V.Local.sFilter)
		F.Data.DataTable.Select(V.Local.sDT,V.Local.sFilter,V.Local.sSelect)
		F.Intrinsic.Control.If(V.Local.sSelect,<>,"***NORETURN***")
			F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
			F.Intrinsic.Control.For(V.Local.iCnt2,0,V.Local.sSelect.UBound,1)
				'Set PO Number
				F.ODBC.Connection!con.ExecuteAndReturn("Select Last_PO_Num From Last_PO Where Ass_Sys = 'PUR' And Ass_Sub_Sys = 'CTL';",V.Local.iPO)
				F.Intrinsic.String.LPad(V.Local.iPO.++,"0",7,V.Local.sPO)
				'Set PO Line
				F.Intrinsic.Math.Add(V.Local.iCnt2,1,V.Local.iPOLine)
				F.Intrinsic.String.LPad(V.Local.iPOLine,"0",3,V.Local.sPOLine)
				'Create Upload File: PURORDER.txt
				v.Local.iSelect.Set(V.Local.sSelect(V.Local.iCnt2))
				F.Intrinsic.Control.CallSub("PJ_GenerateGroupedPOs","PO",V.Local.sPO,"POLine",V.Local.sPOLine,"Vendor",V.DataTable.dtPOVends(V.Local.iCnt).Vendor!FieldValTrim,"DueDate",V.DataTable.[V.Local.sDT](v.local.iSelect).DATE_DUE!FieldValTrim,"Part",V.DataTable.[V.Local.sDT](v.local.iSelect).Part!FieldValTrim,"Loc",V.DataTable.[V.Local.sDT](v.local.iSelect).Location!FieldValTrim,"Description",V.DataTable.[V.Local.sDT](v.local.iSelect).Description!FieldValTrim,"UM",V.DataTable.[V.Local.sDT](v.local.iSelect).UMPurch!FieldValTrim,"PL",V.DataTable.[V.Local.sDT](v.local.iSelect).PL!FieldValTrim,"Cost",V.DataTable.[V.Local.sDT](v.local.iSelect).Cost!FieldValTrim,"Qty",V.DataTable.[V.Local.sDT](v.local.iSelect).Purchase!FieldValTrim,"BuyerCode",V.Local.sBuyerCode,"GLAcct",V.DataTable.[V.Local.sDT](v.local.iSelect).GLAcct!FieldValTrim,"ReqNo",V.DataTable.[V.Local.sDT](v.local.iSelect).PO_Req_Number!FieldVal,"ReqLine",V.DataTable.[V.Local.sDT](v.local.iSelect).PO_Req_Line!FieldVal,"Job",V.DataTable.[V.Local.sDT](v.local.iSelect).Job!FieldVal,"Suffix",V.DataTable.[V.Local.sDT](v.local.iSelect).Suffix!FieldVal,"Seq",V.DataTable.[V.Local.sDT](v.local.iSelect).Sequence!FieldVal,"MFG_Part",V.DataTable.[V.Local.sDT](v.local.iSelect).MFG_Part!FieldVal,"MFG_Name",V.DataTable.[V.Local.sDT](v.local.iSelect).MFG_Name!FieldVal)
				'Set data to text file variable
				F.Intrinsic.Control.If(V.Local.sPURORDER,=,"")
					V.Local.sPURORDER.Set(v.Args.POTEXT)
				F.Intrinsic.Control.Else
					F.Intrinsic.String.Build("{0}{1}",V.Local.sPURORDER,V.Args.POTEXT,V.Local.sPURORDER)
				F.Intrinsic.Control.EndIf
				'Update On Order PO in Invenoty_Mstr (I1MST)
				F.Intrinsic.String.Build("Update Inventory_Mstr Set Qty_OnOrder_PO = Qty_OnOrder_PO + {0} Where Part = '{1}' And Location = '{2}';",V.DataTable.[V.Local.sDT](v.local.iSelect).Purchase!FieldValTrim,V.DataTable.[V.Local.sDT](v.local.iSelect).Part!FieldValTrim,V.DataTable.[V.Local.sDT](v.local.iSelect).Location!FieldValTrim,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Next(V.Local.iCnt2)
			'Write PO info to PURORDER.txt
			F.Intrinsic.String.Build("{0}\PURORDER.txt",V.Caller.FilesDir,V.Local.sFileName)
			F.Intrinsic.File.String2File(V.Local.sFileName,V.Local.sPURORDER)
			'Upload PO File
			F.Global.Callwrapper.New("POUpload","Purchasing.PurchaseOrderUpload")
			F.Global.Callwrapper.SetProperty("POUpload","Mode",0)
			F.Global.Callwrapper.SetProperty("POUpload","FileName","PURORDER")
			F.Global.CallWrapper.Run("POUpload")
			F.Global.CallWrapper.GetProperty("POUpload","Status",V.Local.sStatus)
			F.Global.CallWrapper.GetProperty("POUpload","ReturnFileName",V.Local.sReturnFileName)
			'Update Last PO Number
			F.Intrinsic.String.Build("Update Last_PO Set Last_PO_Num = '{0}' Where Ass_Sys = 'PUR' And Ass_Sub_Sys = 'CTL';",V.Local.sPO,V.Local.sSQL)
			F.ODBC.Connection!Con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.If(V.Local.sEmailList,=,"***EMPTY***")
				F.Intrinsic.String.Build("'{0}'",V.Local.sPO,V.Local.sEmailList)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("{0},'{1}'",V.Local.sEmailList,V.Local.sPO,V.Local.sEmailList)
			F.Intrinsic.Control.EndIf
			'Delete PURORDER.txt
			F.Intrinsic.File.DeleteFile(V.Local.sFileName)
			V.Local.sPURORDER.Set("")
			
			'Open the PO for maintenance before adding another
			f.Intrinsic.Control.If(v.Screen.frmPO!chkOpenPOMaint2.Value,=,1)
				F.Intrinsic.String.ConcatCallWrapperArgs("O",V.Local.sPO,"",V.Local.sParams)
				F.Global.General.CallWrapperSync(175200,V.Local.sParams)				
			f.Intrinsic.Control.EndIf
			
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Data.DataTable.Close("dtPOVends")
	
	'Remove Lines from DataTable
	F.Data.DataTable.Select(V.Local.sDT,"SelectRow = True And Name_Vendor <> ''",V.Local.sSelect)
	F.Intrinsic.Control.If(V.Local.sSelect,<>,"***NORETURN***")
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Intrinsic.Control.For(V.Local.iCnt,V.Local.sSelect.UBound,0,-1)
			v.Local.iSelect.Set(V.Local.sSelect(V.Local.iCnt))
			'Delete Rows
			F.Data.DataTable.DeleteRow(V.Local.sDT,v.Local.iSelect)
			F.Data.DataTable.AcceptChanges(V.Local.sDT)
		F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Data.DataTable.SetValue(V.Local.sDT,-1,"SelectRow",False)
	F.Intrinsic.Control.EndIf

	'Emails ,
	f.Intrinsic.Control.If(v.Screen.frmPO!ddlEmail.Text.Trim,<>,"Do Not Email")
		F.Intrinsic.Control.If(V.Local.sEmailList,<>,"***EMPTY***")
			F.Intrinsic.Control.CallSub(GenerateEmail,"EmailList",V.Local.sEmailList)
		F.Intrinsic.Control.EndIf	
	f.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.PJ_MenuClickCreateAutoPOs.End

Program.Sub.PJ_GenerateGroupedPOs.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.sVenName.Declare
	V.Local.sVenAdd1.Declare
	V.Local.sVenAdd2.Declare
	V.Local.sVenState.Declare
	V.Local.sVenZip.Declare
	V.Local.sVenCity.Declare
	V.Local.sVenAttn.Declare
	V.Local.sVenGL.Declare
	V.Local.sGL.Declare
	V.Local.sCurrency.Declare
	V.local.sPODate.Declare
	V.local.sPODueDate.Declare
	V.Local.sRet.Declare
	V.Local.sTemp.Declare
	V.Local.sTempFull.Declare

	F.Intrinsic.Control.If(V.Args.POLine,=,001)
	'-------------------------------------------------------------------# Header #-------------------------------------------------------------------
		F.Intrinsic.String.Build("Select A.Vendor,A.Name_Vendor,A.Address1,A.Address2,A.City,A.Rec,A.State,A.Code_Zip,A.Country,A.Attention,A.Normal_GL_Account,B.Default_Currency As CurrencyCode From V_Vendor_Master A Left Join V_Vendor_Intl As B on A.Vendor = B.Vendor Where A.Vendor = '{0}';",V.Args.Vendor,V.Local.sSQL)
		F.ODBC.Connection!Con.OpenLocalRecordsetRO("rstVend",V.Local.sSQL)
		F.Intrinsic.Control.If(V.ODBC.Con!rstVend.EOF,=,False)
			V.Local.sVenName.set(V.ODBC.Con!rstVend.FieldVal!Name_Vendor)
			V.Local.sVenAdd1.set(V.ODBC.Con!rstVend.FieldVal!Address1)
			V.Local.sVenAdd2.set(V.ODBC.Con!rstVend.FieldVal!Address2)
			V.Local.sVenState.set(V.ODBC.Con!rstVend.FieldVal!State)
			V.Local.sVenZip.set(V.ODBC.Con!rstVend.FieldVal!Code_Zip)
			V.Local.sVenCity.set(V.ODBC.Con!rstVend.FieldVal!City)
			V.Local.sVenAttn.set(V.ODBC.Con!rstVend.FieldVal!Attention)
			V.Local.sVenGL.set(V.ODBC.Con!rstVend.FieldVal!Normal_GL_Account)
			V.Local.sCurrency.set(V.ODBC.Con!rstVend.FieldVal!CurrencyCode)
		F.Intrinsic.Control.EndIf
		F.ODBC.Con!rstVend.Close
		'PO Date
		F.Intrinsic.String.Format(V.Ambient.Date,"MMDDYY",V.local.sPODate)
		'RequiredDate,DueDate
		F.Intrinsic.String.Format(V.Args.DueDate,"MMDDYY",V.local.sPODueDate)
	'A Record
		'PO,Rec Type
		F.Intrinsic.String.Concat(V.Args.PO,"  A",V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",12,V.Local.sTemp)
		'Buyer
		V.Local.sRet.Set("")
		F.Intrinsic.String.RPad(V.Args.BuyerCode," ",7,V.Local.sRet)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sRet,V.Local.sTemp)
		'Ship Via
		V.Local.sRet.Set("")
		F.Intrinsic.String.RPad(V.Local.sRet," ",15,V.Local.sRet)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sRet,V.Local.sTemp)
		'FOB
		V.Local.sRet.Set("")
		F.Intrinsic.String.RPad(V.Local.sRet," ",15,V.Local.sRet)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sRet,V.Local.sTemp)
		'Terms
		V.Local.sRet.Set("")
		F.Intrinsic.String.RPad(V.Local.sRet," ",12,V.Local.sRet)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sRet,V.Local.sTemp)
		'PO Date
		F.Intrinsic.String.Rpad(V.Local.sTemp," ",195,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.local.sPODate,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",207,V.Local.sTemp)
		'Date Due
		F.Intrinsic.String.Concat(V.Local.sTemp,V.local.sPODueDate,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",229,V.Local.sTemp)
		'GL Account
		V.Local.sGL.Set(V.Args.GLAcct)
		F.Intrinsic.Control.If(V.Local.sGL.Trim,=,"")
			V.Local.sGL.Set(V.Local.sVenGL)
		F.Intrinsic.Control.EndIf
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sGL,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",267,V.Local.sTemp)
		'Vendor #
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Vendor,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",298,V.Local.sTemp)
		'User 1
		F.Intrinsic.String.Concat(V.Local.sTemp,"",V.Local.sTemp)
		'New Line
		F.Intrinsic.String.Concat(V.Local.sTempFull,V.Local.sTemp,V.Ambient.NewLine,V.Local.sTempFull)
	'B Record
		'PO,Rec Type,Name Vendor
		F.Intrinsic.String.Concat(V.Args.PO,"  B",V.Local.sVenName,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",40,V.Local.sTemp)
		'Vendor Address
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenAdd1,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",70,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenAdd2,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",190,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenCity,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",210,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenState,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",212,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenZip,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",237,V.Local.sTemp)
		'Attention
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sVenAttn,V.Local.sTemp)
		'New Line
		F.Intrinsic.String.Concat(V.Local.sTempFull,V.Local.sTemp,V.Ambient.NewLine,V.Local.sTempFull)
	'C Record
		F.Intrinsic.String.Concat(V.Args.PO,"  C",V.DataTable.dtCompany(0).NAME_COMPANY!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",40,V.Local.sTemp)
		'Vendor Address
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).ADDRESS1!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",70,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).ADDRESS2!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",190,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).CITY!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",210,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).STATE!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",212,V.Local.sTemp)
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).CODE_ZIP!FieldValTrim,V.Local.sTemp)
		F.Intrinsic.String.RPad(V.Local.sTemp," ",237,V.Local.sTemp)
		'Attention
		F.Intrinsic.String.Concat(V.Local.sTemp,V.DataTable.dtCompany(0).ATTENTION!FieldValTrim,V.Local.sTemp)
		'New Line
		F.Intrinsic.String.Concat(V.Local.sTempFull,V.Local.sTemp,V.Ambient.NewLine,V.Local.sTempFull)
	F.Intrinsic.Control.EndIf
	
	'-------------------------------------------------------------------# Line #-------------------------------------------------------------------
	'PO, Line,Part
	F.Intrinsic.String.Concat(V.Args.PO,V.Args.POLine,V.Args.Part,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",30,V.Local.sTemp)
	'Loc
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Loc,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",32,V.Local.sTemp)
	'Description
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Description.Trim,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",62,V.Local.sTemp)
	'UM
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.UM.Trim,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",65,V.Local.sTemp)
	'Work Order Number
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.JOB,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",71,V.Local.sTemp)
	'Work Order Sequence
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.SEQ,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",77,V.Local.sTemp)
	'Requisition Number
	F.Intrinsic.Control.If(V.Args.ReqNo.Trim,=,"")
		F.Intrinsic.String.Concat(V.Local.sTemp,"      ",V.Local.sTemp)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.ReqNo,V.Local.sTemp)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",87,V.Local.sTemp)
	'Taxable
	F.Intrinsic.String.Concat(V.Local.sTemp,"",V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",100,V.Local.sTemp)
	'GL Account
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.GLACCT,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",121,V.Local.sTemp)
	'PL
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.PL.Trim,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",124,V.Local.sTemp)
	'Required Date Line DueDate
	F.Intrinsic.String.Format(V.Args.DueDate,"MMDDYY",V.local.sPODueDate)
	F.Intrinsic.String.Concat(V.Local.sTemp,V.local.sPODueDate,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",136,V.Local.sTemp)
	'Cost
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Cost,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",168,V.Local.sTemp)
	'Qty
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Qty,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",266,V.Local.sTemp)
	'Work Order Sequence
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.SUFFIX,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",269,V.Local.sTemp)
	'Manafacturer's Part
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.MFG_Part,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",292,V.Local.sTemp)
	'Manufacturer Name
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.Mfg_Name,V.Local.sTemp)
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",339,V.Local.sTemp)
	'Currency
	F.Intrinsic.String.Concat(V.Local.sTemp,V.Local.sCurrency,V.Local.sTemp)
	F.Intrinsic.String.RPad(V.Local.sTemp," ",548,V.Local.sTemp)
	'Requisition Line
	F.Intrinsic.Control.If(V.Args.ReqLine.Trim,=,"")
		F.Intrinsic.String.Concat(V.Local.sTemp,"   ",V.Local.sTemp)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Concat(V.Local.sTemp,V.Args.ReqLine,V.Local.sTemp)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.String.Rpad(V.Local.sTemp," ",551,V.Local.sTemp)
	'Add line to variable that will be written to PURORDER.txt
	F.Intrinsic.String.Concat(V.Local.sTempFull,V.Local.sTemp,V.Ambient.NewLine,V.Local.sTempFull)
	
	'Return upload text
	F.Intrinsic.Variable.AddRV("POTEXT",V.Local.sTempFull)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.PJ_GenerateGroupedPOs.End

Program.Sub.gsPJ_CellValueChanged.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	V.Local.fCost.Declare
	v.Local.sPart.Declare
	v.Local.sFilter.Declare
	
	f.Intrinsic.Control.If(v.Args.Column.UCase,=,"COST")
		gui.frmPO.gsPJ.GetCellValueByColumnName("gvPJ","COST",v.Args.RowIndex,v.Local.fCost)
		gui.frmPO.gsPJ.GetCellValueByColumnName("gvPJ","PART",v.Args.RowIndex,v.Local.sPart)
		f.Intrinsic.String.Build("Trim(Part) = '{0}'",v.Local.sPart.Trim,v.Local.sFilter)
		f.Data.DataView.Create("PJ","dvCostPJ",22,v.Local.sFilter,"")
		f.Data.DataView.SetValue("PJ","dvCostPJ",-1,"COST",V.Local.fCost)
		f.Data.DataView.Close("PJ","dvCostPJ")
	f.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.gsPJ_CellValueChanged.End

Program.Sub.FillPOData.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	v.Local.sSQL.Declare(string)
	v.Local.sDTName.Declare(string)
	v.Local.iCnt.Declare
	v.Local.sFilter.Declare
	v.Local.sPOLineNums.Declare
		
	v.Local.sDTName.Set(v.Args.dt)
	
	'Get all PO's for jobs selected, fill PO number and line, PO qty, PO sent, PO confirmed, ship to address 1 into grid
	'f.Intrinsic.String.Build("select a.purchase_order, a.record_no, concat(concat(a.job,a.suffix),a.sequence) as JSS, convert(date_due_line,sql_date) as date_due_line, qty_received-qty_reject as qty_recv, b.address_1_pay, case when c.conf='1' then convert(1,sql_bit) else convert(0,sql_bit) end as Conf, case when c.column1='1' then convert(1,sql_bit) else convert(0,sql_bit) end as Sent, a.qty_order, d.buyer, ltrim(rtrim(d.vendor)) as Vendor, a.cost, c.column2 as PromDate from v_po_lines a inner join v_po_pay_to b on a.purchase_order=b.purchase_order left join gab_po_confchk c on a.purchase_order=c.purchase_order inner join v_po_header d on a.purchase_order=d.purchase_order where concat(a.job,a.suffix) >= '{0}{1}' and concat(a.job,a.suffix) <= '{2}{3}';",v.Screen.f_PO!txtWOStart.text,v.Screen.f_PO!txtWOSuffStart.text,v.Screen.f_PO!txtWOEnd.text,v.Screen.f_PO!txtWOSuffEnd.text,v.Local.sSQL)
	v.Local.sSQL.Set("select concat(concat(a.job,a.suffix),a.sequence) as JSS,a.purchase_order + '-' + left(a.record_no,3) as POLineNums from v_po_lines a inner join V_Job_Commitments c on a.Job = c.Job and a.Suffix = c.Suffix and a.Sequence = c.Sequence Order by JSS,POLineNums")
	
	f.Data.Dictionary.Create("POLineNumsDict")
	f.Data.DataTable.CreateFromSQL("dtPOData","con",v.Local.sSQL)
	f.Data.DataView.Create("dtPOData","dvPOData")
	f.Data.DataView.ToDataTableDistinct("dtPOData","dvPOData","DistinctSeqs","JSS",True)
	f.Intrinsic.Control.for(v.Local.iCnt,0,v.DataTable.DistinctSeqs.RowCount--,1)
		f.Intrinsic.String.Build("JSS = '{0}'",v.DataTable.DistinctSeqs(v.Local.iCnt).JSS!FieldValString,v.Local.sFilter)
		f.Data.DataView.SetFilter("dtPOData","dvPOData",v.Local.sFilter)
		f.Data.DataView.ToString("dtPOData","dvPOData","POLineNums","",",",v.Local.sPOLineNums)
		f.Data.Dictionary.AddItem("POLineNumsDict",v.DataTable.DistinctSeqs(v.Local.iCnt).JSS!FieldValString,v.Local.sPOLineNums)	
	f.Intrinsic.Control.Next(v.Local.iCnt)
	f.Data.Dictionary.SetDefaultReturn("POLineNumsDict","")
	
	f.Data.DataTable.FillFromDictionary(v.args.DT,"POLineNumsDict","JSS","POLineNum")

	
	f.Data.DataTable.Close("DistinctSeqs")
	f.Data.DataTable.Close("dtPOData")
	f.Data.Dictionary.Close("POLineNumsDict")


f.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
f.Intrinsic.Control.EndTry
Program.Sub.FillPOData.End

Program.Sub.Serialize.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.sSerialize.Declare
	v.Local.sControl.Declare
	v.Local.sGrid.Declare
	v.Local.iCnt.Declare
	v.Local.sItemControl.Declare
	v.Local.sItemGrid.Declare
	v.Local.sSQL.Declare
	v.Local.sUserID.Declare
	
	F.Global.Security.GetUserID(v.Caller.User,v.Caller.CompanyCode,v.Local.sUserID)
	
	f.Intrinsic.String.Split("GsGCPO,GsGCPODrop,GsGCReqs,gsPJ",",",v.Local.sControl)
	f.Intrinsic.String.Split("gvPO,gvPODrop,gvReqs,gvPJ",",",v.Local.sGrid)
	
	f.Intrinsic.Control.For(v.Local.iCnt,0,v.Local.sControl.UBound,1)
		v.Local.sItemControl.Set(v.Local.sControl(v.Local.iCnt))
		v.Local.sItemGrid.Set(v.Local.sGrid(v.Local.iCnt))	
	
		f.Intrinsic.Control.If(v.Global.[v.Local.sItemGrid])		
			'Delete old registry records
'			F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)
			F.ODBC.Connection!common.OpenCommonConnection
			f.Intrinsic.String.Build("Delete From Gs_Registry Where User_ID = '{0}' and Company = '{1}' and Reg_ID = '5988' and Seq = '1001' and Program = '{2}';",v.Local.sUserID,v.Caller.CompanyCode,v.Local.sItemGrid,v.Local.sSQL)
			F.ODBC.Connection!common.Execute(v.Local.sSQL)
			F.ODBC.Connection!common.Close
			'Serialize		
			gui.frmPO.[v.Local.sItemControl].Serialize(v.Local.sItemGrid,V.Local.sSerialize)
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,v.Local.sItemGrid,5988,1001,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)					
		f.Intrinsic.Control.EndIf
	
	f.Intrinsic.Control.Next(v.Local.iCnt)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.sSerialize.Declare

	'Deserialize
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,v.Args.sItemGrid,5988,1001,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize,<>,"")
		gui.frmPO.[v.Args.sItemControl].Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf	

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.Unload.Start
f.Intrinsic.Control.Try
	v.Local.sError.Declare
	
	F.Intrinsic.Control.If(V.ODBC.con.Exists,=,1)
		F.ODBC.Connection!con.close
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Unload.End

Program.Sub.ButtonPOAR_Click.Start
v.Local.iRet.Declare(boolean)
f.Global.General.LaunchMenuTask(794,0,V.Local.iRet)
Program.Sub.ButtonPOAR_Click.End

Program.Sub.CheckPOReqOpt.Start
F.Intrinsic.Control.Try
F.Global.General.ReadOption("400804",0,False,"0000",V.Global.bPOReq)

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.CheckPOReqOpt.End

Program.Sub.Checktable.Start
F.Intrinsic.Control.Try
V.Local.sError.Declare	
V.Local.bTable.Declare(Boolean)

F.ODBC.Connection!con.TableExists("GCG_5988_ReqUFs",V.Local.bTable)
F.Intrinsic.Control.If(V.Local.bTable,=,False)
	F.ODBC.Connection!Con.Execute("CREATE TABLE GCG_5988_ReqUFs(PO_Req_Number CHAR(6), PO_Req_Line CHAR(3), UF_1 CHAR(30), UF_2 CHAR(30), UF_3 CHAR(30), UF_4 CHAR(30), UF_5 CHAR(30));")
F.Intrinsic.Control.EndIf

F.ODBC.Connection!con.TableExists("GAB_4936_NOTES",V.Local.bTable)
F.Intrinsic.Control.If(V.Local.bTable,=,False)
	F.ODBC.Connection!Con.Execute("CREATE TABLE GAB_4936_NOTES(NID IDENTITY DEFAULT '0' CONSTRAINT UK_NID UNIQUE USING 0,PART CHAR(20) NOT NULL,LOC CHAR(2) NOT NULL,GSUSER CHAR(8),CREATE_DT DATETIME,NOTES LONGVARCHAR,EXPIRE_DT DATE);")
	F.ODBC.Connection!Con.Execute("CREATE INDEX GAB_4936_NOTES00 USING 1 ON GAB_4936_NOTES ( PART, LOC );")
	F.ODBC.Connection!Con.Execute("ALTER TABLE GAB_4936_NOTES ADD CONSTRAINT PK_NID PRIMARY KEY  ( NID ) USING 0;")
F.Intrinsic.Control.EndIf

F.ODBC.Connection!con.TableExists("GCG_4936_NOTES",V.Local.bTable)
F.Intrinsic.Control.If(V.Local.bTable,=,False)
	F.ODBC.Connection!Con.Execute("CREATE TABLE GCG_4936_NOTES ( JSS CHAR(15),NOTES LONGVARCHAR );")
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Checktable.End

Program.Sub.GsGCReqs_CellValueChanged.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.sSQL.Declare
	V.Local.sPO.Declare
	V.Local.sPO2.Declare
	V.Local.bConf.Declare
	V.Local.bConf2.Declare
	V.Local.iRows.Declare
	V.Local.iCnt.Declare
	V.Local.sPOLine.Declare
	V.Local.sLine.Declare
	V.Local.sParams.Declare
	V.Local.sText.Declare
	V.Local.sTextTbl.Declare
	v.Local.sReqNo.Declare
	v.Local.sReqLine.Declare
	V.Local.sUF1.Declare
	V.Local.sUF2.Declare
	V.Local.sUF3.Declare
	V.Local.sUF4.Declare
	V.Local.sUF5.Declare
	

	F.Intrinsic.Control.SelectCase(V.Args.column)	
			
			F.Intrinsic.Control.Case("UF_1")
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","PO_REQ_NUMBER",V.Args.RowIndex,V.Local.sReqNo)
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","PO_REQ_LINE",V.Args.RowIndex,V.Local.sReqLine)
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","UF_1",V.Args.RowIndex,V.Local.sUF1)
			F.Intrinsic.String.Build("SELECT * FROM GCG_5988_ReqUFs WHERE PO_REQ_NUMBER = '{0}' AND PO_REQ_LINE = '{1}';",V.Local.sReqNo,V.Local.sReqLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstReqUF",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstREQUF.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GCG_5988_ReqUFs(PO_REQ_NUMBER,PO_REQ_LINE,UF_1) VALUES('{0}','{1}','{2}');",V.Local.sReqNo,V.Local.sReqLine,V.Local.sUF1,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GCG_5988_ReqUFs SET UF_1 = '{0}' WHERE PO_REQ_NUMBER = '{1}' AND PO_REQ_LINE = '{2}';",V.Local.sUF1,V.Local.sReqNo,V.Local.sReqLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstReqUF.Close
			
			F.Intrinsic.Control.Case("UF_2")
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","PO_REQ_NUMBER",V.Args.RowIndex,V.Local.sReqNo)
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","PO_REQ_LINE",V.Args.RowIndex,V.Local.sReqLine)
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","UF_2",V.Args.RowIndex,V.Local.sUF2)
			F.Intrinsic.String.Build("SELECT * FROM GCG_5988_ReqUFs WHERE PO_REQ_NUMBER = '{0}' AND PO_REQ_LINE = '{1}';",V.Local.sReqNo,V.Local.sReqLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstReqUF",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstREQUF.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GCG_5988_ReqUFs(PO_REQ_NUMBER,PO_REQ_LINE,UF_2) VALUES('{0}','{1}','{2}');",V.Local.sReqNo,V.Local.sReqLine,V.Local.sUF2,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GCG_5988_ReqUFs SET UF_2 = '{0}' WHERE PO_REQ_NUMBER = '{1}' AND PO_REQ_LINE = '{2}';",V.Local.sUF2,V.Local.sReqNo,V.Local.sReqLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstReqUF.Close
			
			F.Intrinsic.Control.Case("UF_3")
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","PO_REQ_NUMBER",V.Args.RowIndex,V.Local.sReqNo)
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","PO_REQ_LINE",V.Args.RowIndex,V.Local.sReqLine)
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","UF_3",V.Args.RowIndex,V.Local.sUF3)
			F.Intrinsic.String.Build("SELECT * FROM GCG_5988_ReqUFs WHERE PO_REQ_NUMBER = '{0}' AND PO_REQ_LINE = '{1}';",V.Local.sReqNo,V.Local.sReqLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstReqUF",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstREQUF.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GCG_5988_ReqUFs(PO_REQ_NUMBER,PO_REQ_LINE,UF_3) VALUES('{0}','{1}','{2}');",V.Local.sReqNo,V.Local.sReqLine,V.Local.sUF3,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GCG_5988_ReqUFs SET UF_3 = '{0}' WHERE PO_REQ_NUMBER = '{1}' AND PO_REQ_LINE = '{2}';",V.Local.sUF3,V.Local.sReqNo,V.Local.sReqLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstReqUF.Close
			
			F.Intrinsic.Control.Case("UF_4")
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","PO_REQ_NUMBER",V.Args.RowIndex,V.Local.sReqNo)
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","PO_REQ_LINE",V.Args.RowIndex,V.Local.sReqLine)
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","UF_4",V.Args.RowIndex,V.Local.sUF4)
			F.Intrinsic.String.Build("SELECT * FROM GCG_5988_ReqUFs WHERE PO_REQ_NUMBER = '{0}' AND PO_REQ_LINE = '{1}';",V.Local.sReqNo,V.Local.sReqLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstReqUF",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstREQUF.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GCG_5988_ReqUFs(PO_REQ_NUMBER,PO_REQ_LINE,UF_4) VALUES('{0}','{1}','{2}');",V.Local.sReqNo,V.Local.sReqLine,V.Local.sUF4,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GCG_5988_ReqUFs SET UF_4 = '{0}' WHERE PO_REQ_NUMBER = '{1}' AND PO_REQ_LINE = '{2}';",V.Local.sUF4,V.Local.sReqNo,V.Local.sReqLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstReqUF.Close
			
			F.Intrinsic.Control.Case("UF_5")
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","PO_REQ_NUMBER",V.Args.RowIndex,V.Local.sReqNo)
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","PO_REQ_LINE",V.Args.RowIndex,V.Local.sReqLine)
			Gui.FrmPO.GsGCReqs.GetCellValueByColumnName("gvReqs","UF_5",V.Args.RowIndex,V.Local.sUF5)
			F.Intrinsic.String.Build("SELECT * FROM GCG_5988_ReqUFs WHERE PO_REQ_NUMBER = '{0}' AND PO_REQ_LINE = '{1}';",V.Local.sReqNo,V.Local.sReqLine,V.Local.sSQL)
			F.ODBC.Connection!con.OpenRecordsetRW("rstReqUF",V.Local.sSQL)
			F.Intrinsic.Control.If(V.ODBC.con!rstREQUF.EOF,=,True)
				F.Intrinsic.String.Build("INSERT INTO GCG_5988_ReqUFs(PO_REQ_NUMBER,PO_REQ_LINE,UF_5) VALUES('{0}','{1}','{2}');",V.Local.sReqNo,V.Local.sReqLine,V.Local.sUF5,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("UPDATE GCG_5988_ReqUFs SET UF_5 = '{0}' WHERE PO_REQ_NUMBER = '{1}' AND PO_REQ_LINE = '{2}';",V.Local.sUF5,V.Local.sReqNo,V.Local.sReqLine,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
			F.ODBC.con!rstReqUF.Close				
			
	F.Intrinsic.Control.EndSelect
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCReqs_CellValueChanged.End

Program.Sub.LoadDTOSV.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	'Check to see if DataTable already Exists and if so, close it
	F.Intrinsic.Control.IF(V.DataTable.dtOSV.Exists,=,True)
		F.Data.DataTable.Close("dtOSV")
		Gui.FrmPO.GsGCOSV.ClearGrouping("gvOSV")
	F.Intrinsic.Control.EndIF

	'Create DataTable from SQL
	V.Local.sSQL.Declare(String,"SELECT C.OPERATION AS VENDOR,D.NAME_VENDOR,COALESCE(B.PART,'') AS MFG_PART,'' As DISPLAY_PART,C.DESCRIPTION,A.QUANTITY,A.JOB,A.JOB_SUFFIX,A.SEQUENCE,C.DATE_DUE,B.DATE_DUE AS JOB_DATE_DUE FROM V_MAT_ONLINE A LEFT OUTER JOIN V_JOB_HEADER B ON A.JOB = B.JOB AND A.JOB_SUFFIX = B.SUFFIX LEFT OUTER JOIN V_JOB_OPERATIONS C ON A.JOB = C.JOB AND A.JOB_SUFFIX = C.SUFFIX AND A.SEQUENCE = C.SEQ LEFT JOIN V_VENDOR_MASTER D ON C.OPERATION = D.VENDOR WHERE A.MOL_DELETE<>'Y' AND A.MOL_TYPE='O' ORDER BY C.DATE_DUE,C.OPERATION;")
	F.Data.DataTable.CreateFromSQL("dtOSV","con",V.Local.sSQL,True)
'	F.Intrinsic.Control.If(V.Global.bLongPart)
'		F.Data.DataTable.AddDisplayPartColumn("dtOSV",0,"MFG_PART","DISPLAY_PART")
'	F.Intrinsic.Control.Else
		F.Data.DataTable.CopyColumn("dtOSV","MFG_PART","DISPLAY_PART")
'	F.Intrinsic.Control.EndIf

	'Call Subroutine to build DataView, GridView and set GridView to Grid on form
	F.Intrinsic.Control.CallSub(loaddvgvosv)
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDTOSV.End

Program.Sub.LoadDvGvOSV.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRet.Declare
	V.Local.iCnt.Declare

	'Create GridView from DataView
	Gui.FrmPO.GsGCOSV.AddGridViewFromDataTable("gvOSV","dtOSV")
	Gui.FrmPO.GsGCOSV.SuspendLayout()
	'Set Grid Propertites
	Gui.FrmPO.GsGCOSV.SetGridViewProperty("gvOSV","MultiSelect",True)
	Gui.FrmPO.GsGCOSV.SetGridViewProperty("gvOSV","AllowSort",True)
	Gui.FrmPO.GsGCOSV.SetGridViewProperty("gvOSV","AllowFilter",True)
	Gui.FrmPO.GsGCOSV.SetGridViewProperty("gvOSV","OptionsDetailShowDetailTabs",False)
	Gui.FrmPO.GsGCOSV.SetGridViewProperty("gvOSV","OptionsViewShowGroupPanel",True)
	Gui.FrmPO.GsGCOSV.SetGridViewProperty("gvOSV","EnableAppearanceOddRow",True)
	Gui.FrmPO.GsGCOSV.SetGridviewProperty("gvOSV","OptionsFilterUseNewCustomFilterDialog",True)
	Gui.FrmPO.GsGCOSV.SetGridviewProperty("gvOSV","OptionsViewColumnAutoWidth",False)

	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","MFG_PART","Visible",False)
	
	Gui.frmPO.GsGCOSV.SetColumnProperty("gvOSV","VENDOR","Caption","Vendor")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","NAME_VENDOR","Caption","Vendor Name")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DISPLAY_PART","Caption","Mfg Part")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DESCRIPTION","Caption","Part Description")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","QUANTITY","Caption","Quantity")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB","Caption","Job")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_SUFFIX","Caption","Suffix")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","SEQUENCE","Caption","Seq")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DATE_DUE","Caption","Outside Due Date")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_DATE_DUE","Caption","WO Due Date")	

	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","VENDOR","MinWidth","30")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","NAME_VENDOR","MinWidth","150")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","MFG_PART","MinWidth","120")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DISPLAY_PART","MinWidth","120")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DESCRIPTION","MinWidth","180")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","QUANTITY","MinWidth","60")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB","MinWidth","45")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_SUFFIX","MinWidth","45")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","SEQUENCE","MinWidth","45")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DATE_DUE","MinWidth","95")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_DATE_DUE","MinWidth","90")
	
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","VENDOR","HeaderFontBold",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","NAME_VENDOR","HeaderFontBold",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","MFG_PART","HeaderFontBold",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DISPLAY_PART","HeaderFontBold",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DESCRIPTION","HeaderFontBold",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","QUANTITY","HeaderFontBold",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB","HeaderFontBold",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_SUFFIX","HeaderFontBold",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","SEQUENCE","HeaderFontBold",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DATE_DUE","HeaderFontBold",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_DATE_DUE","HeaderFontBold",True)

	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","VENDOR","HeaderHAlignment","Center")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","NAME_VENDOR","HeaderHAlignment","Center")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","QUANTITY","HeaderHAlignment","Center")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB","HeaderHAlignment","Center")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_SUFFIX","HeaderHAlignment","Center")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","SEQUENCE","HeaderHAlignment","Center")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DATE_DUE","HeaderHAlignment","Center")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_DATE_DUE","HeaderHAlignment","Center")

	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","VENDOR","CellHAlignment","Center")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","QUANTITY","CellHAlignment","Far")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB","CellHAlignment","Center")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_SUFFIX","CellHAlignment","Center")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","SEQUENCE","CellHAlignment","Center")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DATE_DUE","CellHAlignment","Center")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_DATE_DUE","CellHAlignment","Center")

'	f.Intrinsic.Control.If(v.Global.bOutsidePO)
'	f.Intrinsic.Control.AndIf(v.Global.bEditPO)
		Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DISPLAY_PART","CellForeColor","Blue")
'	f.Intrinsic.Control.EndIf	

	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","VENDOR","AllowEdit",False)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","MFG_PART","AllowEdit",False)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DISPLAY_PART","AllowEdit",False)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DESCRIPTION","AllowEdit",False)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","QUANTITY","AllowEdit",False)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB","AllowEdit",False)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_SUFFIX","AllowEdit",False)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","SEQUENCE","AllowEdit",False)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DATE_DUE","AllowEdit",False)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_DATE_DUE","AllowEdit",False)

	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","VENDOR","ReadOnly",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","MFG_PART","ReadOnly",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DISPLAY_PART","ReadOnly",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DESCRIPTION","ReadOnly",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","QUANTITY","ReadOnly",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB","ReadOnly",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_SUFFIX","ReadOnly",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","SEQUENCE","ReadOnly",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DATE_DUE","ReadOnly",True)
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_DATE_DUE","ReadOnly",True)

	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DATE_DUE","DisplayCustomDatetime","d")
	Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","JOB_DATE_DUE","DisplayCustomDatetime","d")
	
'	F.Intrinsic.Control.If(V.Global.bLongPart)
'		Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","MFG_PART","MinWidth","250")
'		Gui.FrmPO.GsGCOSV.SetColumnProperty("gvOSV","DISPLAY_PART","MinWidth","250")
'	F.Intrinsic.Control.EndIf

	Gui.FrmPO.GsGCOSV.ResumeLayout()
	Gui.FrmPO.GsGCOSV.MainView("gvOSV")
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDvGvOSV.End

Program.Sub.GSGCOSV_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
	V.Local.iRet.Declare

	F.Intrinsic.Control.BlockEvents
	F.Intrinsic.Control.SelectCase(V.Args.Column)
		F.Intrinsic.Control.Case("DISPLAY_PART")				
'		f.Intrinsic.Control.If(v.Global.bOutsidePO)
'		f.Intrinsic.Control.AndIf(v.Global.bEditPO)		
'		f.Intrinsic.Control.AndIf(V.Screen.FrmPO!optEdit.Value,=,True)
			F.Global.General.LaunchMenuTask(296,0,V.Local.iRet)
'		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.UnBlockEvents
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GSGCOSV_RowCellClick.End

Program.Sub.DeletePurchReqLine.Start
F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare		
	'DELETE Record
	F.Intrinsic.String.Build("DELETE FROM PURCHASE_REQS WHERE PO_REQ_NUMBER = '{0}' AND PO_REQ_LINE = '{1}';",V.Args.POReqNum,V.Args.POReqLine,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)
	'REQ text
	F.Intrinsic.String.Build("DELETE FROM REQSN_TEXT WHERE NUMBER = '{0}' AND LINE = '{1}';",V.Args.POReqNum,V.Args.POReqLine,V.Local.sSQL)
	F.ODBC.Connection!con.Execute(V.Local.sSQL)	
	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.CallSub("Unload")
	F.Intrinsic.Control.EndTry
Program.Sub.DeletePurchReqLine.End

Program.Sub.MenuClickDeleteReqLine_GsGCReqs.Start
'Change GL for Highlighted Rows
F.Intrinsic.Control.Try
	V.Local.sError.Declare	
	V.Local.iCnt.Declare
	v.Local.sRows.Declare
	v.Local.sGL.Declare
	v.Local.sSQL.Declare
	v.Local.sRet.Declare
	v.Local.sSelect.Declare
	v.Local.iSelect2.Declare
	v.Local.sDT.Declare
	v.Local.sGV.Declare
	v.Local.sFilter.Declare

	f.Intrinsic.Control.If(v.Global.gvReqs.Not)
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	V.Local.sGV.Set("gvReqs")
	V.Local.sDT.Set("dtReqs")
	
	'Remove Lines from DataTable	
	v.Local.sFilter.Set("Select = True")
	F.Data.DataTable.Select(V.Local.sDT,v.Local.sFilter,V.Local.sSelect)
	F.Intrinsic.Control.If(V.Local.sSelect,<>,"***NORETURN***")
		F.Intrinsic.String.Split(V.Local.sSelect,"*!*",V.Local.sSelect)
		F.Intrinsic.Control.For(V.Local.iCnt,V.Local.sSelect.UBound,0,-1)
			v.Local.iSelect2.Set(V.Local.sSelect(V.Local.iCnt))			
		'Delete Purchase Requisition Line			
		F.Intrinsic.Control.CallSub(DeletePurchReqLine,"POReqNum",V.DataTable.[V.Local.sDT](v.local.iSelect2).PO_Req_Number!FieldValTrim,"POReqLine",V.DataTable.[V.Local.sDT](v.local.iSelect2).PO_Req_Line!FieldValTrim)
		'Delete Row
		F.Data.DataTable.DeleteRow(V.Local.sDT,v.local.iSelect2)
		F.Data.DataTable.AcceptChanges(V.Local.sDT)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Data.DataTable.SetValue(V.Local.sDT,-1,"Select",False)
	F.Intrinsic.Control.EndIf
	
	
F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.CallSub("Unload")
F.Intrinsic.Control.EndTry
Program.Sub.MenuClickDeleteReqLine_GsGCReqs.End

Program.Sub.ddlPOs_Change.Start
Program.Sub.ddlPOs_Change.End

Program.Sub.Comments.Start
${$5$}$3.0.0.0$}$1
${$6$}$Angel$}$20220726171950604$}$KXl0r/FkrMYwb/r4ukQ87aOTsTN7X2ear/3Eq1c1Xn7ZVB1XHlfwjTaNNBC7CF0ZuWWq1iD3q1s=
Program.Sub.Comments.End
